[{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to EpiNow2","title":"Contributing to EpiNow2","text":"outlines propose change EpiNow2. general, accept contributions form issues /pull requests.","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/CONTRIBUTING.html","id":"grammatical-issues","dir":"","previous_headings":"Small changes","what":"Grammatical issues","title":"Contributing to EpiNow2","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line .Rd file /man directory.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/CONTRIBUTING.html","id":"big-changes","dir":"","previous_headings":"","what":"Big changes","title":"Contributing to EpiNow2","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. following counts big change:","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/CONTRIBUTING.html","id":"new-features","dir":"","previous_headings":"Big changes","what":"New features","title":"Contributing to EpiNow2","text":"can suggest idea new feature/enhancement. Please provide much detail use case possible. example, see extensive issue making model outputs S3 classes.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/CONTRIBUTING.html","id":"bugs","dir":"","previous_headings":"Big changes","what":"Bugs","title":"Contributing to EpiNow2","text":"found bug, ideally illustrate minimal reprex (also help write unit test, opt fix ). example bug report.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/CONTRIBUTING.html","id":"vignettes","dir":"","previous_headings":"Big changes","what":"Vignettes","title":"Contributing to EpiNow2","text":"find issue existing vignettes like help improve , outline suggested changes submitted issue discussion team. Use various GitHub markdown features (cross)reference lines, highlight suggested deletions/additions, etc. new vignettes, please provide outline vignette discussed team first. Since models EpiNow2 long run times cases, pre-compile vignettes merging. Please follow guide precompute vignettes pkgdown articles. example new pre-compiled vignettes submitted.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Big changes","what":"Pull request process","title":"Contributing to EpiNow2","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"epiforecasts/EpiNow2\", fork = TRUE). Install development dependences devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). use pre-commit check changes match package standards. optional can enabled using following steps. Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":"# if python is not installed on your system install.packages(\"reticulate\") reticulate::install_miniconda() # install precommit if not already installed precommit::install_precommit() # set up precommit for use precommit::use_precommit()"},{"path":"https://epiforecasts.io/EpiNow2/dev/CONTRIBUTING.html","id":"what-happens-after-submitting-a-pr","dir":"","previous_headings":"Big changes > Pull request process","what":"What happens after submitting a PR?","title":"Contributing to EpiNow2","text":"PRs reviewed team merged. review process begins continuous integration checks, manually triggered maintainer first-time contributors, passed. Github Actions checks currently take (hour), might helpful “watch” repository check email notification ’s done. Usually, review conversations occur PR. reviewer merges PR every issue resolved. Please use “Resolve conversation” functionality GitHub web interface indicate specific issue adressed, responding commit pointing change made applicable. PR ready merged, may asked rebase main branch. can checking branch running git rebase main. successful, commits placed top commit history main preparation merge. rebase might result merge conflicts. Make sure resolved, push changes branch (using --force option, , git push -f, required). number issues can cause Github checks fail. can helpful safeguard following: Check linting issues running lintr::lint_package(). Run devtoools::check() check wider package issues like mismatching documentation, etc. (currently requires fair bit time/computation). (Optional) Turn continuous integration Github Actions forked repository. case--case basis, may asked increment package version NEWS.md DESCRIPTION files. Please unless ’re asked . follow Tidyverse package versioning guide. can run usethis::use_version() automatically make changes interactively.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Big changes","what":"Code style","title":"Contributing to EpiNow2","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to EpiNow2","text":"Please note EpiNow2 project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 EpiForecasts Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/PULL_REQUEST_TEMPLATE.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"NA","text":"PR closes #.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/PULL_REQUEST_TEMPLATE.html","id":"initial-submission-checklist","dir":"","previous_headings":"","what":"Initial submission checklist","title":"NA","text":"PR based package issue explicitly linked . tested changes locally (using devtools::test() devtools::check()). added updated unit tests necessary. updated documentation required rebuilt docs yes (using devtools::document()). followed established coding standards (checked using lintr::lint_package()). added news item linked PR.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/PULL_REQUEST_TEMPLATE.html","id":"after-the-initial-pull-request","dir":"","previous_headings":"","what":"After the initial Pull Request","title":"NA","text":"reviewed Checks PR addressed issues far able.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/EpiNow2.html","id":"quick-start","dir":"Articles","previous_headings":"","what":"Quick start","title":"Getting started with EpiNow2","text":"following section give overview simple use case epinow() regional_epinow(). first step using package load follows.","code":"library(EpiNow2)"},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/EpiNow2.html","id":"reporting-delays-incubation-period-and-generation-time","dir":"Articles","previous_headings":"Quick start","what":"Reporting delays, incubation period and generation time","title":"Getting started with EpiNow2","text":"Distributions can supplied two ways. First, one can supply delay data estimate_delay(), subsampled bootstrapped lognormal fit account uncertainty observed data without biased changes incidence (see ?EpiNow2::estimate_delay()). Second, one can specify predetermined delays uncertainty using distribution functions Gamma Lognormal. arbitrary number delay distributions supported dist_spec() common use case incubation period followed reporting delay. information specifying distributions see (see ?EpiNow2::Distributions). example data delay onset infection available fit distribution , using estimate_delay(), appropriate uncertainty follows (note synthetic example), data available instead specify informed estimate likely delay using distribution functions Gamma LogNormal. demonstrate, choose lognormal distribution mean 2, standard deviation 1 maximum 10. just example unlikely apply particular use case. rest vignette, use inbuilt example literature estimates incubation period generation time Covid-19 (see code generates estimates). distributions unlikely applicable use case. strongly recommend investigating might best distributions use given use case. Users can also pass non-parametric delay distribution vector using NonParametric option generation interval reporting delays. important note , delay distributions 0-indexed, meaning first element corresponds probability mass day 0 individual’s infection. discretised renewal equation doesn’t support mass day 0, generation interval passed 0-indexed vector mass zero day 0. distributions passed downstream functions way parametric distributions . Now, functions.","code":"reporting_delay <- estimate_delay(   rlnorm(1000, log(2), 1),   max_value = 14, bootstraps = 1 ) reporting_delay <- LogNormal(mean = 2, sd = 1, max = 10) reporting_delay #> - lognormal distribution (max: 10): #>   meanlog: #>     0.58 #>   sdlog: #>     0.47 example_generation_time #> - gamma distribution (max: 14): #>   shape: #>     - normal distribution: #>       mean: #>         1.4 #>       sd: #>         0.48 #>   rate: #>     - normal distribution: #>       mean: #>         0.38 #>       sd: #>         0.25 example_incubation_period #> - lognormal distribution (max: 14): #>   meanlog: #>     - normal distribution: #>       mean: #>         1.6 #>       sd: #>         0.064 #>   sdlog: #>     - normal distribution: #>       mean: #>         0.42 #>       sd: #>         0.069 example_non_parametric_gi <-  NonParametric(pmf = c(0, 0.3, 0.5, 0.2))  example_non_parametric_delay <- NonParametric(pmf = c(0.01, 0.1, 0.5, 0.3, 0.09))"},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/EpiNow2.html","id":"epinow","dir":"Articles","previous_headings":"Quick start","what":"epinow()","title":"Getting started with EpiNow2","text":"function represents core functionality package includes results reporting, plotting, optional saving. requires data frame cases date report distributions defined . Load example case data EpiNow2. Estimate cases date infection, time-varying reproduction number, rate growth, forecast estimates future 7 days. Summarise posterior return summary table plots reporting purposes. target_folder supplied results can internally saved (option also turn explicit returning results). use default model parameterisation prioritises real-time performance run-time considerations. formulations see documentation estimate_infections(). summary measures posterior samples returned parameters easily explored format can accessed using summary. default return summary table estimates key parameters latest date partially supported data. Summarised parameter estimates can also easily returned, either filtered single parameter parameters. Reported cases returned separate data frame order streamline reporting forecasts model evaluation. range plots returned (single summary plot shown ). plots can also generated using following plot method.","code":"reported_cases <- example_confirmed[1:60] head(reported_cases) #>          date confirm #>        <Date>   <num> #> 1: 2020-02-22      14 #> 2: 2020-02-23      62 #> 3: 2020-02-24      53 #> 4: 2020-02-25      97 #> 5: 2020-02-26      93 #> 6: 2020-02-27      78 estimates <- epinow(   data = reported_cases,   generation_time = gt_opts(example_generation_time),   delays = delay_opts(example_incubation_period + reporting_delay),   rt = rt_opts(prior = LogNormal(mean = 2, sd = 0.2)),   stan = stan_opts(cores = 4),   verbose = interactive() ) names(estimates) #> [1] \"estimates\"                \"estimated_reported_cases\" #> [3] \"summary\"                  \"plots\"                    #> [5] \"timing\" knitr::kable(summary(estimates)) head(summary(estimates, type = \"parameters\", params = \"R\")) #>          date variable  strat     type   median     mean         sd lower_90 #>        <Date>   <char> <char>   <char>    <num>    <num>      <num>    <num> #> 1: 2020-02-22        R   <NA> estimate 2.283241 2.292722 0.14061810 2.075280 #> 2: 2020-02-23        R   <NA> estimate 2.247530 2.253561 0.12673725 2.054324 #> 3: 2020-02-24        R   <NA> estimate 2.205511 2.212174 0.11519281 2.027170 #> 4: 2020-02-25        R   <NA> estimate 2.163334 2.168677 0.10586586 1.999294 #> 5: 2020-02-26        R   <NA> estimate 2.119453 2.123228 0.09850283 1.968758 #> 6: 2020-02-27        R   <NA> estimate 2.073142 2.076018 0.09275383 1.933010 #>    lower_50 lower_20 upper_20 upper_50 upper_90 #>       <num>    <num>    <num>    <num>    <num> #> 1: 2.194590 2.249226 2.321517 2.389094 2.535033 #> 2: 2.165231 2.213345 2.278836 2.340448 2.469433 #> 3: 2.130656 2.177294 2.236996 2.289223 2.408927 #> 4: 2.093846 2.137319 2.191361 2.238409 2.350976 #> 5: 2.054041 2.095677 2.145131 2.188372 2.288978 #> 6: 2.010469 2.050364 2.096276 2.137579 2.233775 head(summary(estimates, output = \"estimated_reported_cases\")) #>          date   type median     mean       sd lower_90 lower_50 lower_20 #>        <Date> <char>  <num>    <num>    <num>    <num>    <num>    <num> #> 1: 2020-02-22  gp_rt     75  76.6065 21.32979    45.00       62       70 #> 2: 2020-02-23  gp_rt     88  89.4765 23.85403    55.00       73       82 #> 3: 2020-02-24  gp_rt     88  90.1225 24.67288    54.00       73       82 #> 4: 2020-02-25  gp_rt     80  82.5340 22.61151    49.95       67       75 #> 5: 2020-02-26  gp_rt     80  82.4475 22.69676    49.00       66       75 #> 6: 2020-02-27  gp_rt    109 111.4705 28.76635    69.00       92      103 #>    upper_20 upper_50 upper_90 #>       <num>    <num>    <num> #> 1:       80       90      114 #> 2:       94      104      132 #> 3:       94      105      133 #> 4:       86       95      124 #> 5:       86       97      123 #> 6:      116      129      163 plot(estimates)"},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/EpiNow2.html","id":"regional_epinow","dir":"Articles","previous_headings":"Quick start","what":"regional_epinow()","title":"Getting started with EpiNow2","text":"regional_epinow() function runs epinow() function across multiple regions efficient manner. Define cases multiple regions delineated region variable. Calling regional_epinow() runs epinow() region turn (parallel depending settings used). switch using weekly random walk rather full Gaussian process model giving us piecewise constant estimates week. Results region stored regional list across region summary measures plots stored summary list. results can set internally saved setting target_folder summary_dir arguments. region can estimated parallel using future package (scenarios cores set 1). routine use MCMC chain can also run parallel (future = TRUE) time (max_execution_time) allowing partial results returned subset chains running longer expected. See documentation future package details nested futures. Summary measures returned include table formatted reporting (along raw results processing). Futures updated extend S3 methods used smooth access output. range plots returned (single summary plot shown ).","code":"reported_cases <- data.table::rbindlist(list(   data.table::copy(reported_cases)[, region := \"testland\"],   reported_cases[, region := \"realland\"] )) head(reported_cases) #>          date confirm   region #>        <Date>   <num>   <char> #> 1: 2020-02-22      14 testland #> 2: 2020-02-23      62 testland #> 3: 2020-02-24      53 testland #> 4: 2020-02-25      97 testland #> 5: 2020-02-26      93 testland #> 6: 2020-02-27      78 testland estimates <- regional_epinow(   data = reported_cases,   generation_time = gt_opts(example_generation_time),   delays = delay_opts(example_incubation_period + reporting_delay),   rt = rt_opts(prior = LogNormal(mean = 2, sd = 0.2), rw = 7),   gp = NULL,   stan = stan_opts(cores = 4, warmup = 250, samples = 1000) ) #> INFO [2024-12-06 15:15:15] Producing following optional outputs: regions, summary, samples, plots, latest #> INFO [2024-12-06 15:15:15] Reporting estimates using data up to: 2020-04-21 #> INFO [2024-12-06 15:15:15] No target directory specified so returning output #> INFO [2024-12-06 15:15:15] Producing estimates for: testland, realland #> INFO [2024-12-06 15:15:15] Regions excluded: none #> INFO [2024-12-06 15:15:39] Completed estimates for: testland #> INFO [2024-12-06 15:16:01] Completed estimates for: realland #> INFO [2024-12-06 15:16:01] Completed regional estimates #> INFO [2024-12-06 15:16:01] Regions with estimates: 2 #> INFO [2024-12-06 15:16:01] Regions with runtime errors: 0 #> INFO [2024-12-06 15:16:01] Producing summary #> INFO [2024-12-06 15:16:01] No summary directory specified so returning summary output #> INFO [2024-12-06 15:16:02] No target directory specified so returning timings knitr::kable(estimates$summary$summarised_results$table) estimates$summary$summary_plot"},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/case-studies.html","id":"case-studies","dir":"Articles","previous_headings":"","what":"Case studies","title":"Case studies and use in the literature","text":"Estimating reporting delays nowcasting/forecasting infections EpiNow2 using HHS COVID-19 hospitalizations Sam Abbott, Zachary Susswein, Katie Gostic. Estimating reporting delays nowcasting/forecasting infections EpiNow2 Sebastian Funk Sam Abbott. Forecast Covid-19 reported deaths Covid-19 reported cases (observed forecast) country ECDC Sam Abbott. Explore Covid-19 data truncation England Sam Abbott. Estimate effective reproduction number Covid-19 last 3 months country Sam Abbott.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/case-studies.html","id":"public-health-surveillance","dir":"Articles","previous_headings":"","what":"Public health surveillance","title":"Case studies and use in the literature","text":"CDC. 2022. “Technical Report 3: Multi-National Monkeypox Outbreak, United States, 2022.” Centers Disease Control Prevention. October 3, 2022. https://www.cdc.gov/poxvirus/mpox/cases-data/technical-report/report-3.html.","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/case-studies.html","id":"by-package-authors","dir":"Articles","previous_headings":"Literature","what":"By package authors","title":"Case studies and use in the literature","text":"Abbott, Sam, Joel Hellewell, Robin N. Thompson, Katharine Sherratt, Hamish P. Gibbs, Nikos . Bosse, James D. Munday, et al. 2020. “Estimating Time-Varying Reproduction Number SARS-CoV-2 Using National Subnational Case Counts.” Wellcome Open Research 5 (December): 112. http://dx.doi.org/10.12688/wellcomeopenres.16006.2 Sherratt, Katharine, Sam Abbott, Sophie R. Meakin, Joel Hellewell, James D. Munday, Nikos Bosse, Null Null, Mark Jit, Sebastian Funk. 2021. “Exploring Surveillance Data Biases Estimating Reproduction Number: Insights Subpopulation Transmission COVID-19 England.” Philosophical Transactions Royal Society London. Series B, Biological Sciences 376 (1829): 20200283. http://dx.doi.org/10.1098/rstb.2020.0283 Bosse, Nikos ., Sam Abbott, Johannes Bracher, Habakuk Hain, Billy J. Quilty, Mark Jit, Centre Mathematical Modelling Infectious Diseases COVID-19 Working Group, Edwin van Leeuwen, Anne Cori, Sebastian Funk. 2022. “Comparing Human Model-Based Forecasts COVID-19 Germany Poland.” PLoS Computational Biology 18 (9): e1010405. http://dx.doi.org/10.1371/journal.pcbi.1010405 Davies, Nicholas G., Sam Abbott, Rosanna C. Barnard, Christopher . Jarvis, Adam J. Kucharski, James D. Munday, Carl . B. Pearson, et al. 2021. “Estimated Transmissibility Impact SARS-CoV-2 Lineage B.1.1.7 England.” Science 372 (6538). https://doi.org/10.1126/science.abg3055. Meakin, Sophie, Sam Abbott, Nikos Bosse, James Munday, Hugo Gruson, Joel Hellewell, Katharine Sherratt, CMMID COVID-19 Working Group, Sebastian Funk. 2022. “Comparative Assessment Methods Short-Term Forecasts COVID-19 Hospital Admissions England Local Level.” BMC Medicine 20 (1): 86. http://dx.doi.org/10.1186/s12916-022-02271-x","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/case-studies.html","id":"by-others","dir":"Articles","previous_headings":"Literature","what":"By others","title":"Case studies and use in the literature","text":"Hay, James ., Lee Kennedy-Shaffer, Sanjat Kanjilal, Niall J. Lennon, Stacey B. Gabriel, Marc Lipsitch, Michael J. Mina. 2021. “Estimating Epidemiologic Dynamics Cross-Sectional Viral Load Distributions.” Science 373 (6552). https://doi.org/10.1126/science.abh0635.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/epinow.html","id":"running-the-model-on-a-single-region","dir":"Articles","previous_headings":"","what":"Running the model on a single region","title":"Using epinow() for running in production mode","text":"run model production mode single region, set parameters way estimate_infections() (see Workflow vignette). use example delay generation time distributions come package. replaced parameters relevant system studied. can run epinow() function arguments estimate_infections(). initial messages indicate log files can found. want summarised results plots written can accessed later can use target_folder argument.","code":"library(\"EpiNow2\") #>  #> Attaching package: 'EpiNow2' #> The following object is masked from 'package:stats': #>  #>     Gamma options(mc.cores = 4) reported_cases <- example_confirmed[1:60] reporting_delay <- LogNormal(mean = 2, sd = 1, max = 10) delay <- example_incubation_period + reporting_delay rt_prior <- LogNormal(mean = 2, sd = 0.1) res <- epinow(reported_cases,   generation_time = generation_time_opts(example_generation_time),   delays = delay_opts(delay),   rt = rt_opts(prior = rt_prior) ) #> Logging threshold set at INFO for the name logger #> Writing EpiNow2 logs to the console and: #> '/tmp/RtmpM4AQFy/regional-epinow/2020-04-21.log'. #> Logging threshold set at INFO for the name logger #> Writing EpiNow2.epinow logs to the console and: #> '/tmp/RtmpM4AQFy/epinow/2020-04-21.log'. #> WARN [2024-12-06 15:12:56] epinow: There were 2 divergent transitions after warmup. See #> https://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup #> to find out why this is a problem and how to eliminate them. -  #> WARN [2024-12-06 15:12:56] epinow: Examine the pairs() plot to diagnose sampling problems #>  - res$plots$R"},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/epinow.html","id":"running-the-model-simultaneously-on-multiple-regions","dir":"Articles","previous_headings":"","what":"Running the model simultaneously on multiple regions","title":"Using epinow() for running in production mode","text":"package also contains functionality conduct inference contemporaneously (separately) production mode multiple time series, e.g. run model multiple regions. done regional_epinow() function. Say, example, construct dataset containing two regions, testland realland (simple example containing case data). run multiple regions using default options , use instead, wanted use Gaussian Process testland weekly random walk realland specify separately using opts_list() function package modifyList() R.","code":"cases <- example_confirmed[1:60] cases <- data.table::rbindlist(list(   data.table::copy(cases)[, region := \"testland\"],   cases[, region := \"realland\"]  )) region_rt <- regional_epinow(   data = cases,   generation_time = generation_time_opts(example_generation_time),   delays = delay_opts(delay),   rt = rt_opts(prior = rt_prior), ) #> INFO [2024-12-06 15:12:59] Producing following optional outputs: regions, summary, samples, plots, latest #> Logging threshold set at INFO for the name logger #> Writing EpiNow2 logs to the console and: #> '/tmp/RtmpM4AQFy/regional-epinow/2020-04-21.log'. #> Logging threshold set at INFO for the name logger #> Writing EpiNow2.epinow logs to: '/tmp/RtmpM4AQFy/epinow/2020-04-21.log'. #> INFO [2024-12-06 15:12:59] Reporting estimates using data up to: 2020-04-21 #> INFO [2024-12-06 15:12:59] No target directory specified so returning output #> INFO [2024-12-06 15:12:59] Producing estimates for: testland, realland #> INFO [2024-12-06 15:12:59] Regions excluded: none #> INFO [2024-12-06 15:14:04] Completed estimates for: testland #> INFO [2024-12-06 15:15:08] Completed estimates for: realland #> INFO [2024-12-06 15:15:08] Completed regional estimates #> INFO [2024-12-06 15:15:08] Regions with estimates: 2 #> INFO [2024-12-06 15:15:08] Regions with runtime errors: 0 #> INFO [2024-12-06 15:15:08] Producing summary #> INFO [2024-12-06 15:15:08] No summary directory specified so returning summary output #> INFO [2024-12-06 15:15:08] No target directory specified so returning timings ## summary region_rt$summary$summarised_results$table #>      Region New infections per day Expected change in daily reports #>      <char>                 <char>                           <fctr> #> 1: realland    2203 (1259 -- 3956)                Likely decreasing #> 2: testland    2237 (1281 -- 4185)                Likely decreasing #>    Effective reproduction no.           Rate of growth #>                        <char>                   <char> #> 1:         0.89 (0.71 -- 1.1) -0.031 (-0.096 -- 0.041) #> 2:          0.9 (0.71 -- 1.1) -0.027 (-0.097 -- 0.051) #>    Doubling/halving time (days) #>                          <char> #> 1:             -22 (17 -- -7.2) #> 2:             -26 (14 -- -7.2) ## plot region_rt$summary$plots$R gp <- opts_list(gp_opts(), cases) gp <- modifyList(gp, list(realland = NULL), keep.null = TRUE) rt <- opts_list(rt_opts(), cases, realland = rt_opts(rw = 7)) region_separate_rt <- regional_epinow(   data = cases,   generation_time = generation_time_opts(example_generation_time),   delays = delay_opts(delay),   rt = rt, gp = gp, ) #> INFO [2024-12-06 15:15:09] Producing following optional outputs: regions, summary, samples, plots, latest #> Logging threshold set at INFO for the name logger #> Writing EpiNow2 logs to the console and: #> '/tmp/RtmpM4AQFy/regional-epinow/2020-04-21.log'. #> Logging threshold set at INFO for the name logger #> Writing EpiNow2.epinow logs to: '/tmp/RtmpM4AQFy/epinow/2020-04-21.log'. #> INFO [2024-12-06 15:15:09] Reporting estimates using data up to: 2020-04-21 #> INFO [2024-12-06 15:15:09] No target directory specified so returning output #> INFO [2024-12-06 15:15:09] Producing estimates for: testland, realland #> INFO [2024-12-06 15:15:09] Regions excluded: none #> INFO [2024-12-06 15:16:23] Completed estimates for: testland #> INFO [2024-12-06 15:17:02] Completed estimates for: realland #> INFO [2024-12-06 15:17:02] Completed regional estimates #> INFO [2024-12-06 15:17:02] Regions with estimates: 2 #> INFO [2024-12-06 15:17:02] Regions with runtime errors: 0 #> INFO [2024-12-06 15:17:02] Producing summary #> INFO [2024-12-06 15:17:02] No summary directory specified so returning summary output #> INFO [2024-12-06 15:17:02] No target directory specified so returning timings ## summary region_separate_rt$summary$summarised_results$table #>      Region New infections per day Expected change in daily reports #>      <char>                 <char>                           <fctr> #> 1: realland    2072 (1008 -- 4386)                Likely decreasing #> 2: testland    2264 (1344 -- 3892)                Likely decreasing #>    Effective reproduction no.           Rate of growth #>                        <char>                   <char> #> 1:          0.85 (0.6 -- 1.2)  -0.039 (-0.11 -- 0.049) #> 2:          0.9 (0.71 -- 1.1) -0.026 (-0.091 -- 0.041) #>    Doubling/halving time (days) #>                          <char> #> 1:             -18 (14 -- -6.2) #> 2:             -26 (17 -- -7.6) ## plot region_separate_rt$summary$plots$R"},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections.html","id":"infection-model","dir":"Articles","previous_headings":"","what":"Infection model","title":"Model definition: estimate_infections()","text":"estimate_infections() supports range model formulations. describe commonly used highlight options. two main models new infections arise model renewal equation model non-mechanistic infection model. initialisation models involves estimating initial infection trajectory seeding_time tseedt_\\mathrm{seed} (set mean modelled delays infection observation) precedes first observation time t=0t=0.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections.html","id":"renewal-equation-model","dir":"Articles","previous_headings":"Infection model","what":"Renewal equation model","title":"Model definition: estimate_infections()","text":"default model used rt != NULL. New infections generated discrete time steps one day via renewal equation[1]. infections mapped observations via discrete convolutions delay distributions.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections.html","id":"initialisation","dir":"Articles","previous_headings":"Infection model > Renewal equation model","what":"Initialisation","title":"Model definition: estimate_infections()","text":"model initialised first observed data point assuming constant exponential growth mean modelled delays infection case report (called seeding_time tseedt_\\mathrm{seed} model): I0∼LogNormal(Iobs,(Iobs))r∼Normal(robs,0.2)I0<t≤tseed=I0exp(rt)\\begin{align}   I_0  &\\sim \\mathrm{LogNormal}(I_\\mathrm{obs}, \\sqrt(I_\\mathrm{obs})) \\\\   r &\\sim \\mathrm{Normal}(r_\\mathrm{obs}, 0.2)\\\\   I_{0 < t \\leq t_\\mathrm{seed}} &= I_0 \\exp  \\left(r t \\right) \\end{align} ItI_{t} number latent infections day tt, rr estimate initial growth rate, IobsI_\\mathrm{obs} robsr_\\mathrm{obs} estimated first week observed data, respectively, point estimates intercept slope fitting linear regression model first 7 days data (data fewer 7 days data given), log(Ct)=+robst+ϵt\\begin{equation} log(C_t) = + r_\\mathrm{obs} t + \\epsilon_t \\end{equation} CtC_{t} number reported cases day tt, aa estimated intercept, ϵt\\epsilon_{t} error term.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections.html","id":"infections","dir":"Articles","previous_headings":"Infection model > Renewal equation model","what":"Infections","title":"Model definition: estimate_infections()","text":"time window observed data beyond infections modelled weighting previous infections generation time scaling instantaneous reproduction number: =Rt∑τ=1gmaxg(τ|μg,σg)−τ\\begin{equation}   I_t = R_t \\sum_{\\tau = 1}^{g_\\mathrm{max}} g(\\tau | \\mu_{g}, \\sigma_{g}) I_{t - \\tau} \\end{equation} g(τ|μg,σg)g(\\tau|\\mu_{g}, \\sigma_{g}) distribution generation times (discretised gamma discretised log normal distributions available options) mean (log mean case lognormal distributions) μg\\mu_g, standard deviation (log standard deviation case lognormal distributions) σg\\sigma_g maximum gmaxg_\\mathrm{max}. Generation times can either specified coming distribution uncertainty giving mean standard deviations normal priors, weighted default number observations (although can changed user) truncated positive relevant given distribution; can specified parameters fixed distribution, fixed values. distribution generation times gg represents probability somebody became infectious day 0 infects someone else course infection day τ>0\\tau > 0, assuming infection happen day 0. given defaults fixed generation time 1, case RtR_{t} represents exponential daily growth rate infections.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections.html","id":"time-varying-reproduction-number","dir":"Articles","previous_headings":"Infection model > Renewal equation model","what":"Time-varying reproduction number","title":"Model definition: estimate_infections()","text":"Different options available setting prior RtR_t, instantaneous reproduction number time tt. default prior approximate zero-mean Gaussian Process (GP) first differences time log scale, logRt−logRt−1∼GPt\\begin{equation}   \\log R_{t} - \\log R_{t-1} \\sim \\mathrm{GP}_t \\end{equation} details mathematical form GP approximation implementation given Gaussian Process implementation details vignette. choices prior RtR_t available GP prior difference RtR_t mean value (implying absence data RtR_t revert prior mean rather last value robust support data). logRt−logR0∼GPt\\begin{equation}   \\log R_{t} - \\log R_0 \\sim \\mathrm{GP}_t \\end{equation} , specific case Gaussian Process, random walk arbitrary length ww. logRt÷w∼Normal(Rt÷(w−1),σR)σR∼HalfNormal(0,0.1)\\begin{align}   \\log R_{t \\div w} &\\sim \\mathrm{Normal} (R_{t \\div (w - 1)}, \\sigma_R)\\\\   \\sigma_R &\\sim \\mathrm{HalfNormal}(0, 0.1) \\end{align} ÷\\div indicates interval-valued division (.e. floor division), example w=1w=1 indicates daily w=7w=7 weekly random walk. choice prior time-varying reproduction number impact run-time, smoothness estimates real-time behaviour may alter best use-case model. initial reproduction number R0R_{0} log-normal prior given log mean μR\\mu_{R} log standard deviation σR\\sigma_{R}, calculated given mean (default: 1) standard deviation (default: 1). R0∼LogNormal(μR,σR)\\begin{equation}   R_0 \\sim \\mathrm{LogNormal}(\\mu_R, \\sigma_R) \\end{equation} simplest possible process model option use time-varying prior rely just intial fixed reproduction number R0R_0.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections.html","id":"beyond-the-end-of-the-observation-period","dir":"Articles","previous_headings":"Infection model > Renewal equation model","what":"Beyond the end of the observation period","title":"Model definition: estimate_infections()","text":"Beyond end observation period (TT), default, Gaussian process assumed continue. However, range options. included fixing transmission dynamics (optionally can also done end observation period), scaling RtR_t based proportion population remain susceptible. defined followed, =(N−−1c)(1−exp(−′tN−ITc)),\\begin{equation}     I_t = (N - ^c_{t-1}) \\left(1 - \\exp \\left(\\frac{-'_t}{N - ^c_{T}}\\right)\\right), \\end{equation} Itc=∑s<tIsI^c_t = \\sum_{s< t} I_s cumulative infections t−1t-1 ′tI'_t unadjusted infections defined . adjustment based one implemented epidemia R package[2].","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections.html","id":"non-mechanistic-infection-model","dir":"Articles","previous_headings":"Infection model","what":"Non-Mechanistic infection model","title":"Model definition: estimate_infections()","text":"alternative model can used setting rt = NULL assumes less epidemiological mechanism directly modelling infections log scale range process models. default, uses Gaussian Process prior number new infections day (log scale) although alternatively infections can estimated using prior based fixed backwards mapping observed cases. general, model options computationally efficient renewal process model may less robust due lack epidemiological process model (.e. dependence placed assumptions Gaussian process prior).","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections.html","id":"initialisation-1","dir":"Articles","previous_headings":"Infection model > Non-Mechanistic infection model","what":"Initialisation","title":"Model definition: estimate_infections()","text":"order initialise model, initial estimate IestI_\\mathrm{est} infection trajectory first created first shifting observations back time tseedt_\\mathrm{seed} smoothing observation data moving average window size zz (default: z=14z=14), allocated centre window: Iest,t<T−tseed=1z∑max(−tseed,t−z/2)min(tobs,t+z/2)Iobs,t+tseed\\begin{align}   I_{\\mathrm{est}, t \\lt T - t_\\mathrm{seed}} = \\frac{1}{z} \\sum_{\\max(-t_\\mathrm{seed}, t - z/2)}^{\\min(t_\\mathrm{obs}, t + z/2)} I_{\\mathrm{obs}, t + t_\\mathrm{seed}} \\end{align} TT day last observation, z/2z/2 rounded nearest integer limits sum, Iobs,t<0=0I_\\mathrm{obs, t \\lt 0} = 0. date Iest,t=0I_{\\mathrm{est}, t} = 0 cases following procedure allocated 1 case facilitate processing model. times t>T−tseedt > T - t_\\mathrm{seed} number infections estimated fitting exponential curve final week data extrapolating end forecast horizon.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections.html","id":"infections-1","dir":"Articles","previous_headings":"Infection model > Non-Mechanistic infection model","what":"Infections","title":"Model definition: estimate_infections()","text":"default, Gaussian Process prior used number infections, resulting smoother estimates infection curve. case, renewal equation model two alternative formulations available. default uses approximate zero-mean GP differences modelled infections initial estimate, logIt−logIest,t∼GPt\\begin{equation}   \\log I_{t} - \\log I_{\\mathrm{est}, t} \\sim \\mathrm{GP}_t \\end{equation} Alternatively, one can use approximate zero-mean Gaussian Process (GP) first differences time log scale, logIt−logIt−1∼GPt\\begin{equation}   \\log I_{t} - \\log I_{t-1} \\sim \\mathrm{GP}_t \\end{equation} logI0−logIest,0∼GP0\\log I_{0} - \\log I_{\\mathrm{est}, 0} \\sim \\mathrm{GP}_{0} details mathematical form Gaussian process approximation given Gaussian Process implementation details vignette. renewal equation model, Gaussian process can replaced random walk arbitrary length ww. using fixed shift infections reported cases process model IestI_\\mathrm{est} used estimated infection curve (potentially scaled take account underreporting, see section Delays scaling).","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections.html","id":"time-varying-reproduction-number-1","dir":"Articles","previous_headings":"Infection model > Non-Mechanistic infection model","what":"Time-varying reproduction number","title":"Model definition: estimate_infections()","text":"model prior time-varying reproduction number. Instead, calculated renewal equation post-processing step Rt=∑τ=1gmaxg(τ|μg,σg)−τ\\begin{equation}   R_t = \\frac{I_{t}}{\\sum_{\\tau = 1}^{g_\\mathrm{max}} g(\\tau | \\mu_{g}, \\sigma_{g}) I_{t - \\tau}} \\end{equation} optionally smoothed using centred rolling mean window size can set user.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections.html","id":"beyond-the-end-of-the-observation-period-1","dir":"Articles","previous_headings":"Infection model > Non-Mechanistic infection model","what":"Beyond the end of the observation period","title":"Model definition: estimate_infections()","text":"Beyond end observation period, default, using Gaussian process assumed continue. Alternatively, incidence can fixed ether estimate TT less recent, certain estimate.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections.html","id":"delays-and-scaling","dir":"Articles","previous_headings":"","what":"Delays and scaling","title":"Model definition: estimate_infections()","text":"infections observed delay (example, incubation period based symptomatic cases, delay onset report), convolved model infections time scale observations DtD_{t} using delay distributions (lognormal gamma parameterisations available) ξ\\xi, scaled underreporting factor α\\alpha (1 infections observed). model can defined mathematically follows, Dt=α∑τ=0ξmaxξ(τ|μξ,σξ)−τ\\begin{equation}   D_t = \\alpha \\sum_{\\tau = 0}^{\\xi_\\mathrm{max}} \\xi (\\tau | \\mu_{\\xi}, \\sigma_{\\xi}) I_{t-\\tau} \\end{equation} ξ(τ|μξ,σξ)\\xi(\\tau|\\mu_{\\xi}, \\sigma_{\\xi}) combined discrete distribution delays (discretised gamma discretised log normal distributions available options) mean (log mean case lognormal distributions) μξ\\mu_\\xi, standard deviation (log standard deviation case lognormal distributions) σξ\\sigma_\\xi maximum ξmax\\xi_\\mathrm{max}. Delays can either specified coming distribution uncertainty giving mean standard deviations normal priors, weighted number observations truncated positive relevant given distribution; can specified parameters fixed distribution, fixed values. scaling factor α\\alpha represents proportion cases ultimately reported, default set 1 (.e. underreporting) can instead set come normal prior given mean standard deviation, truncated 0 1.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections.html","id":"observation-model","dir":"Articles","previous_headings":"","what":"Observation model","title":"Model definition: estimate_infections()","text":"modelled counts DtD_{t} related observations CtC_{t}. default assumed follow negative binomial distribution overdispersion φ\\varphi (alternatively can modelled Poisson, case φ\\varphi used): Ct∼NegBinom(ω(tmodnω)Dt,φ)\\begin{align}   C_t &\\sim \\mathrm{NegBinom}\\left(\\omega_{(t \\mod n_\\omega)}D_t, \\varphi\\right) \\end{align} ωtmodnω\\omega_{t \\mod n_\\omega} daily reporting effect cyclicity nωn_{\\omega}. nω=7n_{\\omega}=7 corresponds day---week reporting effect. model uses following priors observation model, ωnω∼Dirichlet(1,…,1)1φ∼HalfNormal(0,1)\\begin{align}     \\frac{\\omega}{n_\\omega} &\\sim \\mathrm{Dirichlet}(1, \\ldots, 1) \\\\     \\frac{1}{\\sqrt{\\varphi}} &\\sim \\mathrm{HalfNormal}(0, 1) \\end{align}","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections.html","id":"truncation","dir":"Articles","previous_headings":"Observation model","what":"Truncation","title":"Model definition: estimate_infections()","text":"model supports counts right-truncated, .e. reported delay leading recent counts subject future upwards revision. Denoting final truncated counts Dt*D^{\\ast}_{t} obtained form final modelled cases DtD_{t} applying given discrete truncation distribution ζ(τ|μζ,σζ)\\zeta(\\tau | \\mu_{\\zeta}, \\sigma_{\\zeta}) cumulative mass function Z(τ|μζ)Z(\\tau | \\mu_{\\zeta}): Dastt=Z(T−t|μZ,σZ)Dt\\begin{equation}   D^ast_t = Z(T - t | \\mu_{Z}, \\sigma_{Z}) D_{t} \\end{equation} truncation applied, modelled cases DtD_{t} replaced truncated counts confronting observations CtC_{t} described .","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections_options.html","id":"set-up","dir":"Articles","previous_headings":"","what":"Set up","title":"Examples: estimate_infections()","text":"first load EpiNow2 package also rstan package use later show differences run times different model options. examples set number cores use 4 optimal value depend computing resources available.","code":"library(\"EpiNow2\") #>  #> Attaching package: 'EpiNow2' #> The following object is masked from 'package:stats': #>  #>     Gamma library(\"rstan\") #> Loading required package: StanHeaders #>  #> rstan version 2.32.6 (Stan version 2.32.2) #> For execution on a local, multicore CPU with excess RAM we recommend calling #> options(mc.cores = parallel::detectCores()). #> To avoid recompilation of unchanged Stan programs, we recommend calling #> rstan_options(auto_write = TRUE) #> For within-chain threading using `reduce_sum()` or `map_rect()` Stan functions, #> change `threads_per_chain` option: #> rstan_options(threads_per_chain = 1) options(mc.cores = 4)"},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections_options.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Examples: estimate_infections()","text":"use example data set included package, representing outbreak COVID-19 initial rapid increase followed decreasing incidence.","code":"library(\"ggplot2\") reported_cases <- example_confirmed[1:60] ggplot(reported_cases, aes(x =  date, y = confirm)) +   geom_col() +   theme_minimal() +   xlab(\"Date\") +   ylab(\"Cases\")"},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections_options.html","id":"parameters","dir":"Articles","previous_headings":"","what":"Parameters","title":"Examples: estimate_infections()","text":"running model need decide parameter values, particular delays, generation time, prior initial reproduction number.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections_options.html","id":"delays-incubation-period-and-reporting-delay","dir":"Articles","previous_headings":"Parameters","what":"Delays: incubation period and reporting delay","title":"Examples: estimate_infections()","text":"Delays reflect time passes infection reporting, exist. example, assume two delays, incubation period (.e. delay infection symptom onset) reporting delay (.e. delay symptom onset recorded symptomatic case). delays usually everyone instead characterised distribution. incubation period use example literature included package. reporting delay, use lognormal distribution mean 2 days standard deviation 1 day. Note mean standard deviation must converted log scale, can done using convert_log_logmean() function. EpiNow2 provides feature allows us combine delays one summing ","code":"example_incubation_period #> - lognormal distribution (max: 14): #>   meanlog: #>     - normal distribution: #>       mean: #>         1.6 #>       sd: #>         0.064 #>   sdlog: #>     - normal distribution: #>       mean: #>         0.42 #>       sd: #>         0.069 reporting_delay <- LogNormal(mean = 2, sd = 1, max = 10) reporting_delay #> - lognormal distribution (max: 10): #>   meanlog: #>     0.58 #>   sdlog: #>     0.47 delay <- example_incubation_period + reporting_delay delay #> Composite distribution: #> - lognormal distribution (max: 14): #>   meanlog: #>     - normal distribution: #>       mean: #>         1.6 #>       sd: #>         0.064 #>   sdlog: #>     - normal distribution: #>       mean: #>         0.42 #>       sd: #>         0.069 #> - lognormal distribution (max: 10): #>   meanlog: #>     0.58 #>   sdlog: #>     0.47"},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections_options.html","id":"generation-time","dir":"Articles","previous_headings":"Parameters","what":"Generation time","title":"Examples: estimate_infections()","text":"want estimate reproduction number need provide distribution generation times. use example literature included package.","code":"example_generation_time #> - gamma distribution (max: 14): #>   shape: #>     - normal distribution: #>       mean: #>         1.4 #>       sd: #>         0.48 #>   rate: #>     - normal distribution: #>       mean: #>         0.38 #>       sd: #>         0.25"},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections_options.html","id":"initial-reproduction-number","dir":"Articles","previous_headings":"Parameters","what":"Initial reproduction number","title":"Examples: estimate_infections()","text":"Lastly need choose prior initial value reproduction number. assumed model normally distributed can set mean standard deviation. decide set mean 2 standard deviation 1.","code":"rt_prior <- LogNormal(mean = 2, sd = 0.1)"},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections_options.html","id":"running-the-model","dir":"Articles","previous_headings":"","what":"Running the model","title":"Examples: estimate_infections()","text":"now ready run model following show number possible options .","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections_options.html","id":"default-options","dir":"Articles","previous_headings":"Running the model","what":"Default options","title":"Examples: estimate_infections()","text":"default model uses renewal equation infections Gaussian Process prior reproduction number. Putting data parameters together tweaking Gaussian Process shorter length scale prior default run.","code":"def <- estimate_infections(reported_cases,   generation_time = gt_opts(example_generation_time),   delays = delay_opts(delay),   rt = rt_opts(prior = rt_prior) ) #> Warning: There were 2 divergent transitions after warmup. See #> https://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup #> to find out why this is a problem and how to eliminate them. #> Warning: Examine the pairs() plot to diagnose sampling problems # summarise results summary(def) #>                             measure                 estimate #>                              <char>                   <char> #> 1:           New infections per day      2268 (1284 -- 4221) #> 2: Expected change in daily reports        Likely decreasing #> 3:       Effective reproduction no.        0.9 (0.71 -- 1.1) #> 4:                   Rate of growth -0.027 (-0.095 -- 0.052) #> 5:     Doubling/halving time (days)         -26 (13 -- -7.3) # elapsed time (in seconds) get_elapsed_time(def$fit) #>         warmup sample #> chain:1 23.529 18.991 #> chain:2 29.477 28.414 #> chain:3 37.718 18.235 #> chain:4 38.292 14.125 # summary plot plot(def)"},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections_options.html","id":"reducing-the-accuracy-of-the-approximate-gaussian-process","dir":"Articles","previous_headings":"Running the model","what":"Reducing the accuracy of the approximate Gaussian Process","title":"Examples: estimate_infections()","text":"speed calculation Gaussian Process decrease accuracy, e.g. decrease proportion time points use basis functions default 0.2 0.1.","code":"agp <- estimate_infections(reported_cases,   generation_time = gt_opts(example_generation_time),   delays = delay_opts(delay),   rt = rt_opts(prior = rt_prior),   gp = gp_opts(basis_prop = 0.1) ) # summarise results summary(agp) #>                             measure                 estimate #>                              <char>                   <char> #> 1:           New infections per day      2257 (1280 -- 4106) #> 2: Expected change in daily reports        Likely decreasing #> 3:       Effective reproduction no.        0.9 (0.71 -- 1.1) #> 4:                   Rate of growth -0.029 (-0.099 -- 0.048) #> 5:     Doubling/halving time (days)           -24 (15 -- -7) # elapsed time (in seconds) get_elapsed_time(agp$fit) #>         warmup sample #> chain:1 28.106 18.768 #> chain:2 24.271 19.359 #> chain:3 22.602 30.107 #> chain:4 26.954 20.210 # summary plot plot(agp)"},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections_options.html","id":"adjusting-for-future-susceptible-depletion","dir":"Articles","previous_headings":"Running the model","what":"Adjusting for future susceptible depletion","title":"Examples: estimate_infections()","text":"might want adjust future susceptible depletion. , setting population 1000000 projecting reproduction number latest estimate (rather default, fixes reproduction number earlier time point based given reporting delays). Note affects forecasts done using crude adjustment (see model definition).","code":"dep <- estimate_infections(reported_cases,   generation_time = gt_opts(example_generation_time),   delays = delay_opts(delay),   rt = rt_opts(     prior = rt_prior,     pop = 1000000, future = \"latest\"   ) ) # summarise results summary(dep) #>                             measure                 estimate #>                              <char>                   <char> #> 1:           New infections per day      2259 (1304 -- 4143) #> 2: Expected change in daily reports        Likely decreasing #> 3:       Effective reproduction no.        0.9 (0.71 -- 1.1) #> 4:                   Rate of growth -0.029 (-0.096 -- 0.051) #> 5:     Doubling/halving time (days)         -24 (14 -- -7.2) # elapsed time (in seconds) get_elapsed_time(dep$fit) #>         warmup sample #> chain:1 42.625 23.562 #> chain:2 31.544 20.825 #> chain:3 40.299 20.096 #> chain:4 38.885 20.701 # summary plot plot(dep)"},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections_options.html","id":"adjusting-for-truncation-of-the-most-recent-data","dir":"Articles","previous_headings":"Running the model","what":"Adjusting for truncation of the most recent data","title":"Examples: estimate_infections()","text":"might want adjust right-truncation recent data estimated using estimate_truncation model. , instead assume know truncation mean 1/2 day, sd 1/2 day, following lognormal distribution maximum three days. can use esimtate_infections() function using truncation option.","code":"trunc_dist <- LogNormal(   mean = 0.5,   sd = 0.5,   max = 3 ) trunc_dist #> - lognormal distribution (max: 3): #>   meanlog: #>     -1 #>   sdlog: #>     0.83 trunc <- estimate_infections(reported_cases,   generation_time = gt_opts(example_generation_time),   delays = delay_opts(delay),   truncation = trunc_opts(trunc_dist),   rt = rt_opts(prior = rt_prior) ) # summarise results summary(trunc) #>                             measure               estimate #>                              <char>                 <char> #> 1:           New infections per day    4273 (2401 -- 8111) #> 2: Expected change in daily reports      Likely increasing #> 3:       Effective reproduction no.      1.1 (0.87 -- 1.4) #> 4:                   Rate of growth 0.032 (-0.043 -- 0.13) #> 5:     Doubling/halving time (days)        21 (5.5 -- -16) # elapsed time (in seconds) get_elapsed_time(trunc$fit) #>         warmup sample #> chain:1 32.460 19.479 #> chain:2 36.538 18.114 #> chain:3 24.322 31.656 #> chain:4 30.328 20.364 # summary plot plot(trunc)"},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections_options.html","id":"projecting-the-reproduction-number-with-the-gaussian-process","dir":"Articles","previous_headings":"Running the model","what":"Projecting the reproduction number with the Gaussian Process","title":"Examples: estimate_infections()","text":"Instead keeping reproduction number fixed certain time point might want extrapolate Gaussian Process future. lead wider uncertainty, researcher check whether fixing reproduction number earlier desirable.","code":"project_rt <- estimate_infections(reported_cases,   generation_time = gt_opts(example_generation_time),   delays = delay_opts(delay),   rt = rt_opts(     prior = rt_prior, future = \"project\"   ) ) # summarise results summary(project_rt) #>                             measure                 estimate #>                              <char>                   <char> #> 1:           New infections per day      2277 (1300 -- 4159) #> 2: Expected change in daily reports        Likely decreasing #> 3:       Effective reproduction no.        0.9 (0.71 -- 1.1) #> 4:                   Rate of growth -0.028 (-0.098 -- 0.052) #> 5:     Doubling/halving time (days)           -25 (13 -- -7) # elapsed time (in seconds) get_elapsed_time(project_rt$fit) #>         warmup sample #> chain:1 41.792 18.973 #> chain:2 34.302 20.610 #> chain:3 38.729 18.627 #> chain:4 33.687 20.569 # summary plot plot(project_rt)"},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections_options.html","id":"fixed-reproduction-number","dir":"Articles","previous_headings":"Running the model","what":"Fixed reproduction number","title":"Examples: estimate_infections()","text":"might want estimate fixed reproduction number, .e. assume change.","code":"fixed <- estimate_infections(reported_cases,   generation_time = gt_opts(example_generation_time),   delays = delay_opts(delay),   gp = NULL ) # summarise results summary(fixed) #>                             measure               estimate #>                              <char>                 <char> #> 1:           New infections per day  15719 (9135 -- 27752) #> 2: Expected change in daily reports             Increasing #> 3:       Effective reproduction no.       1.2 (1.1 -- 1.3) #> 4:                   Rate of growth 0.048 (0.033 -- 0.062) #> 5:     Doubling/halving time (days)          14 (11 -- 21) # elapsed time (in seconds) get_elapsed_time(fixed$fit) #>         warmup sample #> chain:1  3.135  2.078 #> chain:2  3.071  1.926 #> chain:3  2.708  1.865 #> chain:4  3.069  1.897 # summary plot plot(fixed)"},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections_options.html","id":"breakpoints","dir":"Articles","previous_headings":"Running the model","what":"Breakpoints","title":"Examples: estimate_infections()","text":"Instead assuming reproduction number varies freely fixed, can assume fixed breakpoints. can done adding breakpoint column reported case data set. e.g. think reproduction number constant like allow change 16th March 2020 define new case data set using use instead reported_cases estimate_infections() function:","code":"bp_cases <- data.table::copy(reported_cases) bp_cases <- bp_cases[,  breakpoint := ifelse(date == as.Date(\"2020-03-16\"), 1, 0) ] bkp <- estimate_infections(bp_cases,   generation_time = gt_opts(example_generation_time),   delays = delay_opts(delay),   rt = rt_opts(prior = rt_prior),   gp = NULL ) # summarise results summary(bkp) #>                             measure                 estimate #>                              <char>                   <char> #> 1:           New infections per day      2363 (1947 -- 2891) #> 2: Expected change in daily reports               Decreasing #> 3:       Effective reproduction no.      0.89 (0.86 -- 0.92) #> 4:                   Rate of growth -0.027 (-0.034 -- -0.02) #> 5:     Doubling/halving time (days)         -26 (-35 -- -20) # elapsed time (in seconds) get_elapsed_time(bkp$fit) #>         warmup sample #> chain:1  4.777  4.458 #> chain:2  4.579  4.862 #> chain:3  4.953  5.284 #> chain:4  4.385  5.380 # summary plot plot(bkp)"},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections_options.html","id":"weekly-random-walk","dir":"Articles","previous_headings":"Running the model","what":"Weekly random walk","title":"Examples: estimate_infections()","text":"Instead smooth Gaussian Process might want reproduction number change step-wise, e.g. every week. can achieved using rw option defines length time step random walk reproduction number assumed follow.","code":"rw <- estimate_infections(reported_cases,   generation_time = gt_opts(example_generation_time),   delays = delay_opts(delay),   rt = rt_opts(prior = rt_prior, rw = 7),   gp = NULL ) # summarise results summary(rw) #>                             measure                estimate #>                              <char>                  <char> #> 1:           New infections per day     2079 (1032 -- 4439) #> 2: Expected change in daily reports       Likely decreasing #> 3:       Effective reproduction no.      0.86 (0.62 -- 1.2) #> 4:                   Rate of growth -0.038 (-0.12 -- 0.047) #> 5:     Doubling/halving time (days)          -18 (15 -- -6) # elapsed time (in seconds) get_elapsed_time(rw$fit) #>         warmup sample #> chain:1  9.655 15.971 #> chain:2  9.614 16.314 #> chain:3  9.230 12.979 #> chain:4 10.482 16.692 # summary plot plot(rw)"},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections_options.html","id":"no-delays","dir":"Articles","previous_headings":"Running the model","what":"No delays","title":"Examples: estimate_infections()","text":"Whilst EpiNow2 allows user specify delays, can also run directly data e.g. EpiEstim package.","code":"no_delay <- estimate_infections(   reported_cases,   generation_time = gt_opts(example_generation_time) ) # summarise results summary(no_delay) #>                             measure                  estimate #>                              <char>                    <char> #> 1:           New infections per day       2801 (2409 -- 3289) #> 2: Expected change in daily reports                Decreasing #> 3:       Effective reproduction no.        0.89 (0.8 -- 0.98) #> 4:                   Rate of growth -0.03 (-0.064 -- 0.00074) #> 5:     Doubling/halving time (days)          -23 (940 -- -11) # elapsed time (in seconds) get_elapsed_time(no_delay$fit) #>         warmup sample #> chain:1 40.605 34.244 #> chain:2 44.485 36.481 #> chain:3 41.615 37.638 #> chain:4 38.434 40.516 # summary plot plot(no_delay)"},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections_options.html","id":"non-parametric-infection-model","dir":"Articles","previous_headings":"Running the model","what":"Non-parametric infection model","title":"Examples: estimate_infections()","text":"package also includes non-parametric infection model. runs much faster use renewal equation generate infections. none options defining behaviour reproduction number available case, limiting user choice model generality. also means model questionable forecasting, set predictive horizon 0.","code":"non_parametric <- estimate_infections(reported_cases,   generation_time = gt_opts(example_generation_time),   delays = delay_opts(delay),   rt = NULL,   backcalc = backcalc_opts(),   horizon = 0 ) # summarise results summary(non_parametric) #>                             measure                  estimate #>                              <char>                    <char> #> 1:           New infections per day       2730 (2688 -- 2774) #> 2: Expected change in daily reports                Decreasing #> 3:       Effective reproduction no.       0.92 (0.86 -- 0.96) #> 4:                   Rate of growth -0.024 (-0.025 -- -0.022) #> 5:     Doubling/halving time (days)          -29 (-31 -- -28) # elapsed time (in seconds) get_elapsed_time(non_parametric$fit) #>         warmup sample #> chain:1  4.475  0.516 #> chain:2  4.663  0.641 #> chain:3  4.827  0.549 #> chain:4  4.169  0.725 # summary plot plot(non_parametric)"},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections_workflow.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Workflow for Rt estimation and forecasting","text":"Obtaining good full understanding data used important first step inference procedure one applied . EpiNow2 expects data format data frame two columns, date confirm, confirm stands number confirmed counts - although reality can applied data including suspected cases lab-confirmed outcomes. user might already data time series provided, example, public dashboards directly public health authorities. Alternatively, can constructed individual-level data, example using incidence2 R package. example data set called example_confirmed included package: estimation procedure good data feeds . thorough understanding data used EpiNow2 limitations prerequisite use. includes limited biases population groups represented (EpiNow2 assumes closed population infections caused infections population), reporting artefacts delays, completeness reporting. can mitigated using routines available EpiNow2 described , others cause biases results need carefully considered interpreting results.","code":"head(EpiNow2::example_confirmed) #>          date confirm #>        <Date>   <num> #> 1: 2020-02-22      14 #> 2: 2020-02-23      62 #> 3: 2020-02-24      53 #> 4: 2020-02-25      97 #> 5: 2020-02-26      93 #> 6: 2020-02-27      78"},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections_workflow.html","id":"set-up","dir":"Articles","previous_headings":"","what":"Set up","title":"Workflow for Rt estimation and forecasting","text":"first load EpiNow2 package. set number cores use. want run 4 MCMC chains parallel set 4. fewer 4 available wanted run fewer 4 chains (expense robustness), fewer 4 computing cores available set . find number cores available one can use detectCores function parallel package.","code":"library(\"EpiNow2\") #>  #> Attaching package: 'EpiNow2' #> The following object is masked from 'package:stats': #>  #>     Gamma options(mc.cores = 4)"},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections_workflow.html","id":"parameters","dir":"Articles","previous_headings":"","what":"Parameters","title":"Workflow for Rt estimation and forecasting","text":"data set identified, number relevant parameters need considered using EpiNow2. affect results, worth spending time investigating values .","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections_workflow.html","id":"delay-distributions","dir":"Articles","previous_headings":"Parameters","what":"Delay distributions","title":"Workflow for Rt estimation and forecasting","text":"EpiNow2 works different delays apply different parts infection observation process. defined using common interface involves functions named probability distributions, .e. LogNormal(), Gamma(), etc. help function, see manual page cases, distributions given can fixed (.e. uncertainty) variable (.e. associated uncertainty). example, define fixed gamma distribution mean 3, standard deviation (sd) 1 maximum value 10, write looks like plotted distributions variable, values uncertainty treated prior probability densities Bayesian inference framework used EpiNow2, .e. estimated part inference. example, define variable gamma distribution uncertainty shape given normal distribution mean 3 sd 2, uncertainty rate given normal distribution mean 1 sd 0.1, maximum value 10, write looks like plotted various ways specific delay distributions mentioned might obtained. Often, come directly existing literature reviewed user studies conducted elsewhere. Sometimes might possible obtain existing databases, e.g. using epiparameter R package. Alternatively might obtainable raw data, e.g. line-listed individual-level records. EpiNow2 package contains functionality estimating delay distributions observed delays estimate_delays() function. comprehensive treatment delays estimation avoiding common biases one can consider, example, dynamicaltruncation R package associated paper.","code":"?EpiNow2::Distributions fixed_gamma <- Gamma(mean = 3, sd = 1, max = 10) fixed_gamma #> - gamma distribution (max: 10): #>   shape: #>     9 #>   rate: #>     3 plot(fixed_gamma) uncertain_gamma <- Gamma(shape = Normal(3, 2), rate = Normal(1, 0.1), max = 10) uncertain_gamma #> - gamma distribution (max: 10): #>   shape: #>     - normal distribution: #>       mean: #>         3 #>       sd: #>         2 #>   rate: #>     - normal distribution: #>       mean: #>         1 #>       sd: #>         0.1 plot(uncertain_gamma)"},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections_workflow.html","id":"generation-intervals","dir":"Articles","previous_headings":"Parameters > Delay distributions","what":"Generation intervals","title":"Workflow for Rt estimation and forecasting","text":"generation interval delay distribution describes amount time passes individual becoming infected infecting someone else. EpiNow2, generation time distribution defined call gt_opts(), function takes single argument defined dist_spec object (returned function corresponding probability distribution, .e. LogNormal(), Gamma(), etc.). example, define generation time gamma distributed uncertain mean centered 3 sd centered 1 uncertainty, maximum value 10 weighted number case data points use shape rate parameters suggested (though notes approximately produce uncertainty mean standard deviation stated ):","code":"generation_time <- Gamma(   shape = Normal(9, 2.5), rate = Normal(3, 1.4), max = 10 ) gt_opts(generation_time)"},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections_workflow.html","id":"reporting-delays","dir":"Articles","previous_headings":"Parameters > Delay distributions","what":"Reporting delays","title":"Workflow for Rt estimation and forecasting","text":"EpiNow2 calculates reproduction numbers based trajectory infection incidence. Usually observed directly. Instead, calculate case counts based , example, onset symptoms, lab confirmations, hospitalisations, etc. order estimate trajectory infection incidence need either know estimate distribution delays infection count. Often, counts composed multiple delays separate information, example incubation period (time infection symptom onset) reporting delay (time symptom onset case data, e.g. via lab confirmation, counts date symptom onset). case, can combine multiple delays plus (+) operator, e.g. can visualise combined delay EpiNow2, reporting delay distribution defined call delay_opts(), function takes single argument defined dist_spec object (returned LogNormal(), Gamma() etc.). example, observations symptom onset use date lab confirmation happens delay given reporting_delay, use","code":"incubation_period <- LogNormal(   meanlog = Normal(1.6, 0.05),   sdlog = Normal(0.5, 0.05),   max = 14 ) reporting_delay <- LogNormal(meanlog = 0.5, sdlog = 0.5, max = 10) combined_delays <- incubation_period + reporting_delay combined_delays #> Composite distribution: #> - lognormal distribution (max: 14): #>   meanlog: #>     - normal distribution: #>       mean: #>         1.6 #>       sd: #>         0.05 #>   sdlog: #>     - normal distribution: #>       mean: #>         0.5 #>       sd: #>         0.05 #> - lognormal distribution (max: 10): #>   meanlog: #>     0.5 #>   sdlog: #>     0.5 plot(combined_delays) delay_opts(incubation_period) delay <- incubation_period + reporting_delay delay_opts(delay)"},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections_workflow.html","id":"truncation","dir":"Articles","previous_headings":"Parameters > Delay distributions","what":"Truncation","title":"Workflow for Rt estimation and forecasting","text":"Besides delay infection event recorded data, can also delay event recorded data. example, data reported symptom onset may become part dataset lab confirmation occurred, even day two confirmation. Statistically, means data right-truncated. practice, means recent data unlikely complete. amount truncation exists data can estimated multiple snapshots data, .e. data looked like multiple past dates. One can use methods use amount backfilling occurred 1, 2, … days data date first reported. EpiNow2, can done using estimate_truncation() method returns, amongst others, posterior estimates truncation distribution. details model used , see estimate_truncation vignette. estimate_infections() function, truncation distribution defined call trunc_opts(), function takes single argument defined dist_spec (either defined user obtained call estimate_truncation() method estimating right truncation). used correct right truncation data. separation estimation right truncation one hand estimation reproduction number may attractive practical purposes questionable statistically separates two processes strictly separable, potentially introducing bias. alternative approach estimated jointly implemented epinowcast package, developed EpiNow2 developers collaborators.","code":"?estimate_truncation"},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections_workflow.html","id":"completeness-of-reporting","dir":"Articles","previous_headings":"Parameters","what":"Completeness of reporting","title":"Workflow for Rt estimation and forecasting","text":"Another issue affecting progression infections reported outcomes underreporting, .e. fact infections reported cases. varies pathogen population (e.g. proportion infections asymptomatic) well specific outcome used data located severity pyramid (e.g. hospitalisations vs. community cases). EpiNow2 can specify proportion infections expect observed (uncertainty assumed represented truncated normal distribution bounds 0 1) using scale argument obs_opts() function. example, think 40% (standard deviation 1%) infections end data observations specify.","code":"obs_scale <- Normal(mean = 0.4, sd = 0.01) obs_opts(scale = obs_scale)"},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections_workflow.html","id":"initial-reproduction-number","dir":"Articles","previous_headings":"Parameters","what":"Initial reproduction number","title":"Workflow for Rt estimation and forecasting","text":"default model estimate_infections() uses estimate reproduction numbers requires specification prior probability distribution initial reproduction number. represents user’s initial belief value reproduction number, data yet inform value. default assumed represented lognormal distribution mean standard deviation 1. can changed using rt_opts() function. example, user believes start data reproduction number 2, uncertainty belief represented standard deviation 1, use","code":"rt_prior <- LogNormal(mean = 2, sd = 1) rt_opts(prior = rt_prior)"},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections_workflow.html","id":"weighing-delay-priors","dir":"Articles","previous_headings":"Parameters","what":"Weighing delay priors","title":"Workflow for Rt estimation and forecasting","text":"providing uncertain delay distributions one can end situation estimated means shifted long way given distribution means, possibly deemed realistic user. case, one specify narrower prior distributions (e.g., smaller mean_sd) order keep estimated means closer given mean, can difficult principled manner practice. straightforward alternative, one can choose weigh generation time priors number data points case data set setting weigh_delay_priors = TRUE (default).","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections_workflow.html","id":"estimation-and-forecasting","dir":"Articles","previous_headings":"","what":"Estimation and forecasting","title":"Workflow for Rt estimation and forecasting","text":"options combined call estimate_infections() function. example, using options described one call Alternatively, production environments, recommend using epinow() function. uses estimate_infections() internally provides functionality logging saving results plots dedicated directories user’s file system.","code":"def <- estimate_infections(   example_confirmed,    generation_time = gt_opts(generation_time),   delays = delay_opts(delay),   rt = rt_opts(prior = rt_prior) )"},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections_workflow.html","id":"forecasting-secondary-outcomes","dir":"Articles","previous_headings":"Estimation and forecasting","what":"Forecasting secondary outcomes","title":"Workflow for Rt estimation and forecasting","text":"estimate_infections() function works single time series outcomes cases symptom onset hospitalisations. Sometimes one wants create forecasts secondary outcomes deaths. package contains functionality estimate delay scaling multiple time series estimate_secondary() function, well using make forecasts forecast_secondary() function.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/estimate_infections_workflow.html","id":"interpretation","dir":"Articles","previous_headings":"","what":"Interpretation","title":"Workflow for Rt estimation and forecasting","text":"visualise results one can use plot() function comes package results returned estimate_infections model depend values assigned parameters discussed vignette, .e. delays, scaling, reproduction numbers, well model variant used parameters. interpretation results therefore need bear mind, well properties data /subpopulations represents. See Model options vignette illustration impact model choice.","code":"plot(def)"},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/gaussian_process_implementation_details.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Gaussian Process implementation details","text":"make use Gaussian Processes several places EpiNow2. example, default model estimate_infections() uses Gaussian Process model 1st order difference log scale reproduction number. vignette describes implementation details approximate Gaussian Process used EpiNow2.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/gaussian_process_implementation_details.html","id":"definition","dir":"Articles","previous_headings":"","what":"Definition","title":"Gaussian Process implementation details","text":"single dimension Gaussian Processes (𝒢𝒫t\\mathcal{GP}_t) use can written 𝒢𝒫(μ(t),k(t,t′))\\begin{equation} \\mathcal{GP}(\\mu(t), k(t, t')) \\end{equation} μ(t)\\mu(t) k(t,t′)k(t,t') mean covariance functions, respectively. case set , $$\\begin{equation} \\mu(t) \\equiv 0 \\\\ k(t,t') = k(|t - t'|) = k(\\Delta t) \\end{equation}$$ following choices available kernel kk","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/gaussian_process_implementation_details.html","id":"matérn-32-covariance-kernel-the-default","dir":"Articles","previous_headings":"Definition","what":"Matérn 3/2 covariance kernel (the default)","title":"Gaussian Process implementation details","text":"k(Δt)=α2(1+3Δtρ)exp(−3Δtρ)\\begin{equation} k(\\Delta t) = \\alpha^2 \\left( 1 + \\frac{\\sqrt{3} \\Delta t}{\\rho} \\right) \\exp \\left( - \\frac{\\sqrt{3} \\Delta t}{\\rho}\\right) \\end{equation} ρ>0\\rho>0 α>0\\alpha > 0 length scale magnitude, respectively, kernel. Note later use slightly different definition α\\alpha compared Riutort-Mayol et al.[1], defined α2\\alpha^2.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/gaussian_process_implementation_details.html","id":"squared-exponential-kernel","dir":"Articles","previous_headings":"Definition","what":"Squared exponential kernel","title":"Gaussian Process implementation details","text":"k(Δt)=α2exp(−12(Δt2)l2)\\begin{equation} k(\\Delta t) = \\alpha^2 \\exp \\left( - \\frac{1}{2} \\frac{(\\Delta t^2)}{l^2} \\right) \\end{equation}","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/gaussian_process_implementation_details.html","id":"ornstein-uhlenbeck-matérn-12-kernel","dir":"Articles","previous_headings":"Definition","what":"Ornstein-Uhlenbeck (Matérn 1/2) kernel","title":"Gaussian Process implementation details","text":"k(Δt)=α2exp(−Δt2ρ2)\\begin{equation} k(\\Delta t) = \\alpha^2 \\exp{\\left( - \\frac{\\Delta t}{2 \\rho^2}  \\right)} \\end{equation}","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/gaussian_process_implementation_details.html","id":"matérn-52-covariance-kernel","dir":"Articles","previous_headings":"Definition","what":"Matérn 5/2 covariance kernel","title":"Gaussian Process implementation details","text":"k(Δt)=α(1+5Δtρ+53(Δtl)2)exp(−5Δtρ)\\begin{equation} k(\\Delta t) = \\alpha \\left( 1 + \\frac{\\sqrt{5} \\Delta t}{\\rho} + \\frac{5}{3} \\left(\\frac{\\Delta t}{l} \\right)^2 \\right) \\exp \\left( - \\frac{\\sqrt{5} \\Delta t}{\\rho}\\right) \\end{equation}","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/articles/gaussian_process_implementation_details.html","id":"hilbert-space-approximation","dir":"Articles","previous_headings":"","what":"Hilbert space approximation","title":"Gaussian Process implementation details","text":"order make models computationally tractable, approximate Gaussian Process using Hilbert space approximation Gaussian Process[1], centered around mean zero. GP(0,k(Δt))≈∑j=1m(Sk(λj))12ϕj(t)βj\\begin{equation} \\mathrm{GP}(0, k(\\Delta t)) \\approx \\sum_{j=1}^m \\left(S_k(\\sqrt{\\lambda_j}) \\right)^\\frac{1}{2} \\phi_j(t) \\beta_j \\end{equation} mm number basis functions use approximation, calculate number time points tGPt_\\mathrm{GP} Gaussian Process applied (rounded give integer value), recommended[1]. m=btGP\\begin{equation} m = b t_\\mathrm{GP} \\end{equation} values λj\\lambda_j given λj=(jπ2L)2\\begin{equation} \\lambda_j = \\left( \\frac{j \\pi}{2 L} \\right)^2 \\end{equation} LL positive number termed boundary condition, βj\\beta_{j} regression weights standard normal prior βj∼Normal(0,1)\\begin{equation} \\beta_j \\sim \\mathrm{Normal}(0, 1) \\end{equation} function Sk(x)S_k(x) spectral density relating particular covariance function kk. case Matérn kernel order ν\\nu given Sk(x)=α22πΓ(ν+1/2)(2ν)νΓ(ν)ρ2ν(2νρ2+ω2)−(ν+12)\\begin{equation} S_k(x) = \\alpha^2 \\frac{2 \\sqrt{\\pi} \\Gamma(\\nu + 1/2) (2\\nu)^\\nu}{\\Gamma(\\nu) \\rho^{2 \\nu}} \\left( \\frac{2 \\nu}{\\rho^2} + \\omega^2 \\right)^{-\\left( \\nu + \\frac{1}{2}\\right )} \\end{equation} ν=3/2\\nu = 3 / 2 (default EpiNow2) simplifies Sk(ω)=α24(3/ρ)3((3/ρ)2+ω2)2=(2α(3/ρ)32(3/ρ)2+ω2)2\\begin{equation}     S_k(\\omega) =     \\alpha^2 \\frac{4 \\left(\\sqrt{3} / \\rho \\right)^3}{\\left(\\left(\\sqrt{3} / \\rho\\right)^2 + \\omega^2\\right)^2} =     \\left(\\frac{2 \\alpha \\left(\\sqrt{3} / \\rho \\right)^{\\frac{3}{2}}}{\\left(\\sqrt{3} / \\rho\\right)^2 + \\omega^2} \\right)^2 \\end{equation} ν=1/2\\nu = 1 / 2 Sk(ω)=α22ρ(1/ρ2+ω2)\\begin{equation} S_k(\\omega) = \\alpha^2 \\frac{2}{\\rho \\left(1 / \\rho^2 + \\omega^2\\right)} \\end{equation} ν=5/2\\nu = 5 / 2 Sk(ω)=α23(5/ρ)52((5/ρ)2+ω2)3\\begin{equation} S_k(\\omega) =     \\alpha^2 \\frac{3 \\left(\\sqrt{5} / \\rho \\right)^5}{2 \\left(\\left(\\sqrt{5} / \\rho\\right)^2 + \\omega^2\\right)^3} \\end{equation} case squared exponential spectral kernel density given Sk(ω)=α22πρexp(−12ρ2ω2)\\begin{equation} S_k(\\omega) = \\alpha^2 \\sqrt{2\\pi} \\rho \\exp \\left( -\\frac{1}{2} \\rho^2 \\omega^2 \\right) \\end{equation} functions ϕj(x)\\phi_{j}(x) eigenfunctions Laplace operator, ϕj(t)=1Lsin(λj(t*+L))\\begin{equation} \\phi_j(t) = \\frac{1}{\\sqrt{L}} \\sin\\left(\\sqrt{\\lambda_j} (t^* + L)\\right) \\end{equation} time rescaled linearly -1 1, t*=t−12tGP12tGP\\begin{equation} t^* = \\frac{t - \\frac{1}{2}t_\\mathrm{GP}}{\\frac{1}{2}t_\\mathrm{GP}} \\end{equation} Relevant priors α∼Normal(μα,σα)ρ∼LogNormal(μρ,σρ)\\begin{align} \\alpha &\\sim \\mathrm{Normal}(\\mu_\\alpha, \\sigma_{\\alpha}) \\\\ \\rho   &\\sim \\mathrm{LogNormal} (\\mu_\\rho, \\sigma_\\rho)\\\\ \\end{align} ρ\\rho additionally constrained ρmin\\rho_\\mathrm{min} ρmax\\rho_\\mathrm{max}, μρ\\mu_{\\rho} σρ\\sigma_\\rho calculated given mean mρm_{\\rho} standard deviation sρs_\\rho, default values (can changed user): b=0.2L=1.5mρ=21sρ=7ρmin=0ρmax=60μα=0σα=0.01\\begin{align} b &= 0.2 \\\\ L &= 1.5 \\\\ m_\\rho &= 21 \\\\ s_\\rho &= 7 \\\\ \\rho_\\mathrm{min} &= 0\\\\ \\rho_\\mathrm{max} &= 60\\\\ \\mu_\\alpha &= 0\\\\ \\sigma_\\alpha &= 0.01 \\end{align}","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sam Abbott. Author. Joel Hellewell. Author. Katharine Sherratt. Author. Katelyn Gostic. Author. Joe Hickson. Author. Hamada S. Badr. Author. Michael DeWitt. Author. James M. Azam. Author. Robin Thompson. Contributor. Sophie Meakin. Contributor. James Munday. Contributor. Nikos Bosse. Contributor. Paul Mee. Contributor. Peter Ellis. Contributor. Pietro Monticone. Contributor. Lloyd Chapman. Contributor. Andrew Johnson. Contributor. Kaitlyn Johnson. Contributor. EpiForecasts. Author. Sebastian Funk. Author, maintainer.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Abbott S, Hellewell J, Sherratt K, Gostic K, Hickson J, Badr H, DeWitt M, Azam J, EpiForecasts, Funk S (2025). EpiNow2: Estimate Real-Time Case Counts Time-Varying Epidemiological Parameters. R package version 1.6.1.9000, https://epiforecasts.io/EpiNow2/dev/, https://github.com/epiforecasts/EpiNow2, https://epiforecasts.io/EpiNow2/.","code":"@Manual{,   title = {EpiNow2: Estimate Real-Time Case Counts and Time-Varying Epidemiological Parameters},   author = {Sam Abbott and Joel Hellewell and Katharine Sherratt and Katelyn Gostic and Joe Hickson and Hamada S. Badr and Michael DeWitt and James M. Azam and {EpiForecasts} and Sebastian Funk},   year = {2025},   note = {R package version 1.6.1.9000,     https://epiforecasts.io/EpiNow2/dev/,     https://github.com/epiforecasts/EpiNow2},   url = {https://epiforecasts.io/EpiNow2/}, }"},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/index.html","id":"summary","dir":"","previous_headings":"","what":"Summary","title":"Estimate Real-Time Case Counts and Time-Varying Epidemiological Parameters","text":"EpiNow2 estimates time-varying reproduction number, growth rate, doubling time using range open-source tools (Abbott et al.), current best practices (Gostic et al.). aims help users avoid limitations naive implementations framework informed community feedback actively supported. Forecasting also supported time-varying reproduction number, infections, reported cases using generative process approach used estimation. EpiNow2 estimates time-varying reproduction number cases date infection (using similar approach implemented {EpiEstim}). True infections, treated latent unobserved, estimated mapped observed data (example cases date report) via one delay distributions (examples package documentation incubation period reporting delay) reporting model can include weekly periodicity. Uncertainty propagated inputs final parameter estimates, helping mitigate spurious findings. handled internally. time-varying reproduction estimates uncertain generation time also give time-varying estimates rate growth. EpiNow2 provides three models: estimate_infections(): Reconstruct cases date infection reported cases. estimate_secondary(): Estimate relationship primary secondary observations, example, deaths (secondary) based hospital admissions (primary), bed occupancy (secondary) based hospital admissions (primary). estimate_truncation(): Estimate truncation distribution multiple snapshots data source time. flexibility, check {epinowcast} package. default model estimate_infections() uses non-stationary Gaussian process estimate time-varying reproduction number infer infections. options, generally reduce runtimes cost granularity estimates real-time performance, include: stationary Gaussian process (faster estimate currently gives reduced performance real time estimates). User specified breakpoints. fixed reproduction number. piecewise constant, combining fixed reproduction number breakpoints. random walk, combining fixed reproduction number regularly spaced breakpoints (.e weekly). deconvolution/back-calculation method inferring infections, followed calculating time-varying reproduction number. Adjustment remaining susceptible population beyond forecast horizon. default, models fit MCMC sampling using rstan R package backend. Users can, however, switch use approximate algorithms like variational inference, pathfinder algorithm, Laplace approximation especially quick prototyping. latter two methods provided cmdstanr R package, users install separately. documentation estimate_infections provides examples implementation different options available. EpiNow2 designed used via single function call two functions: epinow(): Estimate Rt cases date infection forecast infections future. regional_epinow(): Efficiently run epinow() across multiple regions efficient manner. two functions call estimate_infections(), works reconstruct cases date infection reported cases. details using function corresponding function documentation.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Estimate Real-Time Case Counts and Time-Varying Epidemiological Parameters","text":"Install released version package: Install development version package : Alternatively, install development version package pak follows (users need ): using pak fails, try: build EpiNow2 source, users need configure C toolchain. EpiNow2 implements underlying models Stan (statistical modelling programming language), built C++. operating system different set procedure. Windows users need install appropriate version RTools. Mac users can follow steps, Linux users can use guide.","code":"install.packages(\"EpiNow2\") install.packages(\"EpiNow2\", repos = c(\"https://epiforecasts.r-universe.dev\", getOption(\"repos\"))) # check whether {pak} is installed if (!require(\"pak\")) {   install.packages(\"pak\") } pak::pkg_install(\"epiforecasts/EpiNow2\") # check whether {remotes} is installed if (!require(\"remotes\")) {   install.packages(\"remotes\") } remotes::install_github(\"epiforecasts/EpiNow2\")"},{"path":"https://epiforecasts.io/EpiNow2/dev/index.html","id":"resources","dir":"","previous_headings":"","what":"Resources","title":"Estimate Real-Time Case Counts and Time-Varying Epidemiological Parameters","text":"Getting Started vignette (see vignette(\"EpiNow2\")) quickest entry point package. provides quick run two main functions package set . also discusses summarise visualise results running models. broadly, users can also learn details estimating delay distributions, nowcasting, forecasting structured way free open short-course, “Nowcasting forecasting infectious disease dynamics”, developed authors package. package two websites: one stable release version CRAN, another version development. two provide various resources learning package, including function reference, details model (model definition), workflows model (usage), case studies literature applications package. However, development website may contain experimental features information yet available stable release. workflow vignette (see vignette(\"estimate_infections_workflow\")) provides guidance end--end process estimating reproduction numbers performing short-term forecasts disease spreading different vignettes provide mathematical definition model. example, model definition vignette estimate_infections() can found vignette(\"estimate_infections\"). simple example using package estimate national Rt Covid-19 can found .","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Estimate Real-Time Case Counts and Time-Varying Epidemiological Parameters","text":"welcome contributions. identified issue package, can file issue . also welcome additions extensions underlying model either form options improvements. wish contribute form, please follow package contributing guide.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/index.html","id":"contributors","dir":"","previous_headings":"","what":"Contributors","title":"Estimate Real-Time Case Counts and Time-Varying Epidemiological Parameters","text":"contributions project gratefully acknowledged using allcontributors package following -contributors specification. Contributions kind welcome!","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/index.html","id":"code","dir":"","previous_headings":"Contributors","what":"Code","title":"Estimate Real-Time Case Counts and Time-Varying Epidemiological Parameters","text":"seabbs, sbfnk, jamesmbaazam, joeHickson, hsbadr, pitmonticone, actions-user, ellisp, jdmunday, pearsonca, JAllen42, kaitejohnson, adamkucharski, andrjohns, Bisaloo, LloydChapman, medewitt, nikosbosse, sophiemeakin","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/index.html","id":"issue-authors","dir":"","previous_headings":"Contributors","what":"Issue Authors","title":"Estimate Real-Time Case Counts and Time-Varying Epidemiological Parameters","text":"raulfernandezn, pcarbo, johnaponte, sophie-schiller, munozedg, kathsherratt, yungwai, kgostic, fkrauer, philturk, krageth, tony352, username-rp, HAKGH, AndrewRiceMGW, brynhayder, RichardMN, andrybicio, rhamoonga, furqan915, MFZaini1984, fabsig, affans, GauriSaran, davidvilanova, jrcpulliam, dajmcdon, joshwlambert, avallecam, athowes, lorenzwalthert, nlinton, martinamcm, adrian-lison, zsusswein","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/index.html","id":"issue-contributors","dir":"","previous_headings":"Contributors","what":"Issue Contributors","title":"Estimate Real-Time Case Counts and Time-Varying Epidemiological Parameters","text":"jhellewell14, thlytras, LizaHadley, ntorresd, SamuelBrand1","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/Distributions.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability distributions — Distributions","title":"Probability distributions — Distributions","text":"Probability distributions Generates nonparametric distribution.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/Distributions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability distributions — Distributions","text":"","code":"LogNormal(meanlog, sdlog, mean, sd, ...)  Gamma(shape, rate, scale, mean, sd, ...)  Normal(mean, sd, ...)  Fixed(value, ...)  NonParametric(pmf, ...)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/Distributions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability distributions — Distributions","text":"meanlog, sdlog mean standard deviation distribution     log scale default values 0 1 respectively. mean, sd mean standard deviation distribution ... arguments define limits distribution passed bound_dist() shape, scale shape scale parameters.  Must positive,     scale strictly. rate alternative way specify scale. value Value fixed (delta) distribution pmf Probability mass given distribution; passed zero-indexed numeric vector (.e. fist entry represents probability mass zero). summing one normalised sum one internally.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/Distributions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability distributions — Distributions","text":"dist_spec representing distribution given specification.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/Distributions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Probability distributions — Distributions","text":"Probability distributions ubiquitous EpiNow2, usually representing epidemiological delays (e.g., generation time delays becoming infecting infecting others; reporting delays) generated using functions name corresponding probability distribution used. generated dist_spec objects passed models underlying EpiNow2. parameters can given either fixed values (numeric value) uncertain values (dist_sepc). given uncertain values, currently normally distributed parameters (generated using Normal()) supported. distribution representation terms \"natural\" parameters (ones used stan) can sometimes also specified using parameters mean standard deviation distribution. given natural parameters calculated given parameters. uncertainty, done random sampling given uncertainty converting resulting parameters natural representation. Currently available distributions lognormal, gamma, normal, fixed (delta) nonparametric. nonparametric special case probability mass function given directly numeric vector.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/Distributions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability distributions — Distributions","text":"","code":"LogNormal(mean = 4, sd = 1) #> - lognormal distribution: #>   meanlog: #>     1.4 #>   sdlog: #>     0.25 LogNormal(mean = 4, sd = 1, max = 10) #> - lognormal distribution (max: 10): #>   meanlog: #>     1.4 #>   sdlog: #>     0.25 # If specifying uncertain parameters, use the natural parameters LogNormal(meanlog = Normal(1.5, 0.5), sdlog = 0.25, max = 10) #> - lognormal distribution (max: 10): #>   meanlog: #>     - normal distribution: #>       mean: #>         1.5 #>       sd: #>         0.5 #>   sdlog: #>     0.25 Gamma(mean = 4, sd = 1) #> - gamma distribution: #>   shape: #>     16 #>   rate: #>     4 Gamma(shape = 16, rate = 4) #> - gamma distribution: #>   shape: #>     16 #>   rate: #>     4 Gamma(shape = Normal(16, 2), rate = Normal(4, 1)) #> - gamma distribution: #>   shape: #>     - normal distribution: #>       mean: #>         16 #>       sd: #>         2 #>   rate: #>     - normal distribution: #>       mean: #>         4 #>       sd: #>         1 Gamma(shape = Normal(16, 2), scale = Normal(1/4, 1)) #> Warning: ! Uncertain gamma distribution specified in terms of parameters that are not #>   the \"natural\" parameters of the distribution shape and rate. #> ℹ Converting using a crude and very approximate method that is likely to #>   produce biased results. #> ℹ If possible it is preferable to specify the distribution directly in terms of #>   the natural parameters. #> - gamma distribution: #>   shape: #>     - normal distribution: #>       mean: #>         16 #>       sd: #>         5.8 #>   rate: #>     - normal distribution: #>       mean: #>         4 #>       sd: #>         2.9 Normal(mean = 4, sd = 1) #> - normal distribution: #>   mean: #>     4 #>   sd: #>     1 Normal(mean = 4, sd = 1, max = 10) #> - normal distribution (max: 10): #>   mean: #>     4 #>   sd: #>     1 Fixed(value = 3) #> - fixed value: #>   3 Fixed(value = 3.5) #> - fixed value: #>   3.5 NonParametric(c(0.1, 0.3, 0.2, 0.4)) #> - nonparametric distribution #>   PMF: [0.1 0.3 0.2 0.4] NonParametric(c(0.1, 0.3, 0.2, 0.1, 0.1)) #> - nonparametric distribution #>   PMF: [0.12 0.37 0.25 0.12 0.12]"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/EpiNow2-package.html","id":null,"dir":"Reference","previous_headings":"","what":"EpiNow2: Estimate Real-Time Case Counts and Time-Varying Epidemiological Parameters — EpiNow2-package","title":"EpiNow2: Estimate Real-Time Case Counts and Time-Varying Epidemiological Parameters — EpiNow2-package","text":"Estimates time-varying reproduction number, rate spread, doubling time using range open-source tools (Abbott et al. (2020) doi:10.12688/wellcomeopenres.16006.1 ), current best practices (Gostic et al. (2020) doi:10.1101/2020.06.18.20134858 ). aims help users avoid limitations naive implementations framework informed community feedback actively supported.","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/EpiNow2-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"EpiNow2: Estimate Real-Time Case Counts and Time-Varying Epidemiological Parameters — EpiNow2-package","text":"Maintainer: Sebastian Funk sebastian.funk@lshtm.ac.uk (ORCID) Authors: Sam Abbott sam.abbott@lshtm.ac.uk (ORCID) Joel Hellewell joel.hellewell@lshtm.ac.uk (ORCID) Katharine Sherratt katharine.sherratt@lshtm.ac.uk Katelyn Gostic kgostic@uchicago.edu Joe Hickson joseph.hickson@metoffice.gov.uk Hamada S. Badr badr@jhu.edu (ORCID) Michael DeWitt .dewitt.jr@gmail.com (ORCID) James M. Azam james.azam@lshtm.ac.uk (ORCID) EpiForecasts contributors: Robin Thompson robin.thompson@lshtm.ac.uk [contributor] Sophie Meakin sophie.meaking@lshtm.ac.uk [contributor] James Munday james.munday@lshtm.ac.uk [contributor] Nikos Bosse [contributor] Paul Mee paul.mee@lshtm.ac.uk [contributor] Peter Ellis peter.ellis2013nz@gmail.com [contributor] Pietro Monticone pietro.monticone@edu.unito.[contributor] Lloyd Chapman lloyd.chapman1@lshtm.ac.uk [contributor] Andrew Johnson andrew.johnson@arjohnsonau.com [contributor] Kaitlyn Johnson johnsonkaitlyne9@gmail.com (ORCID) [contributor]","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/R_to_growth.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Reproduction Numbers to Growth Rates — R_to_growth","title":"Convert Reproduction Numbers to Growth Rates — R_to_growth","text":"See # nolint justification. Now handled internally stan may removed future updates user demand.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/R_to_growth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Reproduction Numbers to Growth Rates — R_to_growth","text":"","code":"R_to_growth(R, gamma_mean, gamma_sd)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/R_to_growth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Reproduction Numbers to Growth Rates — R_to_growth","text":"R Numeric, Reproduction number estimates gamma_mean Numeric, mean gamma distribution gamma_sd Numeric, standard deviation gamma distribution .","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/R_to_growth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Reproduction Numbers to Growth Rates — R_to_growth","text":"Numeric vector reproduction number estimates","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/R_to_growth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Reproduction Numbers to Growth Rates — R_to_growth","text":"","code":"R_to_growth(2.18, 4, 1) #> [1] 0.1996541"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/add_breakpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Add breakpoints to certain dates in a data set. — add_breakpoints","title":"Add breakpoints to certain dates in a data set. — add_breakpoints","text":"Add breakpoints certain dates data set.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/add_breakpoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add breakpoints to certain dates in a data set. — add_breakpoints","text":"","code":"add_breakpoints(data, dates = as.Date(character(0)))"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/add_breakpoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add breakpoints to certain dates in a data set. — add_breakpoints","text":"data <data.frame> confirmed cases (confirm) date (date). confirm must numeric date must date format. Optionally can also logical accumulate column indicates whether data added next data point. useful modelling e.g. weekly incidence data. See also fill_missing() function helps add accumulate column desired properties dealing non-daily data. accumulation done happens truncation specified truncation argument. dates vector dates use breakpoints.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/add_breakpoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add breakpoints to certain dates in a data set. — add_breakpoints","text":"data.table breakpoint set 1 specified dates.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/add_breakpoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add breakpoints to certain dates in a data set. — add_breakpoints","text":"","code":"reported_cases <- add_breakpoints(example_confirmed, as.Date(\"2020-03-26\"))"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/add_day_of_week.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds a day of the week vector — add_day_of_week","title":"Adds a day of the week vector — add_day_of_week","text":"Adds day week vector","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/add_day_of_week.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds a day of the week vector — add_day_of_week","text":"","code":"add_day_of_week(dates, week_effect = 7)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/add_day_of_week.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds a day of the week vector — add_day_of_week","text":"dates Vector dates week_effect Numeric 1 7 defaults 7","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/add_day_of_week.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds a day of the week vector — add_day_of_week","text":"numeric vector containing period day week index","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/add_day_of_week.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adds a day of the week vector — add_day_of_week","text":"","code":"if (FALSE) { # \\dontrun{ dates <- seq(as.Date(\"2020-03-15\"), by = \"days\", length.out = 15) # Add date based day of week add_day_of_week(dates, 7)  # Add shorter week add_day_of_week(dates, 4) } # }"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/add_horizon.html","id":null,"dir":"Reference","previous_headings":"","what":"Add missing values for future dates — add_horizon","title":"Add missing values for future dates — add_horizon","text":"Add missing values future dates","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/add_horizon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add missing values for future dates — add_horizon","text":"","code":"add_horizon(data, horizon, accumulate = 1L, obs_column = \"confirm\", by = NULL)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/add_horizon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add missing values for future dates — add_horizon","text":"data Data frame date column. columns depend model data used, e.g. estimate_infections() estimate_secondary(). See documentation expected format. horizon Deprecated; use forecast instead specify predictive horizon accumulate number days accumulate generating posterior prediction, e.g. 7 weekly accumulated forecasts. obs_column Character (default: \"confirm\"). given, column specified used checking missingness. useful using data set multiple columns hwich one corresponds observations processed . Character vector. Name(s) additional column(s) data processing done separately value column. useful using data representing e.g. multiple geographies. NULL (default) grouping done.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/add_horizon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add missing values for future dates — add_horizon","text":"data.table missing values future dates","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/adjust_infection_to_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust from Case Counts by Infection Date to Date of Report — adjust_infection_to_report","title":"Adjust from Case Counts by Infection Date to Date of Report — adjust_infection_to_report","text":"Maps cases date infection date report via date onset.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/adjust_infection_to_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust from Case Counts by Infection Date to Date of Report — adjust_infection_to_report","text":"","code":"adjust_infection_to_report(   infections,   delay_defs,   reporting_model,   reporting_effect,   type = \"sample\",   truncate_future = TRUE )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/adjust_infection_to_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust from Case Counts by Infection Date to Date of Report — adjust_infection_to_report","text":"infections <data.table> containing date variable numeric cases variable. delay_defs list single row data.tables  defines delay distribution (model, parameters maximum delay model). See lognorm_dist_def() example structure. reporting_model function takes single numeric vector argument returns single numeric vector. Can used apply stochastic reporting effects. See examples details. reporting_effect numeric vector length 7 allows scaling reported cases day report (1 = Monday, 7 = Sunday). default scaling occurs. type Character string indicating method use transform counts. Supports either \"sample\"  approximates sampling \"median\" shift median distribution. truncate_future Logical, cases truncated occur first date reported data. Defaults TRUE.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/adjust_infection_to_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust from Case Counts by Infection Date to Date of Report — adjust_infection_to_report","text":"data.table containing date variable (date report) cases variable. return_onset = TRUE third variable reference indicates date variable refers .","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/allocate_delays.html","id":null,"dir":"Reference","previous_headings":"","what":"Allocate Delays into Required Stan Format — allocate_delays","title":"Allocate Delays into Required Stan Format — allocate_delays","text":"Allocate delays stan. Used delay_opts().","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/allocate_delays.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Allocate Delays into Required Stan Format — allocate_delays","text":"","code":"allocate_delays(delay_var, no_delays)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/allocate_delays.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Allocate Delays into Required Stan Format — allocate_delays","text":"delay_var List numeric delays no_delays Numeric, number delays","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/allocate_delays.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Allocate Delays into Required Stan Format — allocate_delays","text":"numeric array","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/allocate_empty.html","id":null,"dir":"Reference","previous_headings":"","what":"Allocate Empty Parameters to a List — allocate_empty","title":"Allocate Empty Parameters to a List — allocate_empty","text":"Allocate missing parameters empty two dimensional arrays. Used internally forecast_infections().","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/allocate_empty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Allocate Empty Parameters to a List — allocate_empty","text":"","code":"allocate_empty(data, params, n = 0)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/allocate_empty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Allocate Empty Parameters to a List — allocate_empty","text":"data list parameters params character vector parameters allocate empty missing. n Numeric, number samples assign empty array","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/allocate_empty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Allocate Empty Parameters to a List — allocate_empty","text":"list parameters allocated empty","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/apply_default_cdf_cutoff.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply default CDF cutoff to a <dist_spec> if it is unconstrained — apply_default_cdf_cutoff","title":"Apply default CDF cutoff to a <dist_spec> if it is unconstrained — apply_default_cdf_cutoff","text":"Apply default CDF cutoff <dist_spec> unconstrained","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/apply_default_cdf_cutoff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply default CDF cutoff to a <dist_spec> if it is unconstrained — apply_default_cdf_cutoff","text":"","code":"apply_default_cdf_cutoff(dist, default_cdf_cutoff, cdf_cutoff_set)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/apply_default_cdf_cutoff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply default CDF cutoff to a <dist_spec> if it is unconstrained — apply_default_cdf_cutoff","text":"dist <dist_spec> default_cdf_cutoff Numeric; default CDF cutoff used unconstrained distribution passed dist. dist already constrained maximum CDF cutoff ignored. cdf_cutoff_set Logical; whether default CDF cutoff set user; yes dist constrained warning issued","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/apply_default_cdf_cutoff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply default CDF cutoff to a <dist_spec> if it is unconstrained — apply_default_cdf_cutoff","text":"<dist_spec> default CDF cutoff set previously constrained","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/apply_tolerance.html","id":null,"dir":"Reference","previous_headings":"","what":"Applies a threshold to all nonparametric distributions in a <dist_spec> — apply_tolerance","title":"Applies a threshold to all nonparametric distributions in a <dist_spec> — apply_tolerance","text":"function deprecated. Use bound_dist() instead.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/apply_tolerance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Applies a threshold to all nonparametric distributions in a <dist_spec> — apply_tolerance","text":"","code":"apply_tolerance(x, tolerance)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/apply_tolerance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Applies a threshold to all nonparametric distributions in a <dist_spec> — apply_tolerance","text":"x <dist_spec> tolerance Numeric; desired tolerance level. part cumulative distribution function beyond 1 minus tolerance level removed.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/apply_tolerance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Applies a threshold to all nonparametric distributions in a <dist_spec> — apply_tolerance","text":"<dist_spec> probability masses threshold level removed","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/apply_zero_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert zero case counts to NA (missing) if the 7-day average is above a threshold. — apply_zero_threshold","title":"Convert zero case counts to NA (missing) if the 7-day average is above a threshold. — apply_zero_threshold","text":"function aims detect spurious zeroes comparing 7-day average case counts threshold. 7-day average threshold, zero case count replaced NA.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/apply_zero_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert zero case counts to NA (missing) if the 7-day average is above a threshold. — apply_zero_threshold","text":"","code":"apply_zero_threshold(data, threshold = Inf, obs_column = \"confirm\")"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/apply_zero_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert zero case counts to NA (missing) if the 7-day average is above a threshold. — apply_zero_threshold","text":"data <data.frame> confirmed cases (confirm) date (date). confirm must numeric date must date format. Optionally can also logical accumulate column indicates whether data added next data point. useful modelling e.g. weekly incidence data. See also fill_missing() function helps add accumulate column desired properties dealing non-daily data. accumulation done happens truncation specified truncation argument. threshold Numeric, defaults Inf. Indicates detected zero cases meaningful using threshold number cases based 7-day average. average threshold time zero observation count zero replaced missing (NA) count thus ignored likelihood. obs_column Character (default: \"confirm\"). given, column specified used checking missingness. useful using data set multiple columns hwich one corresponds observations processed .","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/apply_zero_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert zero case counts to NA (missing) if the 7-day average is above a threshold. — apply_zero_threshold","text":"data.table zero threshold applied.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/backcalc_opts.html","id":null,"dir":"Reference","previous_headings":"","what":"Back Calculation Options — backcalc_opts","title":"Back Calculation Options — backcalc_opts","text":"Defines list specifying optional arguments back calculation cases. used rt = NULL.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/backcalc_opts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Back Calculation Options — backcalc_opts","text":"","code":"backcalc_opts(   prior = c(\"reports\", \"none\", \"infections\"),   prior_window = 14,   rt_window = 1 )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/backcalc_opts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Back Calculation Options — backcalc_opts","text":"prior character string defaulting \"reports\". Defines prior use deconvolving. Currently implemented options use smoothed mean delay shifted reported cases (\"reports\"), use estimated infections previous time step seeded first time step using mean shifted reported cases (\"infections\"), prior (\"none\"). Using prior result poor real time performance. prior using infections supported Gaussian process present . observed data reliable sensible first step explore increasing prior_window wit sensible second step longer use reported cases prior (.e set prior = \"none\"). prior_window Integer, defaults 14 days. mean centred smoothing window apply mean shifted reports (used prior back calculation). 7 days minimum recommended settings smooths day week effects depending quality data amount information users wish use prior (higher values equalling less informative prior). rt_window Integer, defaults 1. size centred rolling average use estimating Rt. must odd central estimate included.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/backcalc_opts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Back Calculation Options — backcalc_opts","text":"<backcalc_opts> object back calculation settings.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/backcalc_opts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Back Calculation Options — backcalc_opts","text":"","code":"# default settings backcalc_opts() #> $prior #> [1] \"reports\" #>  #> $prior_window #> [1] 14 #>  #> $rt_window #> [1] 1 #>  #> attr(,\"class\") #> [1] \"backcalc_opts\" \"list\""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/bootstrapped_dist_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a Subsampled Bootstrap to Integer Values and Summarise Distribution Parameters — bootstrapped_dist_fit","title":"Fit a Subsampled Bootstrap to Integer Values and Summarise Distribution Parameters — bootstrapped_dist_fit","text":"Fits integer adjusted distribution subsampled bootstrap data integrates posterior samples single set summary statistics. Can used generate robust reporting delay accounts fact underlying delay likely varies time size available reporting delay sample may representative current case load.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/bootstrapped_dist_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a Subsampled Bootstrap to Integer Values and Summarise Distribution Parameters — bootstrapped_dist_fit","text":"","code":"bootstrapped_dist_fit(   values,   dist = \"lognormal\",   samples = 2000,   bootstraps = 10,   bootstrap_samples = 250,   max_value,   verbose = FALSE )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/bootstrapped_dist_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a Subsampled Bootstrap to Integer Values and Summarise Distribution Parameters — bootstrapped_dist_fit","text":"values Integer vector values. dist Character string, distribution fit. Defaults lognormal (\"lognormal\") gamma (\"gamma\") also supported. samples Numeric, number samples take overall bootstrapped posteriors. bootstraps Numeric, defaults 1. number bootstrap samples (replacement) delay distribution take. samples less bootstraps, samples takes value bootstraps. bootstrap_samples Numeric, defaults 250. number samples take bootstrap sample size supplied delay distribution less value. max_value Numeric, defaults maximum value observed data. Maximum delay  allow (added output impact fitting). verbose Logical, defaults FALSE. progress messages printed.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/bootstrapped_dist_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a Subsampled Bootstrap to Integer Values and Summarise Distribution Parameters — bootstrapped_dist_fit","text":"<dist_spec> object summarising bootstrapped distribution","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/bootstrapped_dist_fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a Subsampled Bootstrap to Integer Values and Summarise Distribution Parameters — bootstrapped_dist_fit","text":"","code":"# \\donttest{ # lognormal delays <- rlnorm(500, log(5), 1) out <- bootstrapped_dist_fit(delays,   samples = 1000, bootstraps = 10,   dist = \"lognormal\" ) #> WARN [2025-01-17 09:31:42] dist_fit (chain: 1): Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#bulk-ess -  #> WARN [2025-01-17 09:31:42] dist_fit (chain: 1): Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#tail-ess -  #> WARN [2025-01-17 09:31:43] dist_fit (chain: 1): Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#bulk-ess -  #> WARN [2025-01-17 09:31:43] dist_fit (chain: 1): Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#tail-ess -  #> WARN [2025-01-17 09:31:45] dist_fit (chain: 1): Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#bulk-ess -  #> WARN [2025-01-17 09:31:45] dist_fit (chain: 1): Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#tail-ess -  #> WARN [2025-01-17 09:31:46] dist_fit (chain: 1): The largest R-hat is 1.08, indicating chains have not mixed. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#r-hat -  #> WARN [2025-01-17 09:31:46] dist_fit (chain: 1): Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#bulk-ess -  #> WARN [2025-01-17 09:31:46] dist_fit (chain: 1): Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#tail-ess -  #> WARN [2025-01-17 09:31:48] dist_fit (chain: 1): The largest R-hat is 1.11, indicating chains have not mixed. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#r-hat -  #> WARN [2025-01-17 09:31:48] dist_fit (chain: 1): Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#bulk-ess -  #> WARN [2025-01-17 09:31:48] dist_fit (chain: 1): Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#tail-ess -  #> WARN [2025-01-17 09:31:49] dist_fit (chain: 1): The largest R-hat is 1.07, indicating chains have not mixed. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#r-hat -  #> WARN [2025-01-17 09:31:49] dist_fit (chain: 1): Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#bulk-ess -  #> WARN [2025-01-17 09:31:49] dist_fit (chain: 1): Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#tail-ess -  #> WARN [2025-01-17 09:31:51] dist_fit (chain: 1): Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#bulk-ess -  #> WARN [2025-01-17 09:31:51] dist_fit (chain: 1): Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#tail-ess -  #> WARN [2025-01-17 09:31:52] dist_fit (chain: 1): Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#bulk-ess -  #> WARN [2025-01-17 09:31:52] dist_fit (chain: 1): Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#tail-ess -  #> WARN [2025-01-17 09:31:54] dist_fit (chain: 1): Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#bulk-ess -  #> WARN [2025-01-17 09:31:54] dist_fit (chain: 1): Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#tail-ess -  #> WARN [2025-01-17 09:31:55] dist_fit (chain: 1): The largest R-hat is 1.07, indicating chains have not mixed. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#r-hat -  #> WARN [2025-01-17 09:31:55] dist_fit (chain: 1): Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#bulk-ess -  #> WARN [2025-01-17 09:31:55] dist_fit (chain: 1): Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#tail-ess -  out #> - lognormal distribution (max: 78): #>   meanlog: #>     - normal distribution: #>       mean: #>         1.5 #>       sd: #>         0.096 #>   sdlog: #>     - normal distribution: #>       mean: #>         1.1 #>       sd: #>         0.083 # }"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/bound_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Define bounds of a <dist_spec> — bound_dist","title":"Define bounds of a <dist_spec> — bound_dist","text":"sets attributes processing","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/bound_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define bounds of a <dist_spec> — bound_dist","text":"","code":"bound_dist(x, max = Inf, cdf_cutoff = 0)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/bound_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define bounds of a <dist_spec> — bound_dist","text":"x <dist_spec>. max Numeric, maximum value distribution. distribution truncated value. Default: Inf, .e. maximum. cdf_cutoff Numeric; desired CDF cutoff. part cumulative distribution function beyond 1 minus value argument removed. Default: 0, .e. use full distribution.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/bound_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define bounds of a <dist_spec> — bound_dist","text":"<dist_spec> relevant attributes set define bounds","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/c.dist_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Combines multiple delay distributions for further processing — c.dist_spec","title":"Combines multiple delay distributions for further processing — c.dist_spec","text":"combines parameters can fed multiple delay distributions epinow() estimate_infections(). Note distributions already combinations distributions combined combinations distributions.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/c.dist_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combines multiple delay distributions for further processing — c.dist_spec","text":"","code":"# S3 method for class 'dist_spec' c(...)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/c.dist_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combines multiple delay distributions for further processing — c.dist_spec","text":"... delay distributions combine","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/c.dist_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combines multiple delay distributions for further processing — c.dist_spec","text":"Combined delay distributions (class <dist_spec>)","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/c.dist_spec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combines multiple delay distributions for further processing — c.dist_spec","text":"","code":"# A fixed lognormal distribution with mean 5 and sd 1. dist1 <- LogNormal(   meanlog = 1.6, sdlog = 1, max = 20 ) dist1 + dist1 #> Composite distribution: #> - lognormal distribution (max: 20): #>   meanlog: #>     1.6 #>   sdlog: #>     1 #> - lognormal distribution (max: 20): #>   meanlog: #>     1.6 #>   sdlog: #>     1  # An uncertain gamma distribution with shape and rate normally distributed # as Normal(3, 0.5) and Normal(2, 0.5) respectively dist2 <- Gamma(   shape = Normal(3, 0.5),   rate = Normal(2, 0.5),   max = 20 ) c(dist1, dist2) #> Composite distribution: #> - lognormal distribution (max: 20): #>   meanlog: #>     1.6 #>   sdlog: #>     1 #> - gamma distribution (max: 20): #>   shape: #>     - normal distribution: #>       mean: #>         3 #>       sd: #>         0.5 #>   rate: #>     - normal distribution: #>       mean: #>         2 #>       sd: #>         0.5"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/calc_CrI.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Credible Interval — calc_CrI","title":"Calculate Credible Interval — calc_CrI","text":"Adds symmetric credible interval based quantiles.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/calc_CrI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Credible Interval — calc_CrI","text":"","code":"calc_CrI(samples, summarise_by = NULL, CrI = 0.9)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/calc_CrI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Credible Interval — calc_CrI","text":"samples data.table containing least value variable summarise_by character vector variables group . CrI Numeric 0 1. credible interval return values. Defaults 0.9.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/calc_CrI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Credible Interval — calc_CrI","text":"data.table containing upper lower bounds specified credible interval.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/calc_CrI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Credible Interval — calc_CrI","text":"","code":"samples <- data.frame(value = 1:10, type = \"car\") # add 90% credible interval calc_CrI(samples) #>    value      CrI #>    <num>   <char> #> 1:  1.45 lower_90 #> 2:  9.55 upper_90 # add 90% credible interval grouped by type calc_CrI(samples, summarise_by = \"type\") #>      type value      CrI #>    <char> <num>   <char> #> 1:    car  1.45 lower_90 #> 2:    car  9.55 upper_90"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/calc_CrIs.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Credible Intervals — calc_CrIs","title":"Calculate Credible Intervals — calc_CrIs","text":"Adds symmetric credible intervals based quantiles.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/calc_CrIs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Credible Intervals — calc_CrIs","text":"","code":"calc_CrIs(samples, summarise_by = NULL, CrIs = c(0.2, 0.5, 0.9))"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/calc_CrIs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Credible Intervals — calc_CrIs","text":"samples data.table containing least value variable summarise_by character vector variables group . CrIs Numeric vector credible intervals calculate.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/calc_CrIs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Credible Intervals — calc_CrIs","text":"data.table containing summarise_by variables specified lower upper credible intervals.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/calc_CrIs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Credible Intervals — calc_CrIs","text":"","code":"samples <- data.frame(value = 1:10, type = \"car\") # add credible intervals calc_CrIs(samples) #> Key: <.> #>         . lower_90 lower_50 lower_20 upper_20 upper_50 upper_90 #>    <char>    <num>    <num>    <num>    <num>    <num>    <num> #> 1:      .     1.45     3.25      4.6      6.4     7.75     9.55 # add 90% credible interval grouped by type calc_CrIs(samples, summarise_by = \"type\") #> Key: <type> #>      type lower_90 lower_50 lower_20 upper_20 upper_50 upper_90 #>    <char>    <num>    <num>    <num>    <num>    <num>    <num> #> 1:    car     1.45     3.25      4.6      6.4     7.75     9.55"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/calc_summary_measures.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate All Summary Measures — calc_summary_measures","title":"Calculate All Summary Measures — calc_summary_measures","text":"Calculate summary statistics credible intervals <data.frame> group.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/calc_summary_measures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate All Summary Measures — calc_summary_measures","text":"","code":"calc_summary_measures(   samples,   summarise_by = NULL,   order_by = NULL,   CrIs = c(0.2, 0.5, 0.9) )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/calc_summary_measures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate All Summary Measures — calc_summary_measures","text":"samples data.table containing least value variable summarise_by character vector variables group . order_by character vector parameters order , defaults summarise_by variables. CrIs Numeric vector credible intervals calculate.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/calc_summary_measures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate All Summary Measures — calc_summary_measures","text":"data.table containing summary statistics group.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/calc_summary_measures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate All Summary Measures — calc_summary_measures","text":"","code":"samples <- data.frame(value = 1:10, type = \"car\") # default calc_summary_measures(samples) #>      type median  mean      sd lower_90 lower_50 lower_20 upper_20 upper_50 #>    <char>  <num> <num>   <num>    <num>    <num>    <num>    <num>    <num> #> 1:    car    5.5   5.5 3.02765     1.45     3.25      4.6      6.4     7.75 #>    upper_90 #>       <num> #> 1:     9.55 #  by type calc_summary_measures(samples, summarise_by = \"type\") #>      type median  mean      sd lower_90 lower_50 lower_20 upper_20 upper_50 #>    <char>  <num> <num>   <num>    <num>    <num>    <num>    <num>    <num> #> 1:    car    5.5   5.5 3.02765     1.45     3.25      4.6      6.4     7.75 #>    upper_90 #>       <num> #> 1:     9.55"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/calc_summary_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Summary Statistics — calc_summary_stats","title":"Calculate Summary Statistics — calc_summary_stats","text":"Calculate summary statistics <data.frame> group. Currently supports mean, median standard deviation.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/calc_summary_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Summary Statistics — calc_summary_stats","text":"","code":"calc_summary_stats(samples, summarise_by = NULL)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/calc_summary_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Summary Statistics — calc_summary_stats","text":"samples data.table containing least value variable summarise_by character vector variables group .","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/calc_summary_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Summary Statistics — calc_summary_stats","text":"data.table containing upper lower bounds specified credible interval","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/calc_summary_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Summary Statistics — calc_summary_stats","text":"","code":"samples <- data.frame(value = 1:10, type = \"car\") # default calc_summary_stats(samples) #>    median  mean      sd #>     <num> <num>   <num> #> 1:    5.5   5.5 3.02765 #  by type calc_summary_stats(samples, summarise_by = \"type\") #>      type median  mean      sd #>    <char>  <num> <num>   <num> #> 1:    car    5.5   5.5 3.02765"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/check_generation_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate probability distribution for using as generation time — check_generation_time","title":"Validate probability distribution for using as generation time — check_generation_time","text":"checks incheck_stan_delay() additionally makes sure dist nonparametric,  first element zero.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/check_generation_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate probability distribution for using as generation time — check_generation_time","text":"","code":"check_generation_time(dist)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/check_generation_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate probability distribution for using as generation time — check_generation_time","text":"dist dist_spec object.`","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/check_generation_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate probability distribution for using as generation time — check_generation_time","text":"Called side effects.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/check_na_setting_against_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross-check treatment of NA in obs_opts() against input data — check_na_setting_against_data","title":"Cross-check treatment of NA in obs_opts() against input data — check_na_setting_against_data","text":"function checks input data implicit /explicit missingness checks user specified na = \"missing\" obs_opts(). two TRUE, throws message model treats missingness provides alternatives. returns unmodified obs_opts(). function necessary data observation model currently interact internally. deprecated future versions data specification interface enhanced.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/check_na_setting_against_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross-check treatment of NA in obs_opts() against input data — check_na_setting_against_data","text":"","code":"check_na_setting_against_data(data, cols_to_check, obs)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/check_na_setting_against_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross-check treatment of NA in obs_opts() against input data — check_na_setting_against_data","text":"data raw data cols_to_check character vector columns check obs call obs_opts()","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/check_na_setting_against_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cross-check treatment of NA in obs_opts() against input data — check_na_setting_against_data","text":"obs_opts()","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/check_reports_valid.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate data input — check_reports_valid","title":"Validate data input — check_reports_valid","text":"check_reports_valid() checks supplied data <data.frame>, right column names types. particular, checks date column date format contain NAs, columns numeric.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/check_reports_valid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate data input — check_reports_valid","text":"","code":"check_reports_valid(   data,   model = c(\"estimate_infections\", \"estimate_secondary\") )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/check_reports_valid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate data input — check_reports_valid","text":"data data frame either: minimum two columns: date confirm, used estimate_infections() estimate_truncation(), minimum three columns: date, primary, secondary, used estimate_secondary(). model EpiNow2 model used. Either \"estimate_infections\", \"estimate_truncation\", \"estimate_secondary\". used determine checks perform data input.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/check_reports_valid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate data input — check_reports_valid","text":"Called side effects.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/check_sparse_pmf_tail.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that PMF tail is not sparse — check_sparse_pmf_tail","title":"Check that PMF tail is not sparse — check_sparse_pmf_tail","text":"Checks tail PMF vector span consecutive values smaller tol throws warning .","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/check_sparse_pmf_tail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that PMF tail is not sparse — check_sparse_pmf_tail","text":"","code":"check_sparse_pmf_tail(pmf, span = 5, tol = 1e-06)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/check_sparse_pmf_tail.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that PMF tail is not sparse — check_sparse_pmf_tail","text":"pmf probability mass function vector span number consecutive indices tail check tol value consider tail sparse","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/check_sparse_pmf_tail.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check that PMF tail is not sparse — check_sparse_pmf_tail","text":"Called side effects.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/check_stan_delay.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate probability distribution for passing to stan — check_stan_delay","title":"Validate probability distribution for passing to stan — check_stan_delay","text":"check_stan_delay() checks supplied data <dist_spec>, supported distribution, finite maximum.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/check_stan_delay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate probability distribution for passing to stan — check_stan_delay","text":"","code":"check_stan_delay(dist)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/check_stan_delay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate probability distribution for passing to stan — check_stan_delay","text":"dist dist_spec object.`","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/check_stan_delay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate probability distribution for passing to stan — check_stan_delay","text":"Called side effects.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/clean_nowcasts.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean Nowcasts for a Supplied Date — clean_nowcasts","title":"Clean Nowcasts for a Supplied Date — clean_nowcasts","text":"function removes nowcasts format produced EpiNow2 target directory date supplied.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/clean_nowcasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean Nowcasts for a Supplied Date — clean_nowcasts","text":"","code":"clean_nowcasts(date = Sys.Date(), nowcast_dir = \".\")"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/clean_nowcasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean Nowcasts for a Supplied Date — clean_nowcasts","text":"date Date object. Defaults today's date nowcast_dir Character string giving filepath nowcast results directory. Defaults current directory.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/clean_nowcasts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean Nowcasts for a Supplied Date — clean_nowcasts","text":"return value, called side effects","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/clean_regions.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean Regions — clean_regions","title":"Clean Regions — clean_regions","text":"Removes regions insufficient time points, provides logging information input.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/clean_regions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean Regions — clean_regions","text":"","code":"clean_regions(data, non_zero_points)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/clean_regions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean Regions — clean_regions","text":"data <data.frame> confirmed cases (confirm) date (date), region (region). non_zero_points Numeric, minimum number time points non-zero cases region required region evaluated. Defaults 7.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/clean_regions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean Regions — clean_regions","text":"dataframe cleaned regional data","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/collapse.html","id":null,"dir":"Reference","previous_headings":"","what":"Collapse nonparametric distributions in a <dist_spec> — collapse","title":"Collapse nonparametric distributions in a <dist_spec> — collapse","text":"convolves consecutive nonparametric distributions contained <dist_spec>.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/collapse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collapse nonparametric distributions in a <dist_spec> — collapse","text":"","code":"# S3 method for class 'dist_spec' collapse(x, ...)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/collapse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collapse nonparametric distributions in a <dist_spec> — collapse","text":"x <dist_spec> ... ignored","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/collapse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collapse nonparametric distributions in a <dist_spec> — collapse","text":"<dist_spec> consecutive nonparametric distributions convolved","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/collapse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collapse nonparametric distributions in a <dist_spec> — collapse","text":"","code":"# A fixed gamma distribution with mean 5 and sd 1. dist1 <- Gamma(mean = 5, sd = 1, max = 20)  # An uncertain lognormal distribution with meanlog and sdlog normally # distributed as Normal(3, 0.5) and Normal(2, 0.5) respectively dist2 <- LogNormal(   meanlog = Normal(3, 0.5),   sdlog = Normal(2, 0.5),   max = 20 )  # The maxf the sum of two distributions collapse(discretise(dist1 + dist2, strict = FALSE)) #> Composite distribution: #> - nonparametric distribution #>   PMF: [8e-11 2.3e-05 0.0056 0.078 0.26 0.34 0.22 0.076 0.016 0.0022 0.00022 1.7e-05 1.1e-06 5.5e-08 2.4e-09 9.2e-11 3.2e-12 9.7e-14 2.8e-15 0 0] #> - lognormal distribution (max: 20): #>   meanlog: #>     - normal distribution: #>       mean: #>         3 #>       sd: #>         0.5 #>   sdlog: #>     - normal distribution: #>       mean: #>         2 #>       sd: #>         0.5"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/construct_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct Output — construct_output","title":"Construct Output — construct_output","text":"Combines output produced internally epinow single list.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/construct_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct Output — construct_output","text":"","code":"construct_output(   estimates,   estimated_reported_cases,   plots = NULL,   summary = NULL,   samples = TRUE )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/construct_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct Output — construct_output","text":"estimates List data frames output estimate_infections estimated_reported_cases list dataframes produced estimates_by_report_date. plots list plots produced report_plots. summary list summary output produced report_summary. samples Logical, defaults TRUE. samples saved","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/construct_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct Output — construct_output","text":"list output returned epinow","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/convert_to_logmean.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert mean and sd to log mean for a log normal distribution — convert_to_logmean","title":"Convert mean and sd to log mean for a log normal distribution — convert_to_logmean","text":"Convert mean standard deviation log mean lognormal distribution. Useful defining distributions supported estimate_infections(), epinow(), regional_epinow().","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/convert_to_logmean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert mean and sd to log mean for a log normal distribution — convert_to_logmean","text":"","code":"convert_to_logmean(mean, sd)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/convert_to_logmean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert mean and sd to log mean for a log normal distribution — convert_to_logmean","text":"mean Numeric, mean distribution sd Numeric, standard deviation distribution","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/convert_to_logmean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert mean and sd to log mean for a log normal distribution — convert_to_logmean","text":"log mean lognormal distribution","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/convert_to_logmean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert mean and sd to log mean for a log normal distribution — convert_to_logmean","text":"","code":"convert_to_logmean(2, 1) #> [1] 0.5815754"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/convert_to_logsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert mean and sd to log standard deviation for a log normal distribution — convert_to_logsd","title":"Convert mean and sd to log standard deviation for a log normal distribution — convert_to_logsd","text":"Convert mean standard deviation log standard deviation lognormal distribution. Useful defining distributions supported estimate_infections(), epinow(), regional_epinow().","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/convert_to_logsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert mean and sd to log standard deviation for a log normal distribution — convert_to_logsd","text":"","code":"convert_to_logsd(mean, sd)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/convert_to_logsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert mean and sd to log standard deviation for a log normal distribution — convert_to_logsd","text":"mean Numeric, mean distribution sd Numeric, standard deviation distribution","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/convert_to_logsd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert mean and sd to log standard deviation for a log normal distribution — convert_to_logsd","text":"log standard deviation lognormal distribution","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/convert_to_logsd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert mean and sd to log standard deviation for a log normal distribution — convert_to_logsd","text":"","code":"convert_to_logsd(2, 1) #> [1] 0.4723807"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/convert_to_natural.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function for converting parameters to natural parameters. — convert_to_natural","title":"Internal function for converting parameters to natural parameters. — convert_to_natural","text":"used preprocessing generating dist_spec object given set parameters distribution","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/convert_to_natural.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function for converting parameters to natural parameters. — convert_to_natural","text":"","code":"convert_to_natural(params, distribution)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/convert_to_natural.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function for converting parameters to natural parameters. — convert_to_natural","text":"params numerical named parameter vector distribution Character; distribution use.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/convert_to_natural.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function for converting parameters to natural parameters. — convert_to_natural","text":"list two elements, params_mean params_sd, containing mean sd natural parameters.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/convert_to_natural.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Internal function for converting parameters to natural parameters. — convert_to_natural","text":"","code":"if (FALSE) { # \\dontrun{ convert_to_natural(   params = list(mean = 2, sd = 1),   distribution = \"gamma\" ) } # }"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/convolve_and_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Convolve and scale a time series — convolve_and_scale","title":"Convolve and scale a time series — convolve_and_scale","text":"applies lognormal convolution given, potentially time-varying parameters representing parameters lognormal distribution used convolution optional scaling factor. akin model used estimate_secondary() simulate_secondary().","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/convolve_and_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convolve and scale a time series — convolve_and_scale","text":"","code":"convolve_and_scale(   data,   type = c(\"incidence\", \"prevalence\"),   family = c(\"none\", \"poisson\", \"negbin\"),   delay_max = 30,   ... )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/convolve_and_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convolve and scale a time series — convolve_and_scale","text":"data <data.frame> containing date report primary cases numeric vector. type character string indicating type observation secondary reports . Options include: \"incidence\": Assumes secondary reports equal convolution previously observed primary reported cases. example application deaths infectious disease predicted reported cases disease (estimated infections). \"prevalence\": Assumes secondary reports cumulative defined currently observed primary reports minus convolution secondary reports. example application hospital bed usage predicted hospital admissions. family Character string defining observation model. Options Negative binomial (\"negbin\"), default, Poisson (\"poisson\"), \"none\" meaning expectation returned. delay_max Integer, defaulting 30 days. maximum delay used convolution model. ... Additional parameters pass observation model (.e rnbinom rpois).","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/convolve_and_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convolve and scale a time series — convolve_and_scale","text":"<data.frame> containing simulated data format required estimate_secondary().","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/convolve_and_scale.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convolve and scale a time series — convolve_and_scale","text":"version 1.4.0 function called simulate_secondary().","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/convolve_and_scale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convolve and scale a time series — convolve_and_scale","text":"","code":"# load data.table for manipulation library(data.table)  #### Incidence data example ####  # make some example secondary incidence data cases <- example_confirmed cases <- as.data.table(cases)[, primary := confirm]  # Assume that only 40 percent of cases are reported cases[, scaling := 0.4] #>            date confirm primary scaling #>          <Date>   <num>   <num>   <num> #>   1: 2020-02-22      14      14     0.4 #>   2: 2020-02-23      62      62     0.4 #>   3: 2020-02-24      53      53     0.4 #>   4: 2020-02-25      97      97     0.4 #>   5: 2020-02-26      93      93     0.4 #>  ---                                    #> 126: 2020-06-26     296     296     0.4 #> 127: 2020-06-27     255     255     0.4 #> 128: 2020-06-28     175     175     0.4 #> 129: 2020-06-29     174     174     0.4 #> 130: 2020-06-30     126     126     0.4  # Parameters of the assumed log normal delay distribution cases[, meanlog := 1.8][, sdlog := 0.5] #>            date confirm primary scaling meanlog sdlog #>          <Date>   <num>   <num>   <num>   <num> <num> #>   1: 2020-02-22      14      14     0.4     1.8   0.5 #>   2: 2020-02-23      62      62     0.4     1.8   0.5 #>   3: 2020-02-24      53      53     0.4     1.8   0.5 #>   4: 2020-02-25      97      97     0.4     1.8   0.5 #>   5: 2020-02-26      93      93     0.4     1.8   0.5 #>  ---                                                  #> 126: 2020-06-26     296     296     0.4     1.8   0.5 #> 127: 2020-06-27     255     255     0.4     1.8   0.5 #> 128: 2020-06-28     175     175     0.4     1.8   0.5 #> 129: 2020-06-29     174     174     0.4     1.8   0.5 #> 130: 2020-06-30     126     126     0.4     1.8   0.5  # Simulate secondary cases cases <- convolve_and_scale(cases, type = \"incidence\") cases #>            date confirm primary scaling meanlog sdlog index scaled       conv #>          <Date>   <num>   <num>   <num>   <num> <num> <int>  <num>      <num> #>   1: 2020-02-22      14      14     0.4     1.8   0.5     1    5.6   5.600000 #>   2: 2020-02-23      62      62     0.4     1.8   0.5     2   24.8   5.827560 #>   3: 2020-02-24      53      53     0.4     1.8   0.5     3   21.2   8.801043 #>   4: 2020-02-25      97      97     0.4     1.8   0.5     4   38.8  12.938343 #>   5: 2020-02-26      93      93     0.4     1.8   0.5     5   37.2  16.590082 #>  ---                                                                          #> 126: 2020-06-26     296     296     0.4     1.8   0.5   126  118.4  91.432820 #> 127: 2020-06-27     255     255     0.4     1.8   0.5   127  102.0  95.786381 #> 128: 2020-06-28     175     175     0.4     1.8   0.5   128   70.0 103.811968 #> 129: 2020-06-29     174     174     0.4     1.8   0.5   129   69.6 109.093575 #> 130: 2020-06-30     126     126     0.4     1.8   0.5   130   50.4 109.029626 #>      secondary #>          <int> #>   1:         5 #>   2:         5 #>   3:         8 #>   4:        12 #>   5:        16 #>  ---           #> 126:        91 #> 127:        95 #> 128:       103 #> 129:       109 #> 130:       109 #### Prevalence data example ####  # make some example prevalence data cases <- example_confirmed cases <- as.data.table(cases)[, primary := confirm]  # Assume that only 30 percent of cases are reported cases[, scaling := 0.3] #>            date confirm primary scaling #>          <Date>   <num>   <num>   <num> #>   1: 2020-02-22      14      14     0.3 #>   2: 2020-02-23      62      62     0.3 #>   3: 2020-02-24      53      53     0.3 #>   4: 2020-02-25      97      97     0.3 #>   5: 2020-02-26      93      93     0.3 #>  ---                                    #> 126: 2020-06-26     296     296     0.3 #> 127: 2020-06-27     255     255     0.3 #> 128: 2020-06-28     175     175     0.3 #> 129: 2020-06-29     174     174     0.3 #> 130: 2020-06-30     126     126     0.3  # Parameters of the assumed log normal delay distribution cases[, meanlog := 1.6][, sdlog := 0.8] #>            date confirm primary scaling meanlog sdlog #>          <Date>   <num>   <num>   <num>   <num> <num> #>   1: 2020-02-22      14      14     0.3     1.6   0.8 #>   2: 2020-02-23      62      62     0.3     1.6   0.8 #>   3: 2020-02-24      53      53     0.3     1.6   0.8 #>   4: 2020-02-25      97      97     0.3     1.6   0.8 #>   5: 2020-02-26      93      93     0.3     1.6   0.8 #>  ---                                                  #> 126: 2020-06-26     296     296     0.3     1.6   0.8 #> 127: 2020-06-27     255     255     0.3     1.6   0.8 #> 128: 2020-06-28     175     175     0.3     1.6   0.8 #> 129: 2020-06-29     174     174     0.3     1.6   0.8 #> 130: 2020-06-30     126     126     0.3     1.6   0.8  # Simulate secondary cases cases <- convolve_and_scale(cases, type = \"prevalence\") cases #>            date confirm primary scaling meanlog sdlog index scaled      conv #>          <Date>   <num>   <num>   <num>   <num> <num> <int>  <num>     <num> #>   1: 2020-02-22      14      14     0.3     1.6   0.8     1    4.2  4.200000 #>   2: 2020-02-23      62      62     0.3     1.6   0.8     2   18.6  6.749663 #>   3: 2020-02-24      53      53     0.3     1.6   0.8     3   15.9 10.939618 #>   4: 2020-02-25      97      97     0.3     1.6   0.8     4   29.1 13.765588 #>   5: 2020-02-26      93      93     0.3     1.6   0.8     5   27.9 17.347381 #>  ---                                                                         #> 126: 2020-06-26     296     296     0.3     1.6   0.8   126   88.8 77.941892 #> 127: 2020-06-27     255     255     0.3     1.6   0.8   127   76.5 82.996181 #> 128: 2020-06-28     175     175     0.3     1.6   0.8   128   52.5 83.459485 #> 129: 2020-06-29     174     174     0.3     1.6   0.8   129   52.2 80.163424 #> 130: 2020-06-30     126     126     0.3     1.6   0.8   130   37.8 75.330670 #>      secondary #>          <int> #>   1:         4 #>   2:        18 #>   3:        23 #>   4:        38 #>   5:        49 #>  ---           #> 126:       273 #> 127:       266 #> 128:       235 #> 129:       207 #> 130:       170"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/copy_results_to_latest.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy Results From Dated Folder to Latest — copy_results_to_latest","title":"Copy Results From Dated Folder to Latest — copy_results_to_latest","text":"Copies output dated folder latest folder. May undergo changes later releases.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/copy_results_to_latest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy Results From Dated Folder to Latest — copy_results_to_latest","text":"","code":"copy_results_to_latest(target_folder = NULL, latest_folder = NULL)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/copy_results_to_latest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy Results From Dated Folder to Latest — copy_results_to_latest","text":"target_folder Character string specifying save results (create present). latest_folder Character string containing path latest target folder. produced setup_target_folder.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/copy_results_to_latest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy Results From Dated Folder to Latest — copy_results_to_latest","text":"return value, called side effects","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_backcalc_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Back Calculation Data — create_backcalc_data","title":"Create Back Calculation Data — create_backcalc_data","text":"Takes output backcalc_opts() converts list understood stan.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_backcalc_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Back Calculation Data — create_backcalc_data","text":"","code":"create_backcalc_data(backcalc = backcalc_opts())"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_backcalc_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Back Calculation Data — create_backcalc_data","text":"backcalc list options generated backcalc_opts() define back calculation. Defaults backcalc_opts().","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_backcalc_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Back Calculation Data — create_backcalc_data","text":"list settings defining Gaussian process","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_clean_reported_cases.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Clean Reported Cases — create_clean_reported_cases","title":"Create Clean Reported Cases — create_clean_reported_cases","text":"Filters leading zeros, completes dates, applies optional threshold point 0 cases replaced user supplied value (defaults NA).","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_clean_reported_cases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Clean Reported Cases — create_clean_reported_cases","text":"","code":"create_clean_reported_cases(   data,   filter_leading_zeros = TRUE,   zero_threshold = Inf,   fill = NA_integer_,   add_breakpoints = TRUE )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_clean_reported_cases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Clean Reported Cases — create_clean_reported_cases","text":"data <data.frame> confirmed cases (confirm) date (date). confirm must numeric date must date format. Optionally can also logical accumulate column indicates whether data added next data point. useful modelling e.g. weekly incidence data. See also fill_missing() function helps add accumulate column desired properties dealing non-daily data. accumulation done happens truncation specified truncation argument. filter_leading_zeros Logical, defaults TRUE. zeros start time series filtered . zero_threshold Numeric defaults Inf. Indicates detected zero cases meaningful using threshold number cases based 7-day average. average threshold zero replaced using fill. fill Deprecated; zero dates  7-day averages zero_threshold skipped model fitting. add_breakpoints Logical, defaults TRUE. breakpoint column added data frame exist.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_clean_reported_cases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Clean Reported Cases — create_clean_reported_cases","text":"cleaned data frame reported cases","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_clean_reported_cases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Clean Reported Cases — create_clean_reported_cases","text":"","code":"if (FALSE) { # \\dontrun{ create_clean_reported_cases(example_confirmed, 7) } # }"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_delay_inits.html","id":null,"dir":"Reference","previous_headings":"","what":"Create initial conditions for delays — create_delay_inits","title":"Create initial conditions for delays — create_delay_inits","text":"Create initial conditions delays","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_delay_inits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create initial conditions for delays — create_delay_inits","text":"","code":"create_delay_inits(data)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_delay_inits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create initial conditions for delays — create_delay_inits","text":"data list data produced create_stan_data().","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_delay_inits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create initial conditions for delays — create_delay_inits","text":"list initial conditions delays","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_forecast_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create forecast settings — create_forecast_data","title":"Create forecast settings — create_forecast_data","text":"Create forecast settings","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_forecast_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create forecast settings — create_forecast_data","text":"","code":"create_forecast_data(forecast = forecast_opts(), data)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_forecast_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create forecast settings — create_forecast_data","text":"forecast list options generated forecast_opts() defining forecast opitions. Defaults forecast_opts(). NULL forecasting one. data <data.frame> confirmed cases (confirm) date (date). confirm must numeric date must date format. Optionally can also logical accumulate column indicates whether data added next data point. useful modelling e.g. weekly incidence data. See also fill_missing() function helps add accumulate column desired properties dealing non-daily data. accumulation done happens truncation specified truncation argument.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_forecast_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create forecast settings — create_forecast_data","text":"list settings ready passed stan defining Observation Model","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_future_rt.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct the Required Future Rt assumption — create_future_rt","title":"Construct the Required Future Rt assumption — create_future_rt","text":"Converts future argument rt_opts() arguments can passed stan.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_future_rt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct the Required Future Rt assumption — create_future_rt","text":"","code":"create_future_rt(future = c(\"latest\", \"project\", \"estimate\"), delay = 0)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_future_rt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct the Required Future Rt assumption — create_future_rt","text":"future character string integer. argument indicates set future Rt values. Supported options project using Rt model (\"project\"), use latest estimate based partial data (\"latest\"), use latest estimate based data 50% complete (\"estimate\"). integer supplied Rt estimate many days future (past negative) past used forwards time. delay Numeric mean delay","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_future_rt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct the Required Future Rt assumption — create_future_rt","text":"list containing logical called fixed integer called ","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_gp_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Gaussian Process Data — create_gp_data","title":"Create Gaussian Process Data — create_gp_data","text":"Takes output gp_opts() converts list understood stan.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_gp_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Gaussian Process Data — create_gp_data","text":"","code":"create_gp_data(gp = gp_opts(), data)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_gp_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Gaussian Process Data — create_gp_data","text":"gp list options generated gp_opts() define Gaussian process. Defaults gp_opts(). Set NULL disable Gaussian process. data list containing following numeric values: t, seeding_time, horizon.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_gp_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Gaussian Process Data — create_gp_data","text":"list settings defining Gaussian process","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_gp_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Gaussian Process Data — create_gp_data","text":"","code":"if (FALSE) { # \\dontrun{ # define input data required data <- list(   t = 30,   seeding_time = 7,   horizon = 7 )  # default gaussian process data create_gp_data(data = data)  # settings when no gaussian process is desired create_gp_data(NULL, data)  # custom lengthscale create_gp_data(gp_opts(ls_mean = 14), data) } # }"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_initial_conditions.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Initial Conditions Generating Function — create_initial_conditions","title":"Create Initial Conditions Generating Function — create_initial_conditions","text":"Uses output create_stan_data() create function can used sample prior distributions (close possible) parameters. Used order initialise stan chain within range plausible values.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_initial_conditions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Initial Conditions Generating Function — create_initial_conditions","text":"","code":"create_initial_conditions(data)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_initial_conditions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Initial Conditions Generating Function — create_initial_conditions","text":"data list data produced create_stan_data().","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_initial_conditions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Initial Conditions Generating Function — create_initial_conditions","text":"initial condition generating function","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_obs_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Observation Model Settings — create_obs_model","title":"Create Observation Model Settings — create_obs_model","text":"Takes output obs_opts() converts list understood stan.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_obs_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Observation Model Settings — create_obs_model","text":"","code":"create_obs_model(obs = obs_opts(), dates)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_obs_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Observation Model Settings — create_obs_model","text":"obs list options generated obs_opts() defining observation model. Defaults obs_opts(). dates vector dates used calculate day week.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_obs_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Observation Model Settings — create_obs_model","text":"list settings ready passed stan defining Observation Model","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_obs_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Observation Model Settings — create_obs_model","text":"","code":"if (FALSE) { # \\dontrun{ dates <- seq(as.Date(\"2020-03-15\"), by = \"days\", length.out = 15) # default observation model data create_obs_model(dates = dates)  # Poisson observation model create_obs_model(obs_opts(family = \"poisson\"), dates = dates)  # Applying a observation scaling to the data create_obs_model(  obs_opts(scale = Normal(mean = 0.4, sd = 0.01)), dates = dates )  # Apply a custom week week length create_obs_model(obs_opts(week_length = 3), dates = dates) } # }"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_rt_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Time-varying Reproduction Number Data — create_rt_data","title":"Create Time-varying Reproduction Number Data — create_rt_data","text":"Takes output rt_opts() converts list understood stan.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_rt_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Time-varying Reproduction Number Data — create_rt_data","text":"","code":"create_rt_data(rt = rt_opts(), breakpoints = NULL, delay = 0, horizon = 0)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_rt_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Time-varying Reproduction Number Data — create_rt_data","text":"rt list options generated rt_opts() defining Rt estimation. Defaults rt_opts(). generate new infections using non-mechanistic model instead renewal equation model, use rt = NULL. non-mechanistic model internally uses setting rt = rt_opts(use_rt = FALSE, future = \"project\", gp_on = \"R0\"). breakpoints integer vector (binary) indicating location breakpoints. delay Numeric mean delay horizon Numeric, forecast horizon.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_rt_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Time-varying Reproduction Number Data — create_rt_data","text":"list settings defining time-varying reproduction number","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_rt_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Time-varying Reproduction Number Data — create_rt_data","text":"","code":"if (FALSE) { # \\dontrun{ # default Rt data create_rt_data()  # settings when no Rt is desired create_rt_data(rt = NULL)  # using breakpoints create_rt_data(rt_opts(use_breakpoints = TRUE), breakpoints = rep(1, 10))  # using random walk create_rt_data(rt_opts(rw = 7), breakpoints = rep(1, 10)) } # }"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_shifted_cases.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Delay Shifted Cases — create_shifted_cases","title":"Create Delay Shifted Cases — create_shifted_cases","text":"functions creates data frame reported cases smoothed using centred partial rolling average (period set smoothing_window) shifted back time delay. used estimate_infections() generate mean shifted prior back calculation method (see backcalc_opts()) based.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_shifted_cases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Delay Shifted Cases — create_shifted_cases","text":"","code":"create_shifted_cases(data, shift, smoothing_window, horizon)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_shifted_cases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Delay Shifted Cases — create_shifted_cases","text":"data <data.frame> confirmed cases (confirm) date (date). confirm must numeric date must date format. Optionally can also logical accumulate column indicates whether data added next data point. useful modelling e.g. weekly incidence data. See also fill_missing() function helps add accumulate column desired properties dealing non-daily data. accumulation done happens truncation specified truncation argument. shift Numeric, mean delay shift apply. smoothing_window Numeric, rolling average smoothing window apply. Must odd order defined centred average. horizon Deprecated; use forecast instead specify predictive horizon","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_shifted_cases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Delay Shifted Cases — create_shifted_cases","text":"<data.frame> shifted reported cases","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_shifted_cases.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Delay Shifted Cases — create_shifted_cases","text":"function first shifts data back time shift days (thus discarding first shift days data) applies centred rolling mean length smoothing_window shifted data except final period. final period (forecast horizon plus half smoothing window) instead replaced log-linear model fit (1 added data fitting avoid zeroes later subtracted ), projected end forecast horizon. initial part data (corresponding length smoothing window) removed, non-integer resulting values rounded .","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_shifted_cases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Delay Shifted Cases — create_shifted_cases","text":"","code":"if (FALSE) { # \\dontrun{ shift <- 7 horizon <- 7 smoothing_window <- 14 ## add NAs for horizon cases <- create_clean_reported_cases(example_confirmed, horizon = horizon) ## add zeroes initially cases <- data.table::rbindlist(list(    data.table::data.table(      date = seq(        min(cases$date) - smoothing_window,        min(cases$date) - 1,        by = \"days\"      ),      confirm = 0, breakpoint = 0    ),    cases  )) create_shifted_cases(cases, shift, smoothing_window, horizon) } # }"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_stan_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a List of Stan Arguments — create_stan_args","title":"Create a List of Stan Arguments — create_stan_args","text":"Generates list arguments required stan sampling functions combining required options data, type initialisation. Initialisation defaults random expected create_initial_conditions() used.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_stan_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a List of Stan Arguments — create_stan_args","text":"","code":"create_stan_args(   stan = stan_opts(),   data = NULL,   init = \"random\",   model = \"estimate_infections\",   fixed_param = FALSE,   verbose = FALSE )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_stan_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a List of Stan Arguments — create_stan_args","text":"stan list stan options generated stan_opts(). Defaults stan_opts(). Can used override data, init, verbose settings desired. data list stan data created create_stan_data() init Initial conditions passed {rstan}. Defaults \"random\" (initial values randomly drawn -2 2) can also function (supplied create_initial_conditions()). model Character, name model arguments created. fixed_param Logical, defaults FALSE. arguments created sample fixed parameters (used simulation functions). verbose Logical, defaults FALSE. verbose progress messages returned.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_stan_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a List of Stan Arguments — create_stan_args","text":"list stan arguments","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_stan_args.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a List of Stan Arguments — create_stan_args","text":"","code":"if (FALSE) { # \\dontrun{ # default settings create_stan_args()  # increasing warmup create_stan_args(stan = stan_opts(warmup = 1000)) } # }"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_stan_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Stan Data Required for estimate_infections — create_stan_data","title":"Create Stan Data Required for estimate_infections — create_stan_data","text":"Takes output stan_opts() converts list understood stan. Internally calls create_ family functions construct single list input stan data required present.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_stan_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Stan Data Required for estimate_infections — create_stan_data","text":"","code":"create_stan_data(   data,   seeding_time,   rt,   gp,   obs,   backcalc,   shifted_cases,   forecast )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_stan_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Stan Data Required for estimate_infections — create_stan_data","text":"data <data.frame> confirmed cases (confirm) date (date). confirm must numeric date must date format. Optionally can also logical accumulate column indicates whether data added next data point. useful modelling e.g. weekly incidence data. See also fill_missing() function helps add accumulate column desired properties dealing non-daily data. accumulation done happens truncation specified truncation argument. seeding_time Integer; seeding time, usually obtained using get_seeding_time(). rt list options generated rt_opts() defining Rt estimation. Defaults rt_opts(). generate new infections using non-mechanistic model instead renewal equation model, use rt = NULL. non-mechanistic model internally uses setting rt = rt_opts(use_rt = FALSE, future = \"project\", gp_on = \"R0\"). gp list options generated gp_opts() define Gaussian process. Defaults gp_opts(). Set NULL disable Gaussian process. obs list options generated obs_opts() defining observation model. Defaults obs_opts(). backcalc list options generated backcalc_opts() define back calculation. Defaults backcalc_opts(). shifted_cases <data.frame> delay shifted cases forecast list options generated forecast_opts() defining forecast opitions. Defaults forecast_opts(). NULL forecasting one.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_stan_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Stan Data Required for estimate_infections — create_stan_data","text":"list stan data","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_stan_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Stan Data Required for estimate_infections — create_stan_data","text":"","code":"if (FALSE) { # \\dontrun{ create_stan_data(  example_confirmed, 7, rt_opts(), gp_opts(), obs_opts(), 7,  backcalc_opts(), create_shifted_cases(example_confirmed, 7, 14, 7) ) } # }"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_stan_delays.html","id":null,"dir":"Reference","previous_headings":"","what":"Create delay variables for stan — create_stan_delays","title":"Create delay variables for stan — create_stan_delays","text":"Create delay variables stan","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_stan_delays.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create delay variables for stan — create_stan_delays","text":"","code":"create_stan_delays(..., time_points = 1L)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_stan_delays.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create delay variables for stan — create_stan_delays","text":"... Named delay distributions. names assigned IDs time_points Integer, number time points data; determines weight associated weighted delay priors; default: 1","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_stan_delays.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create delay variables for stan — create_stan_delays","text":"list variables expected stan model","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_stan_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Create parameters for stan — create_stan_params","title":"Create parameters for stan — create_stan_params","text":"Create parameters stan","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_stan_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create parameters for stan — create_stan_params","text":"","code":"create_stan_params(..., lower_bounds = NULL)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_stan_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create parameters for stan — create_stan_params","text":"... Named delay distributions. names assigned IDs lower_bounds Named vector lower bounds delay(s). names correspond names given delay distributions passed. NULL (default) parameters given lower bound.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/create_stan_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create parameters for stan — create_stan_params","text":"list variables expected stan model","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/default_fill_missing_obs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Temporary function to support the transition to full support of missing data. — default_fill_missing_obs","text":"","code":"default_fill_missing_obs(data, obs, obs_column)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/default_fill_missing_obs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Temporary function to support the transition to full support of missing data. — default_fill_missing_obs","text":"data <data.frame> confirmed cases (confirm) date (date). confirm must numeric date must date format. Optionally can also logical accumulate column indicates whether data added next data point. useful modelling e.g. weekly incidence data. See also fill_missing() function helps add accumulate column desired properties dealing non-daily data. accumulation done happens truncation specified truncation argument. obs list options generated obs_opts() defining observation model. Defaults obs_opts(). obs_column Character (default: \"confirm\"). given, column specified used checking missingness. useful using data set multiple columns hwich one corresponds observations processed .","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/default_fill_missing_obs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Temporary function to support the transition to full support of missing data. — default_fill_missing_obs","text":"data set missing dates filled na values","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/delay_opts.html","id":null,"dir":"Reference","previous_headings":"","what":"Delay Distribution Options — delay_opts","title":"Delay Distribution Options — delay_opts","text":"Returns delay distributions formatted usage downstream functions.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/delay_opts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delay Distribution Options — delay_opts","text":"","code":"delay_opts(   dist = Fixed(0),   ...,   fixed = FALSE,   default_cdf_cutoff = 0.001,   weight_prior = TRUE )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/delay_opts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delay Distribution Options — delay_opts","text":"dist delay distribution series delay distributions. Default fixed distribution mass 0, .e. delay. ... deprecated; use dist instead fixed deprecated; use dist instead default_cdf_cutoff Numeric; default CDF cutoff used unconstrained distribution passed dist. dist already constrained maximum CDF cutoff ignored. weight_prior Logical; TRUE (default), priors given dist weighted number observation data points, approximately placing independent prior time step usually preventing posteriors shifting. FALSE, weight applied, .e. parameters dist treated single parameters.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/delay_opts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delay Distribution Options — delay_opts","text":"<delay_opts> object summarising input delay distributions.","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/delay_opts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delay Distribution Options — delay_opts","text":"","code":"# no delays delay_opts() #> - fixed value: #>   0  # A single delay that has uncertainty delay <- LogNormal(   meanlog = Normal(1, 0.2),   sdlog = Normal(0.5, 0.1),   max = 14 ) delay_opts(delay) #> - lognormal distribution (max: 14): #>   meanlog: #>     - normal distribution: #>       mean: #>         1 #>       sd: #>         0.2 #>   sdlog: #>     - normal distribution: #>       mean: #>         0.5 #>       sd: #>         0.1  # A single delay without uncertainty delay <- LogNormal(meanlog = 1, sdlog = 0.5, max = 14) delay_opts(delay) #> - lognormal distribution (max: 14): #>   meanlog: #>     1 #>   sdlog: #>     0.5  # Multiple delays (in this case twice the same) delay_opts(delay + delay) #> Composite distribution: #> - lognormal distribution (max: 14): #>   meanlog: #>     1 #>   sdlog: #>     0.5 #> - lognormal distribution (max: 14): #>   meanlog: #>     1 #>   sdlog: #>     0.5"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/discrete_pmf.html","id":null,"dir":"Reference","previous_headings":"","what":"Discretised probability mass function — discrete_pmf","title":"Discretised probability mass function — discrete_pmf","text":"function returns probability mass function discretised truncated distribution defined distribution type, maximum value model parameters.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/discrete_pmf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Discretised probability mass function — discrete_pmf","text":"","code":"discrete_pmf(   distribution = c(\"exp\", \"gamma\", \"lognormal\", \"normal\", \"fixed\"),   params,   max_value,   cdf_cutoff,   width )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/discrete_pmf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Discretised probability mass function — discrete_pmf","text":"distribution character string representing distribution used (one \"exp\", \"gamma\", \"lognormal\", \"normal\" \"fixed\") params list parameters values (name) required model. exponential model rate parameter gamma model alpha beta. max_value Numeric, maximum value allow. Samples outside range resampled. cdf_cutoff Numeric; desired CDF cutoff. part cumulative distribution function beyond 1 minus value argument removed. Default: 0, .e. use full distribution. width Numeric, width discrete bin.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/discrete_pmf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Discretised probability mass function — discrete_pmf","text":"vector representing probability distribution.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/discrete_pmf.html","id":"methodological-details","dir":"Reference","previous_headings":"","what":"Methodological details","title":"Discretised probability mass function — discrete_pmf","text":"probability mass function discretised probability distribution vector first entry corresponds integral (0,1] interval corresponding continuous distribution (probability integer 0), second entry corresponds (0,2] interval (probability mass integer 1), third entry corresponds (1, 3] interval (probability mass integer 2), etc. approximates true probability mass function double censored distribution arises difference two censored events.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/discrete_pmf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Discretised probability mass function — discrete_pmf","text":"Charniga, K., et al. “Best practices estimating reporting epidemiological delay distributions infectious diseases using public health surveillance healthcare data”, arXiv e-prints, 2024. doi:10.48550/arXiv.2405.08841  Park,  S. W.,  et al.,  \"Estimating epidemiological delay distributions infectious diseases\", medRxiv, 2024. doi:10.1101/2024.01.12.24301247","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/discretise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Discretise a <dist_spec> — discretise","text":"","code":"# S3 method for class 'dist_spec' discretise(x, strict = TRUE, ...)  discretize(x, ...)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/discretise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Discretise a <dist_spec> — discretise","text":"x <dist_spec> strict Logical; TRUE (default) error thrown distribution discretised (e.g., finite maximum specified parameters uncertain). FALSE distribution discretised returned . ... ignored","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/discretise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Discretise a <dist_spec> — discretise","text":"<dist_spec> distributions constant parameters nonparametric.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/discretise.html","id":"methodological-details","dir":"Reference","previous_headings":"","what":"Methodological details","title":"Discretise a <dist_spec> — discretise","text":"probability mass function discretised probability distribution vector first entry corresponds integral (0,1] interval corresponding continuous distribution (probability integer 0), second entry corresponds (0,2] interval (probability mass integer 1), third entry corresponds (1, 3] interval (probability mass integer 2), etc. approximates true probability mass function double censored distribution arises difference two censored events.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/discretise.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Discretise a <dist_spec> — discretise","text":"Charniga, K., et al. “Best practices estimating reporting epidemiological delay distributions infectious diseases using public health surveillance healthcare data”, arXiv e-prints, 2024. doi:10.48550/arXiv.2405.08841  Park,  S. W.,  et al.,  \"Estimating epidemiological delay distributions infectious diseases\", medRxiv, 2024. doi:10.1101/2024.01.12.24301247","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/discretise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Discretise a <dist_spec> — discretise","text":"","code":"# A fixed gamma distribution with mean 5 and sd 1. dist1 <- Gamma(mean = 5, sd = 1, max = 20)  # An uncertain lognormal distribution with meanlog and sdlog normally # distributed as Normal(3, 0.5) and Normal(2, 0.5) respectively dist2 <- LogNormal(   meanlog = Normal(3, 0.5),   sdlog = Normal(2, 0.5),   max = 20 )  # The maxf the sum of two distributions discretise(dist1 + dist2, strict = FALSE) #> Composite distribution: #> - nonparametric distribution #>   PMF: [8e-11 2.3e-05 0.0056 0.078 0.26 0.34 0.22 0.076 0.016 0.0022 0.00022 1.7e-05 1.1e-06 5.5e-08 2.4e-09 9.2e-11 3.2e-12 9.7e-14 2.8e-15 0 0] #> - lognormal distribution (max: 20): #>   meanlog: #>     - normal distribution: #>       mean: #>         3 #>       sd: #>         0.5 #>   sdlog: #>     - normal distribution: #>       mean: #>         2 #>       sd: #>         0.5"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/dist_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit an Integer Adjusted Exponential, Gamma or Lognormal distributions — dist_fit","title":"Fit an Integer Adjusted Exponential, Gamma or Lognormal distributions — dist_fit","text":"Fits integer adjusted exponential, gamma lognormal distribution using stan.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/dist_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit an Integer Adjusted Exponential, Gamma or Lognormal distributions — dist_fit","text":"","code":"dist_fit(   values = NULL,   samples = 1000,   cores = 1,   chains = 2,   dist = \"exp\",   verbose = FALSE,   backend = \"rstan\" )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/dist_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit an Integer Adjusted Exponential, Gamma or Lognormal distributions — dist_fit","text":"values Numeric vector values samples Numeric, number samples take. Must >= 1000. Defaults 1000. cores Numeric, defaults 1. Number CPU cores use (effect greater number chains). chains Numeric, defaults 2. Number MCMC chains use. better minimum two. dist Character string, distribution fit. Defaults exponential (\"exp\") gamma (\"gamma\") lognormal (\"lognormal\") also supported. verbose Logical, defaults FALSE. verbose progress messages printed. backend Character string indicating backend use fitting stan models. Supported arguments \"rstan\" (default) \"cmdstanr\".","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/dist_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit an Integer Adjusted Exponential, Gamma or Lognormal distributions — dist_fit","text":"stan fit interval censored distribution","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/dist_fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit an Integer Adjusted Exponential, Gamma or Lognormal distributions — dist_fit","text":"","code":"# \\donttest{ # integer adjusted exponential model dist_fit(rexp(1:100, 2),   samples = 1000, dist = \"exp\",   cores = ifelse(interactive(), 4, 1), verbose = TRUE ) #>  #> SAMPLING FOR MODEL 'dist_fit' NOW (CHAIN 1). #> Chain 1: Rejecting initial value: #> Chain 1:   Log probability evaluates to log(0), i.e. negative infinity. #> Chain 1:   Stan can't start sampling from this initial value. #> Chain 1: Rejecting initial value: #> Chain 1:   Log probability evaluates to log(0), i.e. negative infinity. #> Chain 1:   Stan can't start sampling from this initial value. #> Chain 1: Rejecting initial value: #> Chain 1:   Log probability evaluates to log(0), i.e. negative infinity. #> Chain 1:   Stan can't start sampling from this initial value. #> Chain 1:  #> Chain 1: Gradient evaluation took 4.6e-05 seconds #> Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 0.46 seconds. #> Chain 1: Adjust your expectations accordingly! #> Chain 1:  #> Chain 1:  #> Chain 1: Iteration:    1 / 1500 [  0%]  (Warmup) #> Chain 1: Iteration:   50 / 1500 [  3%]  (Warmup) #> Chain 1: Iteration:  100 / 1500 [  6%]  (Warmup) #> Chain 1: Iteration:  150 / 1500 [ 10%]  (Warmup) #> Chain 1: Iteration:  200 / 1500 [ 13%]  (Warmup) #> Chain 1: Iteration:  250 / 1500 [ 16%]  (Warmup) #> Chain 1: Iteration:  300 / 1500 [ 20%]  (Warmup) #> Chain 1: Iteration:  350 / 1500 [ 23%]  (Warmup) #> Chain 1: Iteration:  400 / 1500 [ 26%]  (Warmup) #> Chain 1: Iteration:  450 / 1500 [ 30%]  (Warmup) #> Chain 1: Iteration:  500 / 1500 [ 33%]  (Warmup) #> Chain 1: Iteration:  550 / 1500 [ 36%]  (Warmup) #> Chain 1: Iteration:  600 / 1500 [ 40%]  (Warmup) #> Chain 1: Iteration:  650 / 1500 [ 43%]  (Warmup) #> Chain 1: Iteration:  700 / 1500 [ 46%]  (Warmup) #> Chain 1: Iteration:  750 / 1500 [ 50%]  (Warmup) #> Chain 1: Iteration:  800 / 1500 [ 53%]  (Warmup) #> Chain 1: Iteration:  850 / 1500 [ 56%]  (Warmup) #> Chain 1: Iteration:  900 / 1500 [ 60%]  (Warmup) #> Chain 1: Iteration:  950 / 1500 [ 63%]  (Warmup) #> Chain 1: Iteration: 1000 / 1500 [ 66%]  (Warmup) #> Chain 1: Iteration: 1001 / 1500 [ 66%]  (Sampling) #> Chain 1: Iteration: 1050 / 1500 [ 70%]  (Sampling) #> Chain 1: Iteration: 1100 / 1500 [ 73%]  (Sampling) #> Chain 1: Iteration: 1150 / 1500 [ 76%]  (Sampling) #> Chain 1: Iteration: 1200 / 1500 [ 80%]  (Sampling) #> Chain 1: Iteration: 1250 / 1500 [ 83%]  (Sampling) #> Chain 1: Iteration: 1300 / 1500 [ 86%]  (Sampling) #> Chain 1: Iteration: 1350 / 1500 [ 90%]  (Sampling) #> Chain 1: Iteration: 1400 / 1500 [ 93%]  (Sampling) #> Chain 1: Iteration: 1450 / 1500 [ 96%]  (Sampling) #> Chain 1: Iteration: 1500 / 1500 [100%]  (Sampling) #> Chain 1:  #> Chain 1:  Elapsed Time: 0.139 seconds (Warm-up) #> Chain 1:                0.066 seconds (Sampling) #> Chain 1:                0.205 seconds (Total) #> Chain 1:  #>  #> SAMPLING FOR MODEL 'dist_fit' NOW (CHAIN 2). #> Chain 2: Rejecting initial value: #> Chain 2:   Log probability evaluates to log(0), i.e. negative infinity. #> Chain 2:   Stan can't start sampling from this initial value. #> Chain 2:  #> Chain 2: Gradient evaluation took 3.8e-05 seconds #> Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 0.38 seconds. #> Chain 2: Adjust your expectations accordingly! #> Chain 2:  #> Chain 2:  #> Chain 2: Iteration:    1 / 1500 [  0%]  (Warmup) #> Chain 2: Iteration:   50 / 1500 [  3%]  (Warmup) #> Chain 2: Iteration:  100 / 1500 [  6%]  (Warmup) #> Chain 2: Iteration:  150 / 1500 [ 10%]  (Warmup) #> Chain 2: Iteration:  200 / 1500 [ 13%]  (Warmup) #> Chain 2: Iteration:  250 / 1500 [ 16%]  (Warmup) #> Chain 2: Iteration:  300 / 1500 [ 20%]  (Warmup) #> Chain 2: Iteration:  350 / 1500 [ 23%]  (Warmup) #> Chain 2: Iteration:  400 / 1500 [ 26%]  (Warmup) #> Chain 2: Iteration:  450 / 1500 [ 30%]  (Warmup) #> Chain 2: Iteration:  500 / 1500 [ 33%]  (Warmup) #> Chain 2: Iteration:  550 / 1500 [ 36%]  (Warmup) #> Chain 2: Iteration:  600 / 1500 [ 40%]  (Warmup) #> Chain 2: Iteration:  650 / 1500 [ 43%]  (Warmup) #> Chain 2: Iteration:  700 / 1500 [ 46%]  (Warmup) #> Chain 2: Iteration:  750 / 1500 [ 50%]  (Warmup) #> Chain 2: Iteration:  800 / 1500 [ 53%]  (Warmup) #> Chain 2: Iteration:  850 / 1500 [ 56%]  (Warmup) #> Chain 2: Iteration:  900 / 1500 [ 60%]  (Warmup) #> Chain 2: Iteration:  950 / 1500 [ 63%]  (Warmup) #> Chain 2: Iteration: 1000 / 1500 [ 66%]  (Warmup) #> Chain 2: Iteration: 1001 / 1500 [ 66%]  (Sampling) #> Chain 2: Iteration: 1050 / 1500 [ 70%]  (Sampling) #> Chain 2: Iteration: 1100 / 1500 [ 73%]  (Sampling) #> Chain 2: Iteration: 1150 / 1500 [ 76%]  (Sampling) #> Chain 2: Iteration: 1200 / 1500 [ 80%]  (Sampling) #> Chain 2: Iteration: 1250 / 1500 [ 83%]  (Sampling) #> Chain 2: Iteration: 1300 / 1500 [ 86%]  (Sampling) #> Chain 2: Iteration: 1350 / 1500 [ 90%]  (Sampling) #> Chain 2: Iteration: 1400 / 1500 [ 93%]  (Sampling) #> Chain 2: Iteration: 1450 / 1500 [ 96%]  (Sampling) #> Chain 2: Iteration: 1500 / 1500 [100%]  (Sampling) #> Chain 2:  #> Chain 2:  Elapsed Time: 0.14 seconds (Warm-up) #> Chain 2:                0.072 seconds (Sampling) #> Chain 2:                0.212 seconds (Total) #> Chain 2:  #> Inference for Stan model: dist_fit. #> 2 chains, each with iter=1500; warmup=1000; thin=1;  #> post-warmup draws per chain=500, total post-warmup draws=1000. #>  #>             mean se_mean   sd   2.5%    25%    50%    75%  97.5% n_eff Rhat #> lambda[1]   2.81    0.02 0.49   1.96   2.50   2.76   3.10   3.96   432 1.00 #> lp__      -13.12    0.04 0.75 -15.18 -13.32 -12.80 -12.64 -12.60   371 1.02 #>  #> Samples were drawn using NUTS(diag_e) at Fri Jan 17 09:32:03 2025. #> For each parameter, n_eff is a crude measure of effective sample size, #> and Rhat is the potential scale reduction factor on split chains (at  #> convergence, Rhat=1).   # integer adjusted gamma model dist_fit(rgamma(1:100, 5, 5),   samples = 1000, dist = \"gamma\",   cores = ifelse(interactive(), 4, 1), verbose = TRUE ) #>  #> SAMPLING FOR MODEL 'dist_fit' NOW (CHAIN 1). #> Chain 1:  #> Chain 1: Gradient evaluation took 0.000277 seconds #> Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 2.77 seconds. #> Chain 1: Adjust your expectations accordingly! #> Chain 1:  #> Chain 1:  #> Chain 1: Iteration:    1 / 1500 [  0%]  (Warmup) #> Chain 1: Iteration:   50 / 1500 [  3%]  (Warmup) #> Chain 1: Iteration:  100 / 1500 [  6%]  (Warmup) #> Chain 1: Iteration:  150 / 1500 [ 10%]  (Warmup) #> Chain 1: Iteration:  200 / 1500 [ 13%]  (Warmup) #> Chain 1: Iteration:  250 / 1500 [ 16%]  (Warmup) #> Chain 1: Iteration:  300 / 1500 [ 20%]  (Warmup) #> Chain 1: Iteration:  350 / 1500 [ 23%]  (Warmup) #> Chain 1: Iteration:  400 / 1500 [ 26%]  (Warmup) #> Chain 1: Iteration:  450 / 1500 [ 30%]  (Warmup) #> Chain 1: Iteration:  500 / 1500 [ 33%]  (Warmup) #> Chain 1: Iteration:  550 / 1500 [ 36%]  (Warmup) #> Chain 1: Iteration:  600 / 1500 [ 40%]  (Warmup) #> Chain 1: Iteration:  650 / 1500 [ 43%]  (Warmup) #> Chain 1: Iteration:  700 / 1500 [ 46%]  (Warmup) #> Chain 1: Iteration:  750 / 1500 [ 50%]  (Warmup) #> Chain 1: Iteration:  800 / 1500 [ 53%]  (Warmup) #> Chain 1: Iteration:  850 / 1500 [ 56%]  (Warmup) #> Chain 1: Iteration:  900 / 1500 [ 60%]  (Warmup) #> Chain 1: Iteration:  950 / 1500 [ 63%]  (Warmup) #> Chain 1: Iteration: 1000 / 1500 [ 66%]  (Warmup) #> Chain 1: Iteration: 1001 / 1500 [ 66%]  (Sampling) #> Chain 1: Iteration: 1050 / 1500 [ 70%]  (Sampling) #> Chain 1: Iteration: 1100 / 1500 [ 73%]  (Sampling) #> Chain 1: Iteration: 1150 / 1500 [ 76%]  (Sampling) #> Chain 1: Iteration: 1200 / 1500 [ 80%]  (Sampling) #> Chain 1: Iteration: 1250 / 1500 [ 83%]  (Sampling) #> Chain 1: Iteration: 1300 / 1500 [ 86%]  (Sampling) #> Chain 1: Iteration: 1350 / 1500 [ 90%]  (Sampling) #> Chain 1: Iteration: 1400 / 1500 [ 93%]  (Sampling) #> Chain 1: Iteration: 1450 / 1500 [ 96%]  (Sampling) #> Chain 1: Iteration: 1500 / 1500 [100%]  (Sampling) #> Chain 1:  #> Chain 1:  Elapsed Time: 2.337 seconds (Warm-up) #> Chain 1:                1.441 seconds (Sampling) #> Chain 1:                3.778 seconds (Total) #> Chain 1:  #>  #> SAMPLING FOR MODEL 'dist_fit' NOW (CHAIN 2). #> Chain 2:  #> Chain 2: Gradient evaluation took 0.000298 seconds #> Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 2.98 seconds. #> Chain 2: Adjust your expectations accordingly! #> Chain 2:  #> Chain 2:  #> Chain 2: Iteration:    1 / 1500 [  0%]  (Warmup) #> Chain 2: Iteration:   50 / 1500 [  3%]  (Warmup) #> Chain 2: Iteration:  100 / 1500 [  6%]  (Warmup) #> Chain 2: Iteration:  150 / 1500 [ 10%]  (Warmup) #> Chain 2: Iteration:  200 / 1500 [ 13%]  (Warmup) #> Chain 2: Iteration:  250 / 1500 [ 16%]  (Warmup) #> Chain 2: Iteration:  300 / 1500 [ 20%]  (Warmup) #> Chain 2: Iteration:  350 / 1500 [ 23%]  (Warmup) #> Chain 2: Iteration:  400 / 1500 [ 26%]  (Warmup) #> Chain 2: Iteration:  450 / 1500 [ 30%]  (Warmup) #> Chain 2: Iteration:  500 / 1500 [ 33%]  (Warmup) #> Chain 2: Iteration:  550 / 1500 [ 36%]  (Warmup) #> Chain 2: Iteration:  600 / 1500 [ 40%]  (Warmup) #> Chain 2: Iteration:  650 / 1500 [ 43%]  (Warmup) #> Chain 2: Iteration:  700 / 1500 [ 46%]  (Warmup) #> Chain 2: Iteration:  750 / 1500 [ 50%]  (Warmup) #> Chain 2: Iteration:  800 / 1500 [ 53%]  (Warmup) #> Chain 2: Iteration:  850 / 1500 [ 56%]  (Warmup) #> Chain 2: Iteration:  900 / 1500 [ 60%]  (Warmup) #> Chain 2: Iteration:  950 / 1500 [ 63%]  (Warmup) #> Chain 2: Iteration: 1000 / 1500 [ 66%]  (Warmup) #> Chain 2: Iteration: 1001 / 1500 [ 66%]  (Sampling) #> Chain 2: Iteration: 1050 / 1500 [ 70%]  (Sampling) #> Chain 2: Iteration: 1100 / 1500 [ 73%]  (Sampling) #> Chain 2: Iteration: 1150 / 1500 [ 76%]  (Sampling) #> Chain 2: Iteration: 1200 / 1500 [ 80%]  (Sampling) #> Chain 2: Iteration: 1250 / 1500 [ 83%]  (Sampling) #> Chain 2: Iteration: 1300 / 1500 [ 86%]  (Sampling) #> Chain 2: Iteration: 1350 / 1500 [ 90%]  (Sampling) #> Chain 2: Iteration: 1400 / 1500 [ 93%]  (Sampling) #> Chain 2: Iteration: 1450 / 1500 [ 96%]  (Sampling) #> Chain 2: Iteration: 1500 / 1500 [100%]  (Sampling) #> Chain 2:  #> Chain 2:  Elapsed Time: 2.501 seconds (Warm-up) #> Chain 2:                0.996 seconds (Sampling) #> Chain 2:                3.497 seconds (Total) #> Chain 2:  #> WARN [2025-01-17 09:32:11] dist_fit (chain: 1): Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#bulk-ess -  #> WARN [2025-01-17 09:32:11] dist_fit (chain: 1): Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#tail-ess -  #> Inference for Stan model: dist_fit. #> 2 chains, each with iter=1500; warmup=1000; thin=1;  #> post-warmup draws per chain=500, total post-warmup draws=1000. #>  #>                mean se_mean   sd   2.5%    25%    50%    75%  97.5% n_eff Rhat #> alpha_raw[1]   0.74    0.04 0.52   0.07   0.34   0.65   1.03   2.02   189 1.01 #> beta_raw[1]    0.95    0.04 0.54   0.11   0.53   0.92   1.30   2.07   180 1.01 #> alpha[1]       6.37    0.04 0.52   5.70   5.96   6.27   6.66   7.64   189 1.01 #> beta[1]        6.77    0.04 0.54   5.93   6.35   6.74   7.12   7.90   180 1.01 #> lp__         -11.53    0.10 1.21 -14.78 -12.18 -11.23 -10.55 -10.13   146 1.01 #>  #> Samples were drawn using NUTS(diag_e) at Fri Jan 17 09:32:11 2025. #> For each parameter, n_eff is a crude measure of effective sample size, #> and Rhat is the potential scale reduction factor on split chains (at  #> convergence, Rhat=1).  # integer adjusted lognormal model dist_fit(rlnorm(1:100, log(5), 0.2),   samples = 1000, dist = \"lognormal\",   cores = ifelse(interactive(), 4, 1), verbose = TRUE ) #>  #> SAMPLING FOR MODEL 'dist_fit' NOW (CHAIN 1). #> Chain 1: Rejecting initial value: #> Chain 1:   Log probability evaluates to log(0), i.e. negative infinity. #> Chain 1:   Stan can't start sampling from this initial value. #> Chain 1:  #> Chain 1: Gradient evaluation took 5.7e-05 seconds #> Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 0.57 seconds. #> Chain 1: Adjust your expectations accordingly! #> Chain 1:  #> Chain 1:  #> Chain 1: Iteration:    1 / 1500 [  0%]  (Warmup) #> Chain 1: Iteration:   50 / 1500 [  3%]  (Warmup) #> Chain 1: Iteration:  100 / 1500 [  6%]  (Warmup) #> Chain 1: Iteration:  150 / 1500 [ 10%]  (Warmup) #> Chain 1: Iteration:  200 / 1500 [ 13%]  (Warmup) #> Chain 1: Iteration:  250 / 1500 [ 16%]  (Warmup) #> Chain 1: Iteration:  300 / 1500 [ 20%]  (Warmup) #> Chain 1: Iteration:  350 / 1500 [ 23%]  (Warmup) #> Chain 1: Iteration:  400 / 1500 [ 26%]  (Warmup) #> Chain 1: Iteration:  450 / 1500 [ 30%]  (Warmup) #> Chain 1: Iteration:  500 / 1500 [ 33%]  (Warmup) #> Chain 1: Iteration:  550 / 1500 [ 36%]  (Warmup) #> Chain 1: Iteration:  600 / 1500 [ 40%]  (Warmup) #> Chain 1: Iteration:  650 / 1500 [ 43%]  (Warmup) #> Chain 1: Iteration:  700 / 1500 [ 46%]  (Warmup) #> Chain 1: Iteration:  750 / 1500 [ 50%]  (Warmup) #> Chain 1: Iteration:  800 / 1500 [ 53%]  (Warmup) #> Chain 1: Iteration:  850 / 1500 [ 56%]  (Warmup) #> Chain 1: Iteration:  900 / 1500 [ 60%]  (Warmup) #> Chain 1: Iteration:  950 / 1500 [ 63%]  (Warmup) #> Chain 1: Iteration: 1000 / 1500 [ 66%]  (Warmup) #> Chain 1: Iteration: 1001 / 1500 [ 66%]  (Sampling) #> Chain 1: Iteration: 1050 / 1500 [ 70%]  (Sampling) #> Chain 1: Iteration: 1100 / 1500 [ 73%]  (Sampling) #> Chain 1: Iteration: 1150 / 1500 [ 76%]  (Sampling) #> Chain 1: Iteration: 1200 / 1500 [ 80%]  (Sampling) #> Chain 1: Iteration: 1250 / 1500 [ 83%]  (Sampling) #> Chain 1: Iteration: 1300 / 1500 [ 86%]  (Sampling) #> Chain 1: Iteration: 1350 / 1500 [ 90%]  (Sampling) #> Chain 1: Iteration: 1400 / 1500 [ 93%]  (Sampling) #> Chain 1: Iteration: 1450 / 1500 [ 96%]  (Sampling) #> Chain 1: Iteration: 1500 / 1500 [100%]  (Sampling) #> Chain 1:  #> Chain 1:  Elapsed Time: 0.315 seconds (Warm-up) #> Chain 1:                0.158 seconds (Sampling) #> Chain 1:                0.473 seconds (Total) #> Chain 1:  #>  #> SAMPLING FOR MODEL 'dist_fit' NOW (CHAIN 2). #> Chain 2:  #> Chain 2: Gradient evaluation took 9.2e-05 seconds #> Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 0.92 seconds. #> Chain 2: Adjust your expectations accordingly! #> Chain 2:  #> Chain 2:  #> Chain 2: Iteration:    1 / 1500 [  0%]  (Warmup) #> Chain 2: Iteration:   50 / 1500 [  3%]  (Warmup) #> Chain 2: Iteration:  100 / 1500 [  6%]  (Warmup) #> Chain 2: Iteration:  150 / 1500 [ 10%]  (Warmup) #> Chain 2: Iteration:  200 / 1500 [ 13%]  (Warmup) #> Chain 2: Iteration:  250 / 1500 [ 16%]  (Warmup) #> Chain 2: Iteration:  300 / 1500 [ 20%]  (Warmup) #> Chain 2: Iteration:  350 / 1500 [ 23%]  (Warmup) #> Chain 2: Iteration:  400 / 1500 [ 26%]  (Warmup) #> Chain 2: Iteration:  450 / 1500 [ 30%]  (Warmup) #> Chain 2: Iteration:  500 / 1500 [ 33%]  (Warmup) #> Chain 2: Iteration:  550 / 1500 [ 36%]  (Warmup) #> Chain 2: Iteration:  600 / 1500 [ 40%]  (Warmup) #> Chain 2: Iteration:  650 / 1500 [ 43%]  (Warmup) #> Chain 2: Iteration:  700 / 1500 [ 46%]  (Warmup) #> Chain 2: Iteration:  750 / 1500 [ 50%]  (Warmup) #> Chain 2: Iteration:  800 / 1500 [ 53%]  (Warmup) #> Chain 2: Iteration:  850 / 1500 [ 56%]  (Warmup) #> Chain 2: Iteration:  900 / 1500 [ 60%]  (Warmup) #> Chain 2: Iteration:  950 / 1500 [ 63%]  (Warmup) #> Chain 2: Iteration: 1000 / 1500 [ 66%]  (Warmup) #> Chain 2: Iteration: 1001 / 1500 [ 66%]  (Sampling) #> Chain 2: Iteration: 1050 / 1500 [ 70%]  (Sampling) #> Chain 2: Iteration: 1100 / 1500 [ 73%]  (Sampling) #> Chain 2: Iteration: 1150 / 1500 [ 76%]  (Sampling) #> Chain 2: Iteration: 1200 / 1500 [ 80%]  (Sampling) #> Chain 2: Iteration: 1250 / 1500 [ 83%]  (Sampling) #> Chain 2: Iteration: 1300 / 1500 [ 86%]  (Sampling) #> Chain 2: Iteration: 1350 / 1500 [ 90%]  (Sampling) #> Chain 2: Iteration: 1400 / 1500 [ 93%]  (Sampling) #> Chain 2: Iteration: 1450 / 1500 [ 96%]  (Sampling) #> Chain 2: Iteration: 1500 / 1500 [100%]  (Sampling) #> Chain 2:  #> Chain 2:  Elapsed Time: 0.304 seconds (Warm-up) #> Chain 2:                0.159 seconds (Sampling) #> Chain 2:                0.463 seconds (Total) #> Chain 2:  #> Inference for Stan model: dist_fit. #> 2 chains, each with iter=1500; warmup=1000; thin=1;  #> post-warmup draws per chain=500, total post-warmup draws=1000. #>  #>            mean se_mean   sd   2.5%    25%    50%    75%  97.5% n_eff Rhat #> mu[1]      1.60    0.00 0.02   1.55   1.59   1.60   1.62   1.65   636 1.00 #> sigma[1]   0.19    0.00 0.02   0.15   0.17   0.19   0.20   0.22   612 1.01 #> lp__     -82.06    0.05 1.05 -84.86 -82.49 -81.69 -81.32 -81.08   457 1.00 #>  #> Samples were drawn using NUTS(diag_e) at Fri Jan 17 09:32:12 2025. #> For each parameter, n_eff is a crude measure of effective sample size, #> and Rhat is the potential scale reduction factor on split chains (at  #> convergence, Rhat=1). # }"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/dist_skel.html","id":null,"dir":"Reference","previous_headings":"","what":"Distribution Skeleton — dist_skel","title":"Distribution Skeleton — dist_skel","text":"function acts skeleton truncated distribution defined model type, maximum value model parameters. designed used output get_dist().","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/dist_skel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distribution Skeleton — dist_skel","text":"","code":"dist_skel(   n,   dist = FALSE,   cum = TRUE,   model,   discrete = FALSE,   params,   max_value = 120 )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/dist_skel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distribution Skeleton — dist_skel","text":"n Numeric vector, number samples take (days probability density). dist Logical, defaults FALSE. probability density returned rather number samples. cum Logical, defaults TRUE. dist = TRUE returned distribution cumulative. model Character string, defining model used. Supported options exponential (\"exp\"), gamma (\"gamma\"), log normal (\"lognormal\") discrete Logical,  defaults FALSE. probability distribution discretised. case entry probability mass function corresponds 2-length interval ending entry except first interval covers (0, 1).  , probability mass function vector first entry corresponds integral (0,1] interval continuous distribution, second entry corresponds (0,2] interval, third entry corresponds (1, 3] interval etc. params list parameters values (name) required model. exponential model rate parameter gamma model alpha beta. max_value Numeric, maximum value allow. Defaults 120. Samples outside range resampled.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/dist_skel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distribution Skeleton — dist_skel","text":"vector samples probability distribution.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/dist_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a distribution. — dist_spec","title":"Specify a distribution. — dist_spec","text":"function deprecated user-facing function (functionality still used internally). Construct distributions using corresponding distribution function Gamma(), LogNormal(), Normal() Fixed() instead.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/dist_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a distribution. — dist_spec","text":"","code":"dist_spec(   distribution = c(\"lognormal\", \"normal\", \"gamma\", \"fixed\", \"empty\"),   params_mean = numeric(0),   params_sd = numeric(0),   max = Inf,   pmf = numeric(0),   fixed = FALSE )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/dist_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a distribution. — dist_spec","text":"distribution Character, defaults \"lognormal\". (discretised) distribution used. Can \"lognormal\", \"gamma\", \"normal\" \"fixed\". corresponding parameters (defined natural_params()) passed params_mean,  uncertainty params_sd. params_mean Numeric. Central values parameters distribution defined [natural_params(). params_sd Numeric. Standard deviations parameters distribution defined [natural_params(). max Numeric, maximum value distribution. distribution truncated value. Default: Inf, .e. maximum. pmf Numeric, vector values represent (nonparametric) probability mass function delay (starting 0); defaults empty vector corresponding parametric specification distribution (using params_mean, params_sd. fixed Deprecated, use fix_parameters() instead.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/dist_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify a distribution. — dist_spec","text":"list distribution options.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/epinow.html","id":null,"dir":"Reference","previous_headings":"","what":"Real-time Rt Estimation, Forecasting and Reporting — epinow","title":"Real-time Rt Estimation, Forecasting and Reporting — epinow","text":"function wraps functionality estimate_infections() order estimate Rt cases date infection forecast infections future. addition functionality estimate_infections() produces additional summary output useful reporting results interpreting well error catching reporting, making particularly useful production use e.g. running set intervals dedicated server.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/epinow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Real-time Rt Estimation, Forecasting and Reporting — epinow","text":"","code":"epinow(   data,   generation_time = gt_opts(),   delays = delay_opts(),   truncation = trunc_opts(),   rt = rt_opts(),   backcalc = backcalc_opts(),   gp = gp_opts(),   obs = obs_opts(),   forecast = forecast_opts(),   stan = stan_opts(),   horizon,   CrIs = c(0.2, 0.5, 0.9),   filter_leading_zeros = TRUE,   zero_threshold = Inf,   return_output = is.null(target_folder),   output = c(\"samples\", \"plots\", \"latest\", \"fit\", \"timing\"),   plot_args = list(),   target_folder = NULL,   target_date,   logs = tempdir(),   id = \"epinow\",   verbose = interactive(),   reported_cases )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/epinow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Real-time Rt Estimation, Forecasting and Reporting — epinow","text":"data <data.frame> confirmed cases (confirm) date (date). confirm must numeric date must date format. Optionally can also logical accumulate column indicates whether data added next data point. useful modelling e.g. weekly incidence data. See also fill_missing() function helps add accumulate column desired properties dealing non-daily data. accumulation done happens truncation specified truncation argument. generation_time call gt_opts() (alias generation_time_opts()) defining generation time distribution used. backwards compatibility list summary parameters can also passed. delays call delay_opts() defining delay distributions options. See documentation delay_opts() examples details. truncation call trunc_opts() defining truncation observed data. Defaults trunc_opts(), .e. truncation.  See estimate_truncation() help file approach estimating data dist list element returned estimate_truncation() used truncation argument , thereby propagating uncertainty estimate. rt list options generated rt_opts() defining Rt estimation. Defaults rt_opts(). generate new infections using non-mechanistic model instead renewal equation model, use rt = NULL. non-mechanistic model internally uses setting rt = rt_opts(use_rt = FALSE, future = \"project\", gp_on = \"R0\"). backcalc list options generated backcalc_opts() define back calculation. Defaults backcalc_opts(). gp list options generated gp_opts() define Gaussian process. Defaults gp_opts(). Set NULL disable Gaussian process. obs list options generated obs_opts() defining observation model. Defaults obs_opts(). forecast list options generated forecast_opts() defining forecast opitions. Defaults forecast_opts(). NULL forecasting one. stan list stan options generated stan_opts(). Defaults stan_opts(). Can used override data, init, verbose settings desired. horizon Deprecated; use forecast instead specify predictive horizon CrIs Numeric vector credible intervals calculate. filter_leading_zeros Logical, defaults TRUE. zeros start time series filtered . zero_threshold Numeric defaults Inf. Indicates detected zero cases meaningful using threshold number cases based 7-day average. average threshold zero replaced using fill. return_output Logical, defaults FALSE. output returned, automatically updates TRUE directory saving specified. output character vector optional output return. Supported options samples (\"samples\"), plots (\"plots\"), run time (\"timing\"), copying dated folder latest folder (target_folder null, set using \"latest\"), stan fit (\"fit\"). default return options. plot_args list optional arguments passed plot.epinow(). target_folder Character string specifying save results (create present). target_date Date, defaults maximum found data specified. logs Character path indicating target folder store log information. Defaults temporary directory specified. Default logging can disabled logs set NULL. specifying custom logging setup code setup_default_logging() setup_logging() function sensible place start. id character string used assign logging information error. Used regional_epinow() assign errors regions. Alter default run error catching. verbose Logical, defaults TRUE used interactively otherwise FALSE. verbose debug progress messages printed. Corresponds \"DEBUG\" level futile.logger. See setup_logging detailed logging options. reported_cases Deprecated; use data instead.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/epinow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Real-time Rt Estimation, Forecasting and Reporting — epinow","text":"list output estimate_infections additional elements summarising results reporting errors occurred.","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/epinow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Real-time Rt Estimation, Forecasting and Reporting — epinow","text":"","code":"# \\donttest{ # set number of cores to use old_opts <- options() options(mc.cores = ifelse(interactive(), 4, 1))  # set an example generation time. In practice this should use an estimate # from the literature or be estimated from data generation_time <- Gamma(   shape = Normal(1.3, 0.3),   rate = Normal(0.37, 0.09),   max = 14 ) # set an example incubation period. In practice this should use an estimate # from the literature or be estimated from data incubation_period <- LogNormal(    meanlog = Normal(1.6, 0.06),    sdlog = Normal(0.4, 0.07),    max = 14 ) # set an example reporting delay. In practice this should use an estimate # from the literature or be estimated from data reporting_delay <- LogNormal(mean = 2, sd = 1, max = 10)  # example case data reported_cases <- example_confirmed[1:40]  # estimate Rt and nowcast/forecast cases by date of infection out <- epinow(   data = reported_cases,   generation_time = gt_opts(generation_time),   rt = rt_opts(prior = LogNormal(mean = 2, sd = 0.1)),   delays = delay_opts(incubation_period + reporting_delay) ) #> Logging threshold set at INFO for the name logger #> Writing EpiNow2 logs to the console and: #> /tmp/RtmpsfRcjp/regional-epinow/2020-04-01.log. #> Logging threshold set at INFO for the name logger #> Writing EpiNow2.epinow logs to the console and: #> /tmp/RtmpsfRcjp/epinow/2020-04-01.log. #> WARN [2025-01-17 09:32:12] epinow: The `filter_leading_zeros` argument of `estimate_infections()` is deprecated as of EpiNow2 1.7.0. -  #> WARN [2025-01-17 09:32:13] epinow: The `zero_threshold` argument of `estimate_infections()` is deprecated as of EpiNow2 1.7.0. -  #> WARN [2025-01-17 09:32:58] epinow: There were 1 divergent transitions after warmup. See #> https://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup #> to find out why this is a problem and how to eliminate them. -  #> WARN [2025-01-17 09:32:58] epinow: Examine the pairs() plot to diagnose sampling problems #>  -  # summary of the latest estimates summary(out) #>                             measure                  estimate #>                              <char>                    <char> #> 1:           New infections per day       3511 (1931 -- 6443) #> 2: Expected change in daily reports                Decreasing #> 3:       Effective reproduction no.           0.8 (0.63 -- 1) #> 4:                   Rate of growth -0.065 (-0.13 -- 0.00035) #> 5:     Doubling/halving time (days)        -11 (2000 -- -5.3) # plot estimates plot(out)   # summary of R estimates summary(out, type = \"parameters\", params = \"R\") #>           date variable  strat                           type    median #>         <Date>   <char> <char>                         <char>     <num> #>  1: 2020-02-22        R   <NA>                       estimate 2.0932046 #>  2: 2020-02-23        R   <NA>                       estimate 2.0742469 #>  3: 2020-02-24        R   <NA>                       estimate 2.0524339 #>  4: 2020-02-25        R   <NA>                       estimate 2.0276430 #>  5: 2020-02-26        R   <NA>                       estimate 2.0003527 #>  6: 2020-02-27        R   <NA>                       estimate 1.9715529 #>  7: 2020-02-28        R   <NA>                       estimate 1.9381217 #>  8: 2020-02-29        R   <NA>                       estimate 1.9052145 #>  9: 2020-03-01        R   <NA>                       estimate 1.8693607 #> 10: 2020-03-02        R   <NA>                       estimate 1.8318819 #> 11: 2020-03-03        R   <NA>                       estimate 1.7915851 #> 12: 2020-03-04        R   <NA>                       estimate 1.7496766 #> 13: 2020-03-05        R   <NA>                       estimate 1.7060251 #> 14: 2020-03-06        R   <NA>                       estimate 1.6615403 #> 15: 2020-03-07        R   <NA>                       estimate 1.6161590 #> 16: 2020-03-08        R   <NA>                       estimate 1.5694318 #> 17: 2020-03-09        R   <NA>                       estimate 1.5243524 #> 18: 2020-03-10        R   <NA>                       estimate 1.4774280 #> 19: 2020-03-11        R   <NA>                       estimate 1.4309282 #> 20: 2020-03-12        R   <NA>                       estimate 1.3857576 #> 21: 2020-03-13        R   <NA>                       estimate 1.3410593 #> 22: 2020-03-14        R   <NA>                       estimate 1.2970969 #> 23: 2020-03-15        R   <NA>                       estimate 1.2544436 #> 24: 2020-03-16        R   <NA>                       estimate 1.2126995 #> 25: 2020-03-17        R   <NA>                       estimate 1.1728245 #> 26: 2020-03-18        R   <NA>                       estimate 1.1335612 #> 27: 2020-03-19        R   <NA> estimate based on partial data 1.0977546 #> 28: 2020-03-20        R   <NA> estimate based on partial data 1.0640896 #> 29: 2020-03-21        R   <NA> estimate based on partial data 1.0312702 #> 30: 2020-03-22        R   <NA> estimate based on partial data 1.0006406 #> 31: 2020-03-23        R   <NA> estimate based on partial data 0.9720692 #> 32: 2020-03-24        R   <NA> estimate based on partial data 0.9454812 #> 33: 2020-03-25        R   <NA> estimate based on partial data 0.9220330 #> 34: 2020-03-26        R   <NA> estimate based on partial data 0.8997998 #> 35: 2020-03-27        R   <NA> estimate based on partial data 0.8787748 #> 36: 2020-03-28        R   <NA> estimate based on partial data 0.8593860 #> 37: 2020-03-29        R   <NA> estimate based on partial data 0.8421474 #> 38: 2020-03-30        R   <NA> estimate based on partial data 0.8277967 #> 39: 2020-03-31        R   <NA> estimate based on partial data 0.8146756 #> 40: 2020-04-01        R   <NA> estimate based on partial data 0.8017988 #> 41: 2020-04-02        R   <NA>                       forecast 0.8017988 #> 42: 2020-04-03        R   <NA>                       forecast 0.8017988 #> 43: 2020-04-04        R   <NA>                       forecast 0.8017988 #> 44: 2020-04-05        R   <NA>                       forecast 0.8017988 #> 45: 2020-04-06        R   <NA>                       forecast 0.8017988 #> 46: 2020-04-07        R   <NA>                       forecast 0.8017988 #> 47: 2020-04-08        R   <NA>                       forecast 0.8017988 #>           date variable  strat                           type    median #>          mean         sd  lower_90  lower_50  lower_20  upper_20  upper_50 #>         <num>      <num>     <num>     <num>     <num>     <num>     <num> #>  1: 2.0945625 0.08901705 1.9548799 2.0334941 2.0714957 2.1160576 2.1499519 #>  2: 2.0748765 0.08058514 1.9438332 2.0204392 2.0533346 2.0949202 2.1279557 #>  3: 2.0529249 0.07378758 1.9318637 2.0029019 2.0331795 2.0710515 2.1013251 #>  4: 2.0286208 0.06870206 1.9159098 1.9823109 2.0106083 2.0447974 2.0741500 #>  5: 2.0018988 0.06520549 1.8955967 1.9585175 1.9838721 2.0168027 2.0445623 #>  6: 1.9727278 0.06298436 1.8702554 1.9299983 1.9549044 1.9866160 2.0134250 #>  7: 1.9411214 0.06162241 1.8422521 1.8997694 1.9242037 1.9551234 1.9814716 #>  8: 1.9071447 0.06071914 1.8106001 1.8653036 1.8906865 1.9211946 1.9476406 #>  9: 1.8709147 0.05997073 1.7745959 1.8294756 1.8544915 1.8839082 1.9102825 #> 10: 1.8325969 0.05918591 1.7369503 1.7911713 1.8166046 1.8459930 1.8714254 #> 11: 1.7923962 0.05825714 1.6979061 1.7516934 1.7776536 1.8055869 1.8306156 #> 12: 1.7505465 0.05712321 1.6579294 1.7116668 1.7356306 1.7629568 1.7886233 #> 13: 1.7073004 0.05574775 1.6163437 1.6692719 1.6915114 1.7185309 1.7430837 #> 14: 1.6629203 0.05411724 1.5760667 1.6257498 1.6471379 1.6747146 1.6980556 #> 15: 1.6176719 0.05224669 1.5323160 1.5813595 1.6030405 1.6290035 1.6519437 #> 16: 1.5718195 0.05018049 1.4899432 1.5369604 1.5581180 1.5824387 1.6048652 #> 17: 1.5256240 0.04798446 1.4495697 1.4921916 1.5121503 1.5350181 1.5566504 #> 18: 1.4793418 0.04573582 1.4071962 1.4475386 1.4667496 1.4883164 1.5084771 #> 19: 1.4332254 0.04352079 1.3639701 1.4027475 1.4206782 1.4423372 1.4614286 #> 20: 1.3875238 0.04144367 1.3209208 1.3592894 1.3751140 1.3958226 1.4134379 #> 21: 1.3424826 0.03964088 1.2789950 1.3150228 1.3314345 1.3500544 1.3675758 #> 22: 1.2983422 0.03828602 1.2378867 1.2722229 1.2877641 1.3058325 1.3226100 #> 23: 1.2553342 0.03757317 1.1962623 1.2296814 1.2446136 1.2630494 1.2795070 #> 24: 1.2136768 0.03767792 1.1542531 1.1886515 1.2031514 1.2211869 1.2381921 #> 25: 1.1735690 0.03871393 1.1106765 1.1482362 1.1631402 1.1808792 1.1987477 #> 26: 1.1351855 0.04071126 1.0683523 1.1097246 1.1243331 1.1439237 1.1606195 #> 27: 1.0986723 0.04362724 1.0284051 1.0704970 1.0874858 1.1089543 1.1261966 #> 28: 1.0641435 0.04737428 0.9874307 1.0333749 1.0529505 1.0748867 1.0942011 #> 29: 1.0316801 0.05184322 0.9484161 0.9970779 1.0191819 1.0428855 1.0643284 #> 30: 1.0013298 0.05691441 0.9105962 0.9629343 0.9871068 1.0144158 1.0374658 #> 31: 0.9731087 0.06246237 0.8742135 0.9309030 0.9574909 0.9877380 1.0126598 #> 32: 0.9470038 0.06836084 0.8377123 0.9004440 0.9291677 0.9634994 0.9914206 #> 33: 0.9229782 0.07448996 0.8075112 0.8715226 0.9030506 0.9401880 0.9713972 #> 34: 0.9009762 0.08074307 0.7751755 0.8457614 0.8783746 0.9201709 0.9527718 #> 35: 0.8809285 0.08702999 0.7450461 0.8220318 0.8562202 0.9022719 0.9374154 #> 36: 0.8627578 0.09327579 0.7167127 0.7991922 0.8367292 0.8856209 0.9222232 #> 37: 0.8463825 0.09941665 0.6899655 0.7784044 0.8179970 0.8697235 0.9100497 #> 38: 0.8317194 0.10539574 0.6660794 0.7599482 0.8004872 0.8570784 0.8979053 #> 39: 0.8186865 0.11116122 0.6451005 0.7421734 0.7866082 0.8440091 0.8892889 #> 40: 0.8072046 0.11666634 0.6261711 0.7277443 0.7729046 0.8342125 0.8808662 #> 41: 0.8072046 0.11666634 0.6261711 0.7277443 0.7729046 0.8342125 0.8808662 #> 42: 0.8072046 0.11666634 0.6261711 0.7277443 0.7729046 0.8342125 0.8808662 #> 43: 0.8072046 0.11666634 0.6261711 0.7277443 0.7729046 0.8342125 0.8808662 #> 44: 0.8072046 0.11666634 0.6261711 0.7277443 0.7729046 0.8342125 0.8808662 #> 45: 0.8072046 0.11666634 0.6261711 0.7277443 0.7729046 0.8342125 0.8808662 #> 46: 0.8072046 0.11666634 0.6261711 0.7277443 0.7729046 0.8342125 0.8808662 #> 47: 0.8072046 0.11666634 0.6261711 0.7277443 0.7729046 0.8342125 0.8808662 #>          mean         sd  lower_90  lower_50  lower_20  upper_20  upper_50 #>     upper_90 #>        <num> #>  1: 2.243170 #>  2: 2.208863 #>  3: 2.174446 #>  4: 2.141464 #>  5: 2.108813 #>  6: 2.079107 #>  7: 2.043436 #>  8: 2.006627 #>  9: 1.968274 #> 10: 1.928766 #> 11: 1.890492 #> 12: 1.846040 #> 13: 1.802045 #> 14: 1.755480 #> 15: 1.708346 #> 16: 1.659481 #> 17: 1.608886 #> 18: 1.558046 #> 19: 1.507602 #> 20: 1.457419 #> 21: 1.410738 #> 22: 1.363585 #> 23: 1.318635 #> 24: 1.275829 #> 25: 1.237554 #> 26: 1.202786 #> 27: 1.172269 #> 28: 1.146748 #> 29: 1.121984 #> 30: 1.099485 #> 31: 1.080932 #> 32: 1.063831 #> 33: 1.050872 #> 34: 1.038722 #> 35: 1.028432 #> 36: 1.019793 #> 37: 1.013788 #> 38: 1.010136 #> 39: 1.004981 #> 40: 1.004391 #> 41: 1.004391 #> 42: 1.004391 #> 43: 1.004391 #> 44: 1.004391 #> 45: 1.004391 #> 46: 1.004391 #> 47: 1.004391 #>     upper_90  options(old_opts) # }"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/epinow2_cmdstan_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Load and compile an EpiNow2 cmdstanr model — epinow2_cmdstan_model","title":"Load and compile an EpiNow2 cmdstanr model — epinow2_cmdstan_model","text":"function adapted similar function epinowcast package (Copyright holder: epinowcast authors, MIT License).","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/epinow2_cmdstan_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load and compile an EpiNow2 cmdstanr model — epinow2_cmdstan_model","text":"","code":"epinow2_cmdstan_model(   model = \"estimate_infections\",   dir = system.file(\"stan\", package = \"EpiNow2\"),   verbose = FALSE,   ... )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/epinow2_cmdstan_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load and compile an EpiNow2 cmdstanr model — epinow2_cmdstan_model","text":"model character string indicating model use. Needs present dir (extension .stan). Defaults \"estimate_infections\". dir character string specifying path stan files include model. missing package default used. verbose Logical, defaults TRUE. verbose messages shown. ... Additional arguments passed cmdstanr::cmdstan_model().","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/epinow2_cmdstan_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load and compile an EpiNow2 cmdstanr model — epinow2_cmdstan_model","text":"cmdstanr model.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/epinow2_rstan_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Load an EpiNow2 rstan model. — epinow2_rstan_model","title":"Load an EpiNow2 rstan model. — epinow2_rstan_model","text":"models pre-compiled upon package install returned .","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/epinow2_rstan_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load an EpiNow2 rstan model. — epinow2_rstan_model","text":"","code":"epinow2_rstan_model(model = \"estimate_infections\")"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/epinow2_rstan_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load an EpiNow2 rstan model. — epinow2_rstan_model","text":"model character string indicating model use. Needs amongst compiled models shipped \"EpiNow2\" (see stan directory list). Defaults \"estimate_infections\".","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/epinow2_rstan_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load an EpiNow2 rstan model. — epinow2_rstan_model","text":"rstan model.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/epinow2_stan_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a stan model object for the appropriate backend — epinow2_stan_model","title":"Return a stan model object for the appropriate backend — epinow2_stan_model","text":"Return stan model object appropriate backend","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/epinow2_stan_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a stan model object for the appropriate backend — epinow2_stan_model","text":"","code":"epinow2_stan_model(   backend = c(\"rstan\", \"cmdstanr\"),   model = c(\"estimate_infections\", \"simulate_infections\", \"estimate_secondary\",     \"simulate_secondary\", \"estimate_truncation\", \"dist_fit\") )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/epinow2_stan_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a stan model object for the appropriate backend — epinow2_stan_model","text":"backend Character string indicating backend use fitting stan models. Supported arguments \"rstan\" (default) \"cmdstanr\". model character string indicating model use. One \"estimate_infections\" (default), \"simulate_infections\", \"estimate_secondary\", \"simulate_secondary\", \"estimate_truncation\" \"dist_fit\".","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/epinow2_stan_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a stan model object for the appropriate backend — epinow2_stan_model","text":"stan model object (either rstan::stanmodel cmdstanr::CmdStanModel, depending backend)","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/equals-.dist_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Compares two delay distributions — ==.dist_spec","title":"Compares two delay distributions — ==.dist_spec","text":"Compares two delay distributions","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/equals-.dist_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compares two delay distributions — ==.dist_spec","text":"","code":"# S3 method for class 'dist_spec' e1 == e2  # S3 method for class 'dist_spec' e1 != e2"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/equals-.dist_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compares two delay distributions — ==.dist_spec","text":"e1 first delay distribution (type <dist_spec>) combine. e2 second delay distribution (type <dist_spec>) combine.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/equals-.dist_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compares two delay distributions — ==.dist_spec","text":"TRUE FALSE","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/equals-.dist_spec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compares two delay distributions — ==.dist_spec","text":"","code":"Fixed(1) == Normal(1, 0.5) #> [1] FALSE"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/estimate_delay.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate a Delay Distribution — estimate_delay","title":"Estimate a Delay Distribution — estimate_delay","text":"Estimate log normal delay distribution vector integer delays. Currently function simple wrapper bootstrapped_dist_fit().","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/estimate_delay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate a Delay Distribution — estimate_delay","text":"","code":"estimate_delay(delays, ...)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/estimate_delay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate a Delay Distribution — estimate_delay","text":"delays Integer vector delays ... Arguments pass internal methods.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/estimate_delay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate a Delay Distribution — estimate_delay","text":"<dist_spec> summarising bootstrapped distribution","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/estimate_delay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate a Delay Distribution — estimate_delay","text":"","code":"# \\donttest{ delays <- rlnorm(500, log(5), 1) estimate_delay(delays, samples = 1000, bootstraps = 10) #> WARN [2025-01-17 09:33:05] dist_fit (chain: 1): Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#bulk-ess -  #> WARN [2025-01-17 09:33:05] dist_fit (chain: 1): Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#tail-ess -  #> WARN [2025-01-17 09:33:06] dist_fit (chain: 1): The largest R-hat is 1.07, indicating chains have not mixed. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#r-hat -  #> WARN [2025-01-17 09:33:06] dist_fit (chain: 1): Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#bulk-ess -  #> WARN [2025-01-17 09:33:06] dist_fit (chain: 1): Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#tail-ess -  #> WARN [2025-01-17 09:33:08] dist_fit (chain: 1): Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#bulk-ess -  #> WARN [2025-01-17 09:33:08] dist_fit (chain: 1): Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#tail-ess -  #> WARN [2025-01-17 09:33:09] dist_fit (chain: 1): Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#bulk-ess -  #> WARN [2025-01-17 09:33:09] dist_fit (chain: 1): Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#tail-ess -  #> WARN [2025-01-17 09:33:11] dist_fit (chain: 1): Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#bulk-ess -  #> WARN [2025-01-17 09:33:11] dist_fit (chain: 1): Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#tail-ess -  #> WARN [2025-01-17 09:33:12] dist_fit (chain: 1): Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#bulk-ess -  #> WARN [2025-01-17 09:33:12] dist_fit (chain: 1): Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#tail-ess -  #> WARN [2025-01-17 09:33:14] dist_fit (chain: 1): Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#bulk-ess -  #> WARN [2025-01-17 09:33:14] dist_fit (chain: 1): Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#tail-ess -  #> WARN [2025-01-17 09:33:15] dist_fit (chain: 1): The largest R-hat is 1.12, indicating chains have not mixed. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#r-hat -  #> WARN [2025-01-17 09:33:15] dist_fit (chain: 1): Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#bulk-ess -  #> WARN [2025-01-17 09:33:15] dist_fit (chain: 1): Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#tail-ess -  #> WARN [2025-01-17 09:33:17] dist_fit (chain: 1): The largest R-hat is 1.06, indicating chains have not mixed. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#r-hat -  #> WARN [2025-01-17 09:33:17] dist_fit (chain: 1): Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#bulk-ess -  #> WARN [2025-01-17 09:33:17] dist_fit (chain: 1): Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#tail-ess -  #> WARN [2025-01-17 09:33:18] dist_fit (chain: 1): The largest R-hat is 1.06, indicating chains have not mixed. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#r-hat -  #> WARN [2025-01-17 09:33:18] dist_fit (chain: 1): Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#bulk-ess -  #> WARN [2025-01-17 09:33:18] dist_fit (chain: 1): Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#tail-ess -  #> - lognormal distribution (max: 98): #>   meanlog: #>     - normal distribution: #>       mean: #>         1.4 #>       sd: #>         0.11 #>   sdlog: #>     - normal distribution: #>       mean: #>         1.1 #>       sd: #>         0.085 # }"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/estimate_early_dynamics.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate prior infections and fit early growth — estimate_early_dynamics","title":"Calculate prior infections and fit early growth — estimate_early_dynamics","text":"Calculates prior infections growth rate based first week's data.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/estimate_early_dynamics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate prior infections and fit early growth — estimate_early_dynamics","text":"","code":"estimate_early_dynamics(cases, seeding_time)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/estimate_early_dynamics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate prior infections and fit early growth — estimate_early_dynamics","text":"cases Numeric vector; case counts input data. seeding_time Integer; seeding time, usually obtained using get_seeding_time().","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/estimate_early_dynamics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate prior infections and fit early growth — estimate_early_dynamics","text":"list containing initial_infections_estimate initial_growth_estimate.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/estimate_infections.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Infections, the Time-Varying Reproduction Number and the Rate of Growth — estimate_infections","title":"Estimate Infections, the Time-Varying Reproduction Number and the Rate of Growth — estimate_infections","text":"Uses non-parametric approach reconstruct cases date infection reported cases. uses either generative Rt model non-parametric back calculation estimate underlying latent infections maps infections observed cases via uncertain reporting delays flexible observation model. See examples function arguments details options. default settings may sufficient use case number warmup samples (stan_args = list(warmup)) may need increased may overall number samples. Follow links provided warnings messages diagnose issues MCMC fit. recommended explore several Rt estimation approaches supported may suited users use cases. See example using estimate_infections within epinow wrapper estimate Rt Covid-19 country ECDC data source.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/estimate_infections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Infections, the Time-Varying Reproduction Number and the Rate of Growth — estimate_infections","text":"","code":"estimate_infections(   data,   generation_time = gt_opts(),   delays = delay_opts(),   truncation = trunc_opts(),   rt = rt_opts(),   backcalc = backcalc_opts(),   gp = gp_opts(),   obs = obs_opts(),   forecast = forecast_opts(),   stan = stan_opts(),   horizon,   CrIs = c(0.2, 0.5, 0.9),   filter_leading_zeros = TRUE,   zero_threshold = Inf,   weigh_delay_priors = TRUE,   id = \"estimate_infections\",   verbose = interactive(),   reported_cases )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/estimate_infections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Infections, the Time-Varying Reproduction Number and the Rate of Growth — estimate_infections","text":"data <data.frame> confirmed cases (confirm) date (date). confirm must numeric date must date format. Optionally can also logical accumulate column indicates whether data added next data point. useful modelling e.g. weekly incidence data. See also fill_missing() function helps add accumulate column desired properties dealing non-daily data. accumulation done happens truncation specified truncation argument. generation_time call gt_opts() (alias generation_time_opts()) defining generation time distribution used. backwards compatibility list summary parameters can also passed. delays call delay_opts() defining delay distributions options. See documentation delay_opts() examples details. truncation call trunc_opts() defining truncation observed data. Defaults trunc_opts(), .e. truncation.  See estimate_truncation() help file approach estimating data dist list element returned estimate_truncation() used truncation argument , thereby propagating uncertainty estimate. rt list options generated rt_opts() defining Rt estimation. Defaults rt_opts(). generate new infections using non-mechanistic model instead renewal equation model, use rt = NULL. non-mechanistic model internally uses setting rt = rt_opts(use_rt = FALSE, future = \"project\", gp_on = \"R0\"). backcalc list options generated backcalc_opts() define back calculation. Defaults backcalc_opts(). gp list options generated gp_opts() define Gaussian process. Defaults gp_opts(). Set NULL disable Gaussian process. obs list options generated obs_opts() defining observation model. Defaults obs_opts(). forecast list options generated forecast_opts() defining forecast opitions. Defaults forecast_opts(). NULL forecasting one. stan list stan options generated stan_opts(). Defaults stan_opts(). Can used override data, init, verbose settings desired. horizon Deprecated; use forecast instead specify predictive horizon CrIs Numeric vector credible intervals calculate. filter_leading_zeros Logical, defaults TRUE. zeros start time series filtered . zero_threshold Numeric defaults Inf. Indicates detected zero cases meaningful using threshold number cases based 7-day average. average threshold zero replaced using fill. weigh_delay_priors Logical. TRUE (default), delay distribution priors weighted number observation data points, approximately placing independent prior time step usually preventing posteriors shifting. FALSE, weight applied, .e. delay distributions treated single parameters. id character string used assign logging information error. Used regional_epinow() assign errors regions. Alter default run error catching. verbose Logical, defaults TRUE used interactively otherwise FALSE. verbose debug progress messages printed. Corresponds \"DEBUG\" level futile.logger. See setup_logging detailed logging options. reported_cases Deprecated; use data instead.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/estimate_infections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Infections, the Time-Varying Reproduction Number and the Rate of Growth — estimate_infections","text":"list output including: posterior samples, summarised posterior samples, data used fit model, fit object .","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/estimate_infections.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate Infections, the Time-Varying Reproduction Number and the Rate of Growth — estimate_infections","text":"","code":"# \\donttest{ # set number of cores to use old_opts <- options() options(mc.cores = ifelse(interactive(), 4, 1))  # get example case counts reported_cases <- example_confirmed[1:60]  # set an example generation time. In practice this should use an estimate # from the literature or be estimated from data generation_time <- Gamma(   shape = Normal(1.3, 0.3),   rate = Normal(0.37, 0.09),   max = 14 ) # set an example incubation period. In practice this should use an estimate # from the literature or be estimated from data incubation_period <- LogNormal(    meanlog = Normal(1.6, 0.06),    sdlog = Normal(0.4, 0.07),    max = 14 ) # set an example reporting delay. In practice this should use an estimate # from the literature or be estimated from data reporting_delay <- LogNormal(mean = 2, sd = 1, max = 10)  # for more examples, see the \"estimate_infections examples\" vignette def <- estimate_infections(reported_cases,   generation_time = gt_opts(generation_time),   delays = delay_opts(incubation_period + reporting_delay),   rt = rt_opts(prior = LogNormal(mean = 2, sd = 0.1)) ) # real time estimates summary(def) #>                             measure                 estimate #>                              <char>                   <char> #> 1:           New infections per day      2274 (1331 -- 3796) #> 2: Expected change in daily reports        Likely decreasing #> 3:       Effective reproduction no.        0.9 (0.71 -- 1.1) #> 4:                   Rate of growth -0.028 (-0.097 -- 0.043) #> 5:     Doubling/halving time (days)         -25 (16 -- -7.1) # summary plot plot(def)  options(old_opts) # }"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/estimate_secondary.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate a Secondary Observation from a Primary Observation — estimate_secondary","title":"Estimate a Secondary Observation from a Primary Observation — estimate_secondary","text":"Estimates relationship primary secondary observation, example hospital admissions deaths hospital admissions bed occupancy. See secondary_opts() model structure options. See parameter documentation model defaults options. See examples case studies using synthetic data example forecasting Covid-19 deaths Covid-19 cases. See prototype function may used estimate forecast secondary observation primary across multiple regions # nolint application forecasting Covid-19 deaths Germany Poland.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/estimate_secondary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate a Secondary Observation from a Primary Observation — estimate_secondary","text":"","code":"estimate_secondary(   data,   secondary = secondary_opts(),   delays = delay_opts(LogNormal(meanlog = Normal(2.5, 0.5), sdlog = Normal(0.47, 0.25),     max = 30), weight_prior = FALSE),   truncation = trunc_opts(),   obs = obs_opts(),   stan = stan_opts(),   burn_in = 14,   CrIs = c(0.2, 0.5, 0.9),   filter_leading_zeros = FALSE,   zero_threshold = Inf,   priors = NULL,   model = NULL,   weigh_delay_priors = FALSE,   verbose = interactive(),   reports )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/estimate_secondary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate a Secondary Observation from a Primary Observation — estimate_secondary","text":"data <data.frame> containing date report primary secondary reports. Optionally can also logical accumulate column indicates whether data added next data point. useful modelling e.g. weekly incidence data. See also fill_missing() function helps add accumulate column desired properties dealing non-daily data. accumulation done happens truncation specified truncation argument. secondary call secondary_opts() list containing following  binary variables: cumulative, historic, primary_hist_additive, current, primary_current_additive. parameters control structure secondary model, see secondary_opts() details. delays call delay_opts() defining delay distributions primary secondary observations See documentation delay_opts() details. default diffuse prior  assumed mean 14 days standard deviation 7 days (standard deviation 0.5 0.25 respectively log scale). truncation call trunc_opts() defining truncation observed data. Defaults trunc_opts(), .e. truncation.  See estimate_truncation() help file approach estimating data dist list element returned estimate_truncation() used truncation argument , thereby propagating uncertainty estimate. obs list options generated obs_opts() defining observation model. Defaults obs_opts(). stan list stan options generated stan_opts(). Defaults stan_opts(). Can used override data, init, verbose settings desired. burn_in Integer, defaults 14 days. number data points use estimation fit beginning time series. must less number observations. CrIs Numeric vector credible intervals calculate. filter_leading_zeros Logical, defaults TRUE. zeros start time series filtered . zero_threshold Numeric defaults Inf. Indicates detected zero cases meaningful using threshold number cases based 7-day average. average threshold zero replaced using fill. priors <data.frame> named priors used model fitting rather defaults supplied arguments. typically useful wanting inform estimate posterior another model fit. model compiled stan model override default model. May useful package developers developing extensions. weigh_delay_priors Logical. TRUE, delay distribution priors weighted number observation data points, approximately placing independent prior time step usually preventing posteriors shifting. FALSE (default), weight applied, .e. delay distributions treated single parameters. verbose Logical, model fitting progress returned. Defaults interactive(). reports Deprecated; use data instead.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/estimate_secondary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate a Secondary Observation from a Primary Observation — estimate_secondary","text":"list containing: predictions (<data.frame> ordered date primary, secondary observations, summary model estimated secondary observations), posterior contains summary entire model posterior, data (list data used fit model), fit (stanfit object).","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/estimate_secondary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate a Secondary Observation from a Primary Observation — estimate_secondary","text":"","code":"# \\donttest{ # set number of cores to use old_opts <- options() options(mc.cores = ifelse(interactive(), 4, 1))  # load data.table for manipulation library(data.table)  #### Incidence data example ####  # make some example secondary incidence data cases <- example_confirmed cases <- as.data.table(cases)[, primary := confirm] # Assume that only 40 percent of cases are reported cases[, scaling := 0.4] #>            date confirm primary scaling #>          <Date>   <num>   <num>   <num> #>   1: 2020-02-22      14      14     0.4 #>   2: 2020-02-23      62      62     0.4 #>   3: 2020-02-24      53      53     0.4 #>   4: 2020-02-25      97      97     0.4 #>   5: 2020-02-26      93      93     0.4 #>  ---                                    #> 126: 2020-06-26     296     296     0.4 #> 127: 2020-06-27     255     255     0.4 #> 128: 2020-06-28     175     175     0.4 #> 129: 2020-06-29     174     174     0.4 #> 130: 2020-06-30     126     126     0.4 # Parameters of the assumed log normal delay distribution cases[, meanlog := 1.8][, sdlog := 0.5] #>            date confirm primary scaling meanlog sdlog #>          <Date>   <num>   <num>   <num>   <num> <num> #>   1: 2020-02-22      14      14     0.4     1.8   0.5 #>   2: 2020-02-23      62      62     0.4     1.8   0.5 #>   3: 2020-02-24      53      53     0.4     1.8   0.5 #>   4: 2020-02-25      97      97     0.4     1.8   0.5 #>   5: 2020-02-26      93      93     0.4     1.8   0.5 #>  ---                                                  #> 126: 2020-06-26     296     296     0.4     1.8   0.5 #> 127: 2020-06-27     255     255     0.4     1.8   0.5 #> 128: 2020-06-28     175     175     0.4     1.8   0.5 #> 129: 2020-06-29     174     174     0.4     1.8   0.5 #> 130: 2020-06-30     126     126     0.4     1.8   0.5  # Simulate secondary cases cases <- convolve_and_scale(cases, type = \"incidence\") # # fit model to example data specifying a weak prior for fraction reported # with a secondary case inc <- estimate_secondary(cases[1:60],   obs = obs_opts(scale = Normal(mean = 0.2, sd = 0.2), week_effect = FALSE) ) plot(inc, primary = TRUE)   # forecast future secondary cases from primary inc_preds <- forecast_secondary(   inc, cases[seq(61, .N)][, value := primary] ) plot(inc_preds, new_obs = cases, from = \"2020-05-01\")   #### Prevalence data example ####  # make some example prevalence data cases <- example_confirmed cases <- as.data.table(cases)[, primary := confirm] # Assume that only 30 percent of cases are reported cases[, scaling := 0.3] #>            date confirm primary scaling #>          <Date>   <num>   <num>   <num> #>   1: 2020-02-22      14      14     0.3 #>   2: 2020-02-23      62      62     0.3 #>   3: 2020-02-24      53      53     0.3 #>   4: 2020-02-25      97      97     0.3 #>   5: 2020-02-26      93      93     0.3 #>  ---                                    #> 126: 2020-06-26     296     296     0.3 #> 127: 2020-06-27     255     255     0.3 #> 128: 2020-06-28     175     175     0.3 #> 129: 2020-06-29     174     174     0.3 #> 130: 2020-06-30     126     126     0.3 # Parameters of the assumed log normal delay distribution cases[, meanlog := 1.6][, sdlog := 0.8] #>            date confirm primary scaling meanlog sdlog #>          <Date>   <num>   <num>   <num>   <num> <num> #>   1: 2020-02-22      14      14     0.3     1.6   0.8 #>   2: 2020-02-23      62      62     0.3     1.6   0.8 #>   3: 2020-02-24      53      53     0.3     1.6   0.8 #>   4: 2020-02-25      97      97     0.3     1.6   0.8 #>   5: 2020-02-26      93      93     0.3     1.6   0.8 #>  ---                                                  #> 126: 2020-06-26     296     296     0.3     1.6   0.8 #> 127: 2020-06-27     255     255     0.3     1.6   0.8 #> 128: 2020-06-28     175     175     0.3     1.6   0.8 #> 129: 2020-06-29     174     174     0.3     1.6   0.8 #> 130: 2020-06-30     126     126     0.3     1.6   0.8  # Simulate secondary cases cases <- convolve_and_scale(cases, type = \"prevalence\")  # fit model to example prevalence data prev <- estimate_secondary(cases[1:100],   secondary = secondary_opts(type = \"prevalence\"),   obs = obs_opts(     week_effect = FALSE,     scale = Normal(mean = 0.4, sd = 0.1)   ) ) plot(prev, primary = TRUE)   # forecast future secondary cases from primary prev_preds <- forecast_secondary(  prev, cases[seq(101, .N)][, value := primary] ) plot(prev_preds, new_obs = cases, from = \"2020-06-01\")   options(old_opts) # }"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/estimate_truncation.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Truncation of Observed Data — estimate_truncation","title":"Estimate Truncation of Observed Data — estimate_truncation","text":"Estimates truncation distribution multiple snapshots data source time. distribution can used passed truncation argument regional_epinow(), epinow(), estimate_infections() adjust truncated data propagate uncertainty associated data truncation estimates. See example using approach Covid-19 data England. functionality offered function now available principled manner epinowcast R package. model truncation follows: truncation distribution assumed discretised log normal wit mean standard deviation informed data. data set latest observations adjusted truncation using truncation distribution. Earlier data sets recreated applying truncation distribution adjusted latest observations time period earlier data set. data sets compared earlier observations assuming negative binomial observation model additive noise term deal zero observations. model fit using stan standard normal, half normal, prior mean, standard deviation, 1 square root overdispersion additive noise term. approach assumes : Current truncation related past truncation. Truncation multiplicative scaling underlying reported cases. Truncation log normally distributed.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/estimate_truncation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Truncation of Observed Data — estimate_truncation","text":"","code":"estimate_truncation(   data,   truncation = trunc_opts(LogNormal(meanlog = Normal(0, 1), sdlog = Normal(1, 1), max =     10)),   model = NULL,   stan = stan_opts(),   CrIs = c(0.2, 0.5, 0.9),   filter_leading_zeros = FALSE,   zero_threshold = Inf,   weigh_delay_priors = FALSE,   verbose = TRUE,   ...,   obs )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/estimate_truncation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Truncation of Observed Data — estimate_truncation","text":"data list <data.frame>s containing date variable confirm (numeric) variable. data set snapshot reported data time. data sets must contain complete vector dates. truncation call trunc_opts() defining truncation observed data. Defaults trunc_opts(), .e. truncation.  See estimate_truncation() help file approach estimating data dist list element returned estimate_truncation() used truncation argument , thereby propagating uncertainty estimate. model compiled stan model override default model. May useful package developers developing extensions. stan list stan options generated stan_opts(). Defaults stan_opts(). Can used override data, init, verbose settings desired. CrIs Numeric vector credible intervals calculate. filter_leading_zeros Logical, defaults TRUE. zeros start time series filtered . zero_threshold Numeric defaults Inf. Indicates detected zero cases meaningful using threshold number cases based 7-day average. average threshold zero replaced using fill. weigh_delay_priors Deprecated; use weight_prior option trunc_opts() instead. verbose Logical, model fitting progress returned. ... Additional parameters pass rstan::sampling(). obs Deprecated; use data instead.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/estimate_truncation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Truncation of Observed Data — estimate_truncation","text":"list containing: summary parameters truncation distribution (dist), passed truncation argument epinow(), regional_epinow(), estimate_infections(), estimated CMF truncation distribution (cmf, can used adjusted new data), <data.frame> containing observed truncated data, latest observed data adjusted truncation observations (obs), <data.frame> containing last observed data (last_obs, useful plotting validation), data used fitting (data) fit object (fit).","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/estimate_truncation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate Truncation of Observed Data — estimate_truncation","text":"","code":"# \\donttest{ # set number of cores to use old_opts <- options() options(mc.cores = ifelse(interactive(), 4, 1))  # fit model to example data # See [example_truncated] for more details est <- estimate_truncation(example_truncated,   verbose = interactive(),   chains = 2, iter = 2000 ) #> WARN [2025-01-17 09:35:30] estimate_truncation (chain: 1): There were 7 divergent transitions after warmup. See #> https://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup #> to find out why this is a problem and how to eliminate them. -  #> WARN [2025-01-17 09:35:30] estimate_truncation (chain: 1): Examine the pairs() plot to diagnose sampling problems #>  -   # summary of the distribution est$dist #> - lognormal distribution (max: 10): #>   meanlog: #>     - normal distribution: #>       mean: #>         -1.9 #>       sd: #>         0.45 #>   sdlog: #>     - normal distribution: #>       mean: #>         2.2 #>       sd: #>         0.65 # summary of the estimated truncation cmf (can be applied to new data) print(est$cmf) #>     index      mean      se_mean           sd  lower_90  lower_50  lower_20 #>     <int>     <num>        <num>        <num>     <num>     <num>     <num> #>  1:     1 1.0000000 2.996384e-18 1.241081e-16 1.0000000 1.0000000 1.0000000 #>  2:     2 0.9972401 4.119192e-05 1.519567e-03 0.9946467 0.9961854 0.9968822 #>  3:     3 0.9939038 8.772757e-05 3.253960e-03 0.9883974 0.9916302 0.9930961 #>  4:     4 0.9897809 1.408050e-04 5.257126e-03 0.9810246 0.9861410 0.9883933 #>  5:     5 0.9845412 2.019796e-04 7.603159e-03 0.9720983 0.9792543 0.9825026 #>  6:     6 0.9776325 2.732350e-04 1.039598e-02 0.9610044 0.9703445 0.9746933 #>  7:     7 0.9680494 3.568831e-04 1.378307e-02 0.9461513 0.9583565 0.9640005 #>  8:     8 0.9537233 4.545126e-04 1.796668e-02 0.9253513 0.9410345 0.9482091 #>  9:     9 0.9294879 5.604604e-04 2.314474e-02 0.8934592 0.9133065 0.9222476 #> 10:    10 0.8765754 6.184461e-04 2.874597e-02 0.8324576 0.8569271 0.8681280 #> 11:    11 0.4195982 3.465569e-04 1.642918e-02 0.3939804 0.4085308 0.4151351 #>        median  upper_20  upper_50  upper_90 #>         <num>     <num>     <num>     <num> #>  1: 1.0000000 1.0000000 1.0000000 1.0000000 #>  2: 0.9973130 0.9977331 0.9984000 0.9995982 #>  3: 0.9940481 0.9949375 0.9963661 0.9990372 #>  4: 0.9899182 0.9913838 0.9937054 0.9982257 #>  5: 0.9846382 0.9867015 0.9901427 0.9969796 #>  6: 0.9776255 0.9804983 0.9851524 0.9950013 #>  7: 0.9678872 0.9716190 0.9778215 0.9916590 #>  8: 0.9532789 0.9579658 0.9661197 0.9851498 #>  9: 0.9283641 0.9344218 0.9445515 0.9703486 #> 10: 0.8746851 0.8821058 0.8946402 0.9256043 #> 11: 0.4188815 0.4228498 0.4293740 0.4473664 # observations linked to truncation adjusted estimates print(est$obs) #>           date confirm last_confirm report_date  mean se_mean    sd lower_90 #>         <Date>   <num>        <num>      <Date> <int>   <int> <int>    <int> #>  1: 2020-03-24    4764         4789  2020-04-01  5244       0    27     5200 #>  2: 2020-03-25    5191         5249  2020-04-01  5182       1    40     5117 #>  3: 2020-03-26    5102         5210  2020-04-01  6060       1    64     5953 #>  4: 2020-03-27    5924         6153  2020-04-01  5751       2    81     5613 #>  5: 2020-03-28    5567         5959  2020-04-01  5547       2   104     5368 #>  6: 2020-03-29    5289         5974  2020-04-01  4503       2   111     4310 #>  7: 2020-03-30    4183         5217  2020-04-01  3046       2    99     2882 #>  8: 2020-03-31    2668         4050  2020-04-01  4012       3   155     3757 #>  9: 2020-04-01    1681         4053  2020-04-01     0      NA     0        0 #> 10: 2020-03-29    5970         5974  2020-04-06  6006       0    19     5975 #> 11: 2020-03-30    5209         5217  2020-04-06  5262       0    27     5218 #> 12: 2020-03-31    4035         4050  2020-04-06  4098       0    31     4047 #> 13: 2020-04-01    4020         4053  2020-04-06  4112       1    43     4040 #> 14: 2020-04-02    4697         4782  2020-04-06  4853       1    69     4736 #> 15: 2020-04-03    4483         4668  2020-04-06  4702       2    88     4550 #> 16: 2020-04-04    4182         4585  2020-04-06  4502       2   111     4309 #> 17: 2020-04-05    3864         4805  2020-04-06  4412       3   143     4174 #> 18: 2020-04-06    2420         4316  2020-04-06  5776       4   224     5409 #> 19: 2020-04-03    4653         4668  2020-04-11  4681       0    15     4657 #> 20: 2020-04-04    4554         4585  2020-04-11  4601       0    24     4562 #> 21: 2020-04-05    4741         4805  2020-04-11  4815       0    37     4755 #> 22: 2020-04-06    4208         4316  2020-04-11  4304       1    45     4229 #> 23: 2020-04-07    3431         3599  2020-04-11  3544       1    50     3459 #> 24: 2020-04-08    2779         3039  2020-04-11  2914       1    54     2820 #> 25: 2020-04-09    3234         3836  2020-04-11  3481       2    86     3332 #> 26: 2020-04-10    2993         4204  2020-04-11  3418       2   111     3233 #> 27: 2020-04-11    1848         3951  2020-04-11  4410       3   171     4130 #> 28: 2020-04-08    3036         3039  2020-04-16  3054       0    10     3038 #> 29: 2020-04-09    3829         3836  2020-04-16  3868       0    20     3835 #> 30: 2020-04-10    4187         4204  2020-04-16  4252       0    32     4199 #> 31: 2020-04-11    3916         3951  2020-04-16  4006       1    42     3935 #> 32: 2020-04-12    4605         4686  2020-04-16  4757       1    67     4643 #> 33: 2020-04-13    3925         4074  2020-04-16  4116       1    77     3984 #> 34: 2020-04-14    2873         3124  2020-04-16  3092       1    76     2960 #> 35: 2020-04-15    2393         2919  2020-04-16  2732       1    88     2585 #> 36: 2020-04-16    1512         2580  2020-04-16  3608       2   140     3379 #> 37: 2020-04-13    4074         4074  2020-04-21  4099       0    13     4077 #> 38: 2020-04-14    3124         3124  2020-04-21  3156       0    16     3129 #> 39: 2020-04-15    2919         2919  2020-04-21  2965       0    22     2927 #> 40: 2020-04-16    2580         2580  2020-04-21  2639       0    28     2592 #> 41: 2020-04-17    3563         3563  2020-04-21  3681       1    52     3592 #> 42: 2020-04-18    3126         3126  2020-04-21  3278       1    61     3173 #> 43: 2020-04-19    2843         2843  2020-04-21  3060       1    75     2929 #> 44: 2020-04-20    2051         2051  2020-04-21  2342       1    76     2215 #> 45: 2020-04-21     962          962  2020-04-21  2296       1    89     2150 #>           date confirm last_confirm report_date  mean se_mean    sd lower_90 #>     lower_50 lower_20 median upper_20 upper_50 upper_90 #>        <int>    <int>  <int>    <int>    <int>    <int> #>  1:     5223     5236   5243     5251     5263     5291 #>  2:     5152     5170   5181     5192     5210     5248 #>  3:     6013     6041   6059     6077     6105     6164 #>  4:     5693     5729   5751     5774     5808     5883 #>  5:     5474     5521   5548     5577     5620     5715 #>  6:     4428     4476   4505     4535     4580     4681 #>  7:     2982     3024   3050     3073     3113     3204 #>  8:     3915     3975   4013     4049     4114     4266 #>  9:        0        0      0        0        0        0 #> 10:     5991     6000   6005     6011     6020     6040 #> 11:     5241     5254   5262     5270     5282     5309 #> 12:     4075     4089   4097     4106     4120     4150 #> 13:     4080     4099   4112     4124     4142     4183 #> 14:     4803     4834   4852     4872     4901     4964 #> 15:     4640     4679   4702     4727     4763     4844 #> 16:     4427     4475   4504     4534     4578     4680 #> 17:     4319     4380   4417     4450     4509     4641 #> 18:     5636     5723   5777     5829     5923     6142 #> 19:     4669     4676   4680     4685     4692     4707 #> 20:     4582     4593   4600     4607     4618     4642 #> 21:     4788     4804   4814     4825     4841     4877 #> 22:     4271     4291   4304     4317     4336     4378 #> 23:     3508     3531   3544     3559     3580     3626 #> 24:     2876     2900   2915     2930     2953     3003 #> 25:     3423     3460   3483     3506     3540     3619 #> 26:     3345     3393   3421     3447     3492     3595 #> 27:     4303     4370   4411     4451     4523     4690 #> 28:     3047     3051   3054     3057     3061     3071 #> 29:     3853     3862   3867     3873     3882     3903 #> 30:     4228     4243   4252     4261     4275     4307 #> 31:     3975     3993   4005     4017     4035     4074 #> 32:     4709     4739   4757     4776     4805     4867 #> 33:     4062     4097   4117     4139     4170     4241 #> 34:     3041     3074   3094     3115     3145     3215 #> 35:     2674     2712   2735     2756     2792     2874 #> 36:     3521     3575   3609     3642     3701     3837 #> 37:     4088     4094   4098     4102     4108     4121 #> 38:     3143     3151   3155     3160     3167     3184 #> 39:     2948     2958   2964     2970     2980     3002 #> 40:     2618     2631   2639     2646     2658     2684 #> 41:     3643     3667   3681     3696     3717     3765 #> 42:     3235     3263   3279     3296     3321     3378 #> 43:     3009     3042   3062     3082     3112     3182 #> 44:     2292     2325   2344     2362     2393     2463 #> 45:     2240     2275   2296     2317     2354     2441 #>     lower_50 lower_20 median upper_20 upper_50 upper_90 # validation plot of observations vs estimates plot(est)   # Pass the truncation distribution to `epinow()`. # Note, we're using the last snapshot as the observed data as it contains # all the previous snapshots. Also, we're using the default options for # illustrative purposes only. out <- epinow(   example_truncated[[5]],   truncation = trunc_opts(est$dist) ) #> Logging threshold set at INFO for the name logger #> Writing EpiNow2 logs to the console and: #> /tmp/RtmpsfRcjp/regional-epinow/2020-04-21.log. #> Logging threshold set at INFO for the name logger #> Writing EpiNow2.epinow logs to the console and: #> /tmp/RtmpsfRcjp/epinow/2020-04-21.log. #> WARN [2025-01-17 09:35:31] epinow: ! No generation time distribution given. #> ℹ Now using a fixed generation time of 1 day, i.e. the reproduction number is #>   the same as the daily growth rate. #> ℹ If this was intended then this warning can be silenced by setting `dist = #>   Fixed(1)`'. -  #> WARN [2025-01-17 09:38:05] epinow: There were 34 divergent transitions after warmup. See #> https://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup #> to find out why this is a problem and how to eliminate them. -  #> WARN [2025-01-17 09:38:05] epinow: Examine the pairs() plot to diagnose sampling problems #>  -  plot(out)  options(old_opts) # }"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/estimates_by_report_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Cases by Report Date — estimates_by_report_date","title":"Estimate Cases by Report Date — estimates_by_report_date","text":"Either extracts converts reported cases input data table. output estimate_infections simple filtering step.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/estimates_by_report_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Cases by Report Date — estimates_by_report_date","text":"","code":"estimates_by_report_date(   estimates,   CrIs = c(0.2, 0.5, 0.9),   target_folder = NULL,   samples = TRUE )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/estimates_by_report_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Cases by Report Date — estimates_by_report_date","text":"estimates List data frames output estimate_infections CrIs Numeric vector credible intervals calculate. target_folder Character string specifying save results (create present). samples Logical, defaults TRUE. samples saved","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/estimates_by_report_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Cases by Report Date — estimates_by_report_date","text":"list samples summarised estimates estimated cases date report.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/example_confirmed.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Confirmed Case Data Set — example_confirmed","title":"Example Confirmed Case Data Set — example_confirmed","text":"example data frame observed cases","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/example_confirmed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Confirmed Case Data Set — example_confirmed","text":"","code":"example_confirmed"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/example_confirmed.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Confirmed Case Data Set — example_confirmed","text":"data frame containing cases reported date.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/example_generation_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Example generation time — example_generation_time","title":"Example generation time — example_generation_time","text":"example generation time estimate. See details: https://github.com/epiforecasts/EpiNow2/blob/main/data-raw/generation-time.R","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/example_generation_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example generation time — example_generation_time","text":"","code":"example_generation_time"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/example_generation_time.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example generation time — example_generation_time","text":"dist_spec object summarising distribution","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/example_incubation_period.html","id":null,"dir":"Reference","previous_headings":"","what":"Example incubation period — example_incubation_period","title":"Example incubation period — example_incubation_period","text":"example incubation period estimate. See details: https://github.com/epiforecasts/EpiNow2/blob/main/data-raw/incubation-period.R # nolint","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/example_incubation_period.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example incubation period — example_incubation_period","text":"","code":"example_incubation_period"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/example_incubation_period.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example incubation period — example_incubation_period","text":"dist_spec object summarising distribution","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/example_reporting_delay.html","id":null,"dir":"Reference","previous_headings":"","what":"Example reporting delay — example_reporting_delay","title":"Example reporting delay — example_reporting_delay","text":"example reporting delay estimate. See details: https://github.com/epiforecasts/EpiNow2/blob/main/data-raw/reporting-delay # nolint","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/example_reporting_delay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example reporting delay — example_reporting_delay","text":"","code":"example_reporting_delay"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/example_reporting_delay.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example reporting delay — example_reporting_delay","text":"dist_spec object summarising distribution","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/example_truncated.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Case Data Set with Truncation — example_truncated","title":"Example Case Data Set with Truncation — example_truncated","text":"example dataset observed cases truncation applied. data generated internally use example estimate_truncation(). details data generated, see https://github.com/epiforecasts/EpiNow2/blob/main/data-raw/truncated.R #nolint","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/example_truncated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Case Data Set with Truncation — example_truncated","text":"","code":"example_truncated"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/example_truncated.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Case Data Set with Truncation — example_truncated","text":"list data.tables containing cases reported date point truncation. element list data.table following columns: date Date case report. confirm Number confirmed cases.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/expose_stan_fns.html","id":null,"dir":"Reference","previous_headings":"","what":"Expose internal package stan functions in R — expose_stan_fns","title":"Expose internal package stan functions in R — expose_stan_fns","text":"function exposes internal stan functions R user supplied list target files. Allows testing stan functions R potentially user use R code.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/expose_stan_fns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expose internal package stan functions in R — expose_stan_fns","text":"","code":"expose_stan_fns(files, target_dir, ...)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/expose_stan_fns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expose internal package stan functions in R — expose_stan_fns","text":"files character vector indicating target files. target_dir character string indicating target directory file. ... Additional arguments passed rstan::expose_stan_functions().","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/expose_stan_fns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expose internal package stan functions in R — expose_stan_fns","text":"return value, called side effects","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/extract_CrIs.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Credible Intervals Present — extract_CrIs","title":"Extract Credible Intervals Present — extract_CrIs","text":"Helper function extract credible intervals present <data.frame>.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/extract_CrIs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Credible Intervals Present — extract_CrIs","text":"","code":"extract_CrIs(summarised)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/extract_CrIs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Credible Intervals Present — extract_CrIs","text":"summarised <data.frame> processed calc_CrIs","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/extract_CrIs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Credible Intervals Present — extract_CrIs","text":"numeric vector credible intervals detected <data.frame>.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/extract_CrIs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Credible Intervals Present — extract_CrIs","text":"","code":"samples <- data.frame(value = 1:10, type = \"car\") summarised <- calc_CrIs(samples,   summarise_by = \"type\",   CrIs = c(seq(0.05, 0.95, 0.05)) ) extract_CrIs(summarised) #>  [1] 95 90 85 80 75 70 65 60 55 50 45 40 35 30 25 20 15 10  5"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/extract_inits.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate initial conditions from a Stan fit — extract_inits","title":"Generate initial conditions from a Stan fit — extract_inits","text":"Extracts posterior samples use initialise full model fit. may useful certain data sets sampler gets stuck easily initialised. estimate_infections(), epinow() regional_epinow() option can engaged setting stan_opts(init_fit = <stanfit>). implementation based approach taken epidemia authored James Scott.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/extract_inits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate initial conditions from a Stan fit — extract_inits","text":"","code":"extract_inits(fit, current_inits, exclude_list = NULL, samples = 50)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/extract_inits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate initial conditions from a Stan fit — extract_inits","text":"fit <stanfit> object. current_inits function returns list initial conditions (create_initial_conditions()). used exclude_list specified. exclude_list character vector parameters initialise fit object, defaulting NULL. samples Numeric, defaults 50. Number posterior samples.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/extract_inits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate initial conditions from a Stan fit — extract_inits","text":"function called returns set initial conditions named list.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/extract_parameter.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Samples for a Parameter from a Stan model — extract_parameter","title":"Extract Samples for a Parameter from a Stan model — extract_parameter","text":"Extracts single list stan output returns <data.table>.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/extract_parameter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Samples for a Parameter from a Stan model — extract_parameter","text":"","code":"extract_parameter(param, samples, dates)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/extract_parameter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Samples for a Parameter from a Stan model — extract_parameter","text":"param Character string indicating parameter extract samples Extracted stan model (using rstan::extract()) dates vector identifying dimensionality parameter extract. Generally date.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/extract_parameter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Samples for a Parameter from a Stan model — extract_parameter","text":"<data.frame> containing parameter name, date, sample id sample value.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/extract_parameter_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Parameter Samples from a Stan Model — extract_parameter_samples","title":"Extract Parameter Samples from a Stan Model — extract_parameter_samples","text":"Extracts custom set parameters stan object adds stratification dates appropriate.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/extract_parameter_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Parameter Samples from a Stan Model — extract_parameter_samples","text":"","code":"extract_parameter_samples(   stan_fit,   data,   reported_dates,   imputed_dates,   reported_inf_dates,   drop_length_1 = FALSE,   merge = FALSE )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/extract_parameter_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Parameter Samples from a Stan Model — extract_parameter_samples","text":"stan_fit <stanfit> <CmdStanMCMC> object returned fit_model(). data list data supplied fit_model() call. reported_dates vector dates report estimates . imputed_dates vector dates report imputed reports . reported_inf_dates vector dates report infection estimates . drop_length_1 Logical; whether first dimension dropped length 1; necessary processing simulation results. merge TRUE, merge samples data parameters can extracted data.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/extract_parameter_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Parameter Samples from a Stan Model — extract_parameter_samples","text":"list <data.frame>'s containing posterior parameter","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/extract_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract parameter names — extract_params","title":"Extract parameter names — extract_params","text":"Internal function extracting given parameter names distribution environment. Called new_dist_spec","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/extract_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract parameter names — extract_params","text":"","code":"extract_params(params, distribution)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/extract_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract parameter names — extract_params","text":"params Given parameters (obtained using .list(environment())) distribution Character; distribution use.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/extract_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract parameter names — extract_params","text":"character vector parameters values.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/extract_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract all samples from a stan fit — extract_samples","title":"Extract all samples from a stan fit — extract_samples","text":"object argument <stanfit> object, simply returns result rstan::extract(). <CmdStanMCMC> returns samples format rstan::extract() <stanfit> objects.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/extract_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract all samples from a stan fit — extract_samples","text":"","code":"extract_samples(stan_fit, pars = NULL, include = TRUE)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/extract_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract all samples from a stan fit — extract_samples","text":"stan_fit <stanfit> <CmdStanMCMC> object returned fit_model(). pars selection parameters extract include whether parameters specified pars included (TRUE, default) excluded (FALSE)","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/extract_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract all samples from a stan fit — extract_samples","text":"List data.tables samples","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/extract_single_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a single element of a composite <dist_spec> — extract_single_dist","text":"","code":"extract_single_dist(x, i)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/extract_single_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a single element of a composite <dist_spec> — extract_single_dist","text":"x composite dist_spec object index extract","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/extract_single_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a single element of a composite <dist_spec> — extract_single_dist","text":"single dist_spec object","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/extract_single_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract a single element of a composite <dist_spec> — extract_single_dist","text":"","code":"dist1 <- LogNormal(mean = 1.6, sd = 0.5, max = 20)  # An uncertain gamma distribution with shape and rate normally distributed # as Normal(3, 0.5) and Normal(2, 0.5) respectively dist2 <- Gamma(   shape = Normal(3, 0.5),   rate = Normal(2, 0.5),   max = 20 )  # Multiple distributions if (FALSE) { # \\dontrun{   dist <- dist1 + dist2   extract_single_dist(dist, 2) } # }"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/extract_stan_param.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a Parameter Summary from a Stan Object — extract_stan_param","title":"Extract a Parameter Summary from a Stan Object — extract_stan_param","text":"Extracts summarised parameter posteriors stanfit object using rstan::summary() format consistent summary functions {EpiNow2}.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/extract_stan_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a Parameter Summary from a Stan Object — extract_stan_param","text":"","code":"extract_stan_param(   fit,   params = NULL,   CrIs = c(0.2, 0.5, 0.9),   var_names = FALSE )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/extract_stan_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a Parameter Summary from a Stan Object — extract_stan_param","text":"fit <stanfit> objec. params character vector parameters extract. Defaults parameters. CrIs Numeric vector credible intervals calculate. var_names Logical defaults FALSE. variables named. Automatically set TRUE multiple parameters extracted.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/extract_stan_param.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a Parameter Summary from a Stan Object — extract_stan_param","text":"<data.table> summarising parameter posteriors. Contains following variables: variable, mean, mean_se, sd, median, lower_, upper_ followed credible interval labels indicating credible intervals present.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/extract_static_parameter.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Samples from a Parameter with a Single Dimension — extract_static_parameter","title":"Extract Samples from a Parameter with a Single Dimension — extract_static_parameter","text":"Extract Samples Parameter Single Dimension","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/extract_static_parameter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Samples from a Parameter with a Single Dimension — extract_static_parameter","text":"","code":"extract_static_parameter(param, samples)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/extract_static_parameter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Samples from a Parameter with a Single Dimension — extract_static_parameter","text":"param Character string indicating parameter extract samples Extracted stan model (using rstan::extract())","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/extract_static_parameter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Samples from a Parameter with a Single Dimension — extract_static_parameter","text":"<data.frame> containing parameter name, sample id sample value","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/fill_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Fill missing data in a data set to prepare it for use within the package — fill_missing","title":"Fill missing data in a data set to prepare it for use within the package — fill_missing","text":"function ensures days first last date data present. adds accumulate column indicates whether modelled observations accumulated onto later data point. point. useful modelling data reported less frequently daily, e.g. weekly incidence data, well reporting artifacts delayed weekedn reporting. function can also used fill missing observations zeros.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/fill_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fill missing data in a data set to prepare it for use within the package — fill_missing","text":"","code":"fill_missing(   data,   missing_dates = c(\"ignore\", \"accumulate\", \"zero\"),   missing_obs = c(\"ignore\", \"accumulate\", \"zero\"),   initial_accumulate,   obs_column = \"confirm\",   by = NULL )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/fill_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fill missing data in a data set to prepare it for use within the package — fill_missing","text":"data Data frame date column. columns depend model data used, e.g. estimate_infections() estimate_secondary(). See documentation expected format. data must already accumulate function, otherwise function fail error. missing_dates Character. Options \"ignore\" (default), \"accumulate\" \"zero\". determines missing dates data interpreted.  set \"ignore\", missing dates observation data interpreted missing skipped likelihood. set \"accumulate\", modelled observations dates missing data accumulated added next non-missing data point. can used model incidence data reported less frequently daily. case, first data point included likelihood (unless initial_accumulate set value greater one) used reset modelled observations zero. \"zero\" observations missing dates assumed value 0. missing_obs Character. process dates exist data observations NA values. options available ones missing_dates argument. initial_accumulate Integer. number initial dates accumulate missing_dates missing_obs set \"accumulate\". argument needs ot minimum 1. set 1 accumulation happening first data point. greater 1 dates added beginning data set get able sufficient number modelled observations accumulated onto first data point. modelling weekly incidence data set 7. accumulating first data point NA argument set, data point removed warning. obs_column Character (default: \"confirm\"). given, column specified used checking missingness. useful using data set multiple columns hwich one corresponds observations processed . Character vector. Name(s) additional column(s) data processing done separately value column. useful using data representing e.g. multiple geographies. NULL (default) grouping done.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/fill_missing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fill missing data in a data set to prepare it for use within the package — fill_missing","text":"data.table accumulate column indicates whether values accumulated (see documentation data argument estimate_infections())","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/fill_missing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fill missing data in a data set to prepare it for use within the package — fill_missing","text":"","code":"cases <- data.table::copy(example_confirmed) ## calculate weekly sum cases[, confirm := data.table::frollsum(confirm, 7)] #>            date confirm #>          <Date>   <num> #>   1: 2020-02-22      NA #>   2: 2020-02-23      NA #>   3: 2020-02-24      NA #>   4: 2020-02-25      NA #>   5: 2020-02-26      NA #>  ---                    #> 126: 2020-06-26    1695 #> 127: 2020-06-27    1950 #> 128: 2020-06-28    1861 #> 129: 2020-06-29    1811 #> 130: 2020-06-30    1716 ## limit to dates once a week cases <- cases[seq(7, nrow(cases), 7)] ## set the second observation to missing cases[2, confirm := NA] #>           date confirm #>         <Date>   <num> #>  1: 2020-02-28     647 #>  2: 2020-03-06      NA #>  3: 2020-03-13   11255 #>  4: 2020-03-20   25922 #>  5: 2020-03-27   39504 #>  6: 2020-04-03   34703 #>  7: 2020-04-10   28384 #>  8: 2020-04-17   25315 #>  9: 2020-04-24   21032 #> 10: 2020-05-01   15490 #> 11: 2020-05-08   10395 #> 12: 2020-05-15    7238 #> 13: 2020-05-22    4910 #> 14: 2020-05-29    3726 #> 15: 2020-06-05    2281 #> 16: 2020-06-12    2129 #> 17: 2020-06-19    2017 #> 18: 2020-06-26    1695 ## fill missing data fill_missing(cases, missing_dates = \"accumulate\", initial_accumulate = 7) #> Key: <date> #>            date confirm accumulate #>          <Date>   <num>     <lgcl> #>   1: 2020-02-22      NA       TRUE #>   2: 2020-02-23      NA       TRUE #>   3: 2020-02-24      NA       TRUE #>   4: 2020-02-25      NA       TRUE #>   5: 2020-02-26      NA       TRUE #>  ---                               #> 122: 2020-06-22      NA       TRUE #> 123: 2020-06-23      NA       TRUE #> 124: 2020-06-24      NA       TRUE #> 125: 2020-06-25      NA       TRUE #> 126: 2020-06-26    1695      FALSE"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/filter_leading_zeros.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter leading zeros from a data set. — filter_leading_zeros","title":"Filter leading zeros from a data set. — filter_leading_zeros","text":"Filter leading zeros data set.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/filter_leading_zeros.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter leading zeros from a data set. — filter_leading_zeros","text":"","code":"filter_leading_zeros(data, obs_column = \"confirm\", by = NULL)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/filter_leading_zeros.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter leading zeros from a data set. — filter_leading_zeros","text":"data <data.frame> confirmed cases (confirm) date (date). confirm must numeric date must date format. Optionally can also logical accumulate column indicates whether data added next data point. useful modelling e.g. weekly incidence data. See also fill_missing() function helps add accumulate column desired properties dealing non-daily data. accumulation done happens truncation specified truncation argument. obs_column Character (default: \"confirm\"). given, column specified used checking missingness. useful using data set multiple columns hwich one corresponds observations processed . Character vector. Name(s) additional column(s) data processing done separately value column. useful using data representing e.g. multiple geographies. NULL (default) grouping done.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/filter_leading_zeros.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter leading zeros from a data set. — filter_leading_zeros","text":"data.table leading zeros removed.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/filter_leading_zeros.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter leading zeros from a data set. — filter_leading_zeros","text":"","code":"cases <- data.frame(   date = as.Date(\"2020-01-01\") + 0:10,   confirm = c(0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9) ) filter_leading_zeros(cases) #>          date confirm #>        <Date>   <num> #> 1: 2020-01-03       1 #> 2: 2020-01-04       2 #> 3: 2020-01-05       3 #> 4: 2020-01-06       4 #> 5: 2020-01-07       5 #> 6: 2020-01-08       6 #> 7: 2020-01-09       7 #> 8: 2020-01-10       8 #> 9: 2020-01-11       9"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/filter_opts.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Options for a Target Region — filter_opts","title":"Filter Options for a Target Region — filter_opts","text":"helper function allows selection region specific settings present otherwise applies overarching settings.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/filter_opts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Options for a Target Region — filter_opts","text":"","code":"filter_opts(opts, region)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/filter_opts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Options for a Target Region — filter_opts","text":"opts Either list calls _opts() function single call _opts() function. region character string indicating region interest.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/filter_opts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Options for a Target Region — filter_opts","text":"list options","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/fit_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a model using the chosen backend. — fit_model","title":"Fit a model using the chosen backend. — fit_model","text":"Internal function dispatch fitting NUTS VB.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/fit_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a model using the chosen backend. — fit_model","text":"","code":"fit_model(args, id = \"stan\")"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/fit_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a model using the chosen backend. — fit_model","text":"args List stan arguments. id character string used assign logging information error. Used regional_epinow() assign errors regions. Alter default run error catching.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/fit_model_approximate.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a Stan Model using an approximate method — fit_model_approximate","title":"Fit a Stan Model using an approximate method — fit_model_approximate","text":"Fits stan model using variational inference.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/fit_model_approximate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a Stan Model using an approximate method — fit_model_approximate","text":"","code":"fit_model_approximate(args, future = FALSE, id = \"stan\")"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/fit_model_approximate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a Stan Model using an approximate method — fit_model_approximate","text":"args List stan arguments. future Logical, defaults FALSE. future used run stan chains parallel. id character string used assign logging information error. Used regional_epinow() assign errors regions. Alter default run error catching.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/fit_model_approximate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a Stan Model using an approximate method — fit_model_approximate","text":"stan model object","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/fit_model_with_nuts.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a Stan Model using the NUTs sampler — fit_model_with_nuts","title":"Fit a Stan Model using the NUTs sampler — fit_model_with_nuts","text":"Fits stan model using rstan::sampling(). Provides optional ability run chains using future error catching, timeouts merging completed chains.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/fit_model_with_nuts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a Stan Model using the NUTs sampler — fit_model_with_nuts","text":"","code":"fit_model_with_nuts(   args,   future = FALSE,   max_execution_time = Inf,   id = \"stan\" )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/fit_model_with_nuts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a Stan Model using the NUTs sampler — fit_model_with_nuts","text":"args List stan arguments. future Logical, defaults FALSE. future used run stan chains parallel. max_execution_time Numeric, defaults Inf. maximum execution time per chain seconds. Results still returned long least 2 chains complete successfully within timelimit. id character string used assign logging information error. Used regional_epinow() assign errors regions. Alter default run error catching.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/fit_model_with_nuts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a Stan Model using the NUTs sampler — fit_model_with_nuts","text":"stan model object","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/fix_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove uncertainty in the parameters of a <dist_spec> — fix_dist","title":"Remove uncertainty in the parameters of a <dist_spec> — fix_dist","text":"function renamed fix_parameters() appropriate name.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/fix_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove uncertainty in the parameters of a <dist_spec> — fix_dist","text":"","code":"fix_dist(x, strategy = c(\"mean\", \"sample\"))"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/fix_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove uncertainty in the parameters of a <dist_spec> — fix_dist","text":"x <dist_spec> strategy Character; either \"mean\" (use mean estimates mean standard deviation) \"sample\" (randomly sample mean standard deviation uncertainty given <dist_spec>","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/fix_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove uncertainty in the parameters of a <dist_spec> — fix_dist","text":"<dist_spec> object without uncertainty","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/fix_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix the parameters of a <dist_spec> — fix_parameters","title":"Fix the parameters of a <dist_spec> — fix_parameters","text":"given <dist_spec> uncertainty, removed corresponding distribution converted fixed one.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/fix_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix the parameters of a <dist_spec> — fix_parameters","text":"","code":"# S3 method for class 'dist_spec' fix_parameters(x, strategy = c(\"mean\", \"sample\"), ...)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/fix_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix the parameters of a <dist_spec> — fix_parameters","text":"x <dist_spec> strategy Character; either \"mean\" (use mean estimates mean standard deviation) \"sample\" (randomly sample mean standard deviation uncertainty given <dist_spec> ... ignored","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/fix_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix the parameters of a <dist_spec> — fix_parameters","text":"<dist_spec> object without uncertainty","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/fix_parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fix the parameters of a <dist_spec> — fix_parameters","text":"","code":"# An uncertain gamma distribution with shape and rate normally distributed # as Normal(3, 0.5) and Normal(2, 0.5) respectively dist <- Gamma(   shape = Normal(3, 0.5),   rate = Normal(2, 0.5),   max = 20 )  fix_parameters(dist) #> - gamma distribution (max: 20): #>   shape: #>     3 #>   rate: #>     2"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/forecast_infections.html","id":null,"dir":"Reference","previous_headings":"","what":"Forecast infections from a given fit and trajectory of the time-varying reproduction number — forecast_infections","title":"Forecast infections from a given fit and trajectory of the time-varying reproduction number — forecast_infections","text":"function simulates infections using existing fit observed cases modified time-varying reproduction number. can used explore forecast models past counterfactuals. Simulations can run parallel using future::plan().","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/forecast_infections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecast infections from a given fit and trajectory of the time-varying reproduction number — forecast_infections","text":"","code":"forecast_infections(   estimates,   R = NULL,   model = NULL,   samples = NULL,   batch_size = 10,   backend = \"rstan\",   verbose = interactive() )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/forecast_infections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecast infections from a given fit and trajectory of the time-varying reproduction number — forecast_infections","text":"estimates estimates element epinow() run done output = \"fit\", result estimate_infections() return_fit set TRUE. R numeric vector reproduction numbers; overwrite reproduction numbers contained estimates, except elements set NA. Alternatively accepts <data.frame> containing least date value (integer) variables optionally sample. (fewer) days original fit can simulated. model compiled stan model returned rstan::stan_model(). samples Numeric, number posterior samples simulate . default use samples estimates input. batch_size Numeric, defaults 10. Size batches simulate. May decrease run times due reduced IO costs still evaluated. set NULL simulations done . backend Character string indicating backend use fitting stan models. Supported arguments \"rstan\" (default) \"cmdstanr\". verbose Logical defaults interactive(). progressr package available, progress bar shown.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/forecast_infections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forecast infections from a given fit and trajectory of the time-varying reproduction number — forecast_infections","text":"list output returned estimate_infections() based results specified scenario rather fitting.","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/forecast_infections.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Forecast infections from a given fit and trajectory of the time-varying reproduction number — forecast_infections","text":"","code":"# \\donttest{ # set number of cores to use old_opts <- options() options(mc.cores = ifelse(interactive(), 4, 1))  # get example case counts reported_cases <- example_confirmed[1:50]  # fit model to data to recover Rt estimates est <- estimate_infections(reported_cases,   generation_time = generation_time_opts(example_generation_time),   delays = delay_opts(example_incubation_period + example_reporting_delay),   rt = rt_opts(prior = LogNormal(mean = 2, sd = 0.1), rw = 7),   obs = obs_opts(scale = Normal(mean = 0.1, sd = 0.01)),   gp = NULL, horizon = 0 ) #> Warning: The `horizon` argument of `estimate_infections()` is deprecated as of EpiNow2 #> 1.7.0. #> ℹ Please use the `forecast` argument instead. #> ℹ The `horizon` argument passed to `estimate_infections()` will override any #>   `horizon` argument passed via `forecast_opts()`.  # update Rt trajectory and simulate new infections using it R <- c(rep(NA_real_, 26), rep(0.5, 10), rep(0.8, 14)) sims <- forecast_infections(est, R) plot(sims)   # with a data.frame input of samples R_dt <- data.frame(   date = seq(     min(summary(est, type = \"parameters\", param = \"R\")$date),     by = \"day\", length.out = length(R)   ),   value = R ) sims <- forecast_infections(est, R_dt) plot(sims)   #' # with a data.frame input of samples R_samples <- summary(est, type = \"samples\", param = \"R\") R_samples <- R_samples[,  .(date, sample, value)][sample <= 1000][date <= \"2020-04-10\" ] R_samples <- R_samples[date >= \"2020-04-01\", value := 1.1] sims <- forecast_infections(est, R_samples) plot(sims)   options(old_opts) # }"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/forecast_opts.html","id":null,"dir":"Reference","previous_headings":"","what":"Forecast options — forecast_opts","title":"Forecast options — forecast_opts","text":"Defines list specifying arguments passed underlying stan backend functions via stan_sampling_opts() stan_vb_opts(). Custom settings can supplied override defaults.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/forecast_opts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecast options — forecast_opts","text":"","code":"forecast_opts(horizon = 7, accumulate)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/forecast_opts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecast options — forecast_opts","text":"horizon Numeric, defaults 7. Number days future forecast. accumulate Integer, number days accumulate forecasts, . given observations accumulated constant frequency data used fitting accumulation used forecasts unless set explicitly .","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/forecast_opts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forecast options — forecast_opts","text":"<forecast_opts> object forecast setting. rstan functions.","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/forecast_opts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Forecast options — forecast_opts","text":"","code":"forecast_opts(horizon = 28, accumulate = 7) #> $horizon #> [1] 28 #>  #> $infer_accumulate #> [1] FALSE #>  #> $accumulate #> [1] 7 #>  #> attr(,\"class\") #> [1] \"forecast_opts\" \"list\""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/forecast_secondary.html","id":null,"dir":"Reference","previous_headings":"","what":"Forecast Secondary Observations Given a Fit from estimate_secondary — forecast_secondary","title":"Forecast Secondary Observations Given a Fit from estimate_secondary — forecast_secondary","text":"function forecasts secondary observations using output estimate_secondary() either observed primary data forecast primary observations. See examples estimate_secondary() one use case. can also combined estimate_infections() produce forecast secondary observation forecast primary observation. See examples estimate_secondary() example use cases synthetic data. See example forecasting Covid-19 deaths Covid-19 cases.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/forecast_secondary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecast Secondary Observations Given a Fit from estimate_secondary — forecast_secondary","text":"","code":"forecast_secondary(   estimate,   primary,   primary_variable = \"reported_cases\",   model = NULL,   backend = \"rstan\",   samples = NULL,   all_dates = FALSE,   CrIs = c(0.2, 0.5, 0.9) )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/forecast_secondary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecast Secondary Observations Given a Fit from estimate_secondary — forecast_secondary","text":"estimate object class \"estimate_secondary\" produced estimate_secondary(). primary <data.frame> containing least date value (integer) variables optionally sample. Used primary observation used forecast secondary observations. Alternatively, may object class \"estimate_infections\" produced estimate_infections(). primary class \"estimate_infections\" internal samples filtered minimum date ahead observed estimate object. primary_variable character string indicating primary variable, defaulting \"reported_cases\". used primary class <estimate_infections>. model compiled stan model returned rstan::stan_model(). backend Character string indicating backend use fitting stan models. Supported arguments \"rstan\" (default) \"cmdstanr\". samples Numeric, number posterior samples simulate . default use samples primary input present. present default use 1000 samples. all_dates Logical, defaults FALSE. forecast dates just forecast horizon returned. CrIs Numeric vector credible intervals calculate.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/forecast_secondary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forecast Secondary Observations Given a Fit from estimate_secondary — forecast_secondary","text":"list containing: predictions (<data.frame> ordered date primary, secondary observations, summary forecast secondary observations. primary observations forecast horizon uncertainty present median used), samples <data.frame> forecast secondary observation posterior samples, forecast summary forecast secondary observation posterior.","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/format_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Posterior Samples — format_fit","title":"Format Posterior Samples — format_fit","text":"Summaries posterior samples adds additional custom variables.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/format_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Posterior Samples — format_fit","text":"","code":"format_fit(posterior_samples, horizon, shift, burn_in, start_date, CrIs)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/format_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Posterior Samples — format_fit","text":"posterior_samples list posterior samples returned extract_parameter_samples(). horizon Numeric, forecast horizon. shift Numeric, shift apply estimates. burn_in Numeric, number days discard estimates . start_date Date, earliest date data. CrIs Numeric vector credible intervals calculate.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/format_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format Posterior Samples — format_fit","text":"list samples summarised posterior parameter estimates.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/gamma_dist_def.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Gamma Distribution Definition Based on Parameter Estimates — gamma_dist_def","title":"Generate a Gamma Distribution Definition Based on Parameter Estimates — gamma_dist_def","text":"Deprecated; use Gamma() instead define gamma distribution.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/gamma_dist_def.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Gamma Distribution Definition Based on Parameter Estimates — gamma_dist_def","text":"","code":"gamma_dist_def(   shape,   shape_sd,   scale,   scale_sd,   mean,   mean_sd,   sd,   sd_sd,   max_value,   samples )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/gamma_dist_def.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Gamma Distribution Definition Based on Parameter Estimates — gamma_dist_def","text":"shape Numeric, shape parameter gamma distribution. shape_sd Numeric, standard deviation shape parameter. scale Numeric, scale parameter gamma distribution. scale_sd Numeric, standard deviation scale parameter. mean Numeric, log mean parameter gamma distribution. mean_sd Numeric, standard deviation log mean parameter. sd Numeric, log sd parameter gamma distribution. sd_sd Numeric, standard deviation log sd parameter. max_value Numeric, maximum value allow. Defaults 120. Samples outside range resampled. samples Numeric, number sample distributions generate.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/gamma_dist_def.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Gamma Distribution Definition Based on Parameter Estimates — gamma_dist_def","text":"<data.table> defining distribution used dist_skel()","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/generation_time_opts.html","id":null,"dir":"Reference","previous_headings":"","what":"Generation Time Distribution Options — gt_opts","title":"Generation Time Distribution Options — gt_opts","text":"Returns generation time parameters format lower level model use.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/generation_time_opts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generation Time Distribution Options — gt_opts","text":"","code":"gt_opts(   dist = Fixed(1),   ...,   disease,   source,   max = 14,   fixed = FALSE,   default_cdf_cutoff = 0.001,   weight_prior = TRUE )  generation_time_opts(   dist = Fixed(1),   ...,   disease,   source,   max = 14,   fixed = FALSE,   default_cdf_cutoff = 0.001,   weight_prior = TRUE )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/generation_time_opts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generation Time Distribution Options — gt_opts","text":"dist delay distribution series delay distributions . distribution given fixed generation time 1 assumed.  passing nonparametric distribution first element zero (see Details section) ... deprecated; use dist instead disease deprecated; use dist instead source deprecated; use dist instead max deprecated; use dist instead fixed deprecated; use dist instead default_cdf_cutoff Numeric; default CDF cutoff used unconstrained distribution passed dist. dist already constrained maximum CDF cutoff ignored. weight_prior Logical; TRUE (default), priors given dist weighted number observation data points, approximately placing independent prior time step usually preventing posteriors shifting. FALSE, weight applied, .e. parameters dist treated single parameters.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/generation_time_opts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generation Time Distribution Options — gt_opts","text":"<generation_time_opts> object summarising input delay distributions.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/generation_time_opts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generation Time Distribution Options — gt_opts","text":"discretised renewal equation used package support zero generation times, distribution specified left-truncated one, .e. first element nonparametric discretised probability distribution used generation time set zero resulting distribution renormalised.","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/generation_time_opts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generation Time Distribution Options — gt_opts","text":"","code":"# default settings with a fixed generation time of 1 generation_time_opts() #> Warning: ! No generation time distribution given. #> ℹ Now using a fixed generation time of 1 day, i.e. the reproduction number is #>   the same as the daily growth rate. #> ℹ If this was intended then this warning can be silenced by setting `dist = #>   Fixed(1)`'. #> - fixed value: #>   1  # A fixed gamma distributed generation time generation_time_opts(Gamma(mean = 3, sd = 2, max = 14)) #> - gamma distribution (max: 14): #>   shape: #>     2.2 #>   rate: #>     0.75  # An uncertain gamma distributed generation time generation_time_opts(   Gamma(     shape = Normal(mean = 3, sd = 1),     rate = Normal(mean = 2, sd = 0.5),     max = 14   ) ) #> - gamma distribution (max: 14): #>   shape: #>     - normal distribution: #>       mean: #>         3 #>       sd: #>         1 #>   rate: #>     - normal distribution: #>       mean: #>         2 #>       sd: #>         0.5  # An example generation time gt_opts(example_generation_time) #> - gamma distribution (max: 14): #>   shape: #>     - normal distribution: #>       mean: #>         1.4 #>       sd: #>         0.48 #>   rate: #>     - normal distribution: #>       mean: #>         0.38 #>       sd: #>         0.25"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/generation_times.html","id":null,"dir":"Reference","previous_headings":"","what":"Literature Estimates of Generation Times — generation_times","title":"Literature Estimates of Generation Times — generation_times","text":"Generation time estimates. See details: https://github.com/epiforecasts/EpiNow2/blob/main/data-raw/generation-time.R","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/generation_times.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Literature Estimates of Generation Times — generation_times","text":"","code":"generation_times"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/generation_times.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Literature Estimates of Generation Times — generation_times","text":"data.table summarising distribution","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a Literature Distribution — get_dist","title":"Get a Literature Distribution — get_dist","text":"function deprecated. Please specify distribution using functions Gamma() LogNormal() instead.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a Literature Distribution — get_dist","text":"","code":"get_dist(data, disease, source, max_value = 14, fixed = FALSE)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a Literature Distribution — get_dist","text":"data <data.table> format generation_times. disease character string indicating disease interest. source character string indicating source interest. max_value Numeric, maximum value allow. Defaults 14 days. fixed Logical, defaults FALSE. distributions supplied fixed values (vs uncertainty)?","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a Literature Distribution — get_dist","text":"list defining distribution","code":""},{"path":[]},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the distribution of a <dist_spec> — get_distribution","text":"","code":"get_distribution(x, id = NULL)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the distribution of a <dist_spec> — get_distribution","text":"x <dist_spec>. id Integer; id distribution use (x composite distribution). x single distribution ignored can left default value NULL.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the distribution of a <dist_spec> — get_distribution","text":"character string naming distribution (\"nonparametric\")","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the distribution of a <dist_spec> — get_distribution","text":"","code":"dist <- Gamma(shape = 3, rate = 2, max = 10) get_distribution(dist) #> [1] \"gamma\""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_element.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts an element of a <dist_spec> — get_element","title":"Extracts an element of a <dist_spec> — get_element","text":"Extracts element <dist_spec>","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_element.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts an element of a <dist_spec> — get_element","text":"","code":"get_element(x, id = NULL, element)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_element.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts an element of a <dist_spec> — get_element","text":"x <dist_spec>. id Integer; id distribution use (x composite distribution). x single distribution ignored can left default value NULL. element element, .e. \"parameters\", \"pmf\" \"distribution\".","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_element.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts an element of a <dist_spec> — get_element","text":"id use.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_generation_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a Literature Distribution for the Generation Time — get_generation_time","title":"Get a Literature Distribution for the Generation Time — get_generation_time","text":"Extracts literature distribution generation_times. function deprecated. Please specify distribution using functions Gamma() LogNormal() instead.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_generation_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a Literature Distribution for the Generation Time — get_generation_time","text":"","code":"get_generation_time(disease, source, max_value = 14, fixed = FALSE)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_generation_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a Literature Distribution for the Generation Time — get_generation_time","text":"disease character string indicating disease interest. source character string indicating source interest. max_value Numeric, maximum value allow. Defaults 14 days. fixed Logical, defaults FALSE. distributions supplied fixed values (vs uncertainty)?","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_generation_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a Literature Distribution for the Generation Time — get_generation_time","text":"list defining distribution","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_incubation_period.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a Literature Distribution for the Incubation Period — get_incubation_period","title":"Get a Literature Distribution for the Incubation Period — get_incubation_period","text":"Extracts literature distribution generation_times. function deprecated. Please specify distribution using functions Gamma() LogNormal() instead.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_incubation_period.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a Literature Distribution for the Incubation Period — get_incubation_period","text":"","code":"get_incubation_period(disease, source, max_value = 14, fixed = FALSE)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_incubation_period.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a Literature Distribution for the Incubation Period — get_incubation_period","text":"disease character string indicating disease interest. source character string indicating source interest. max_value Numeric, maximum value allow. Defaults 14 days. fixed Logical, defaults FALSE. distributions supplied fixed values (vs uncertainty)?","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_incubation_period.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a Literature Distribution for the Incubation Period — get_incubation_period","text":"list defining distribution","code":""},{"path":[]},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get parameters of a parametric distribution — get_parameters","text":"","code":"get_parameters(x, id = NULL)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get parameters of a parametric distribution — get_parameters","text":"x <dist_spec>. id Integer; id distribution use (x composite distribution). x single distribution ignored can left default value NULL.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get parameters of a parametric distribution — get_parameters","text":"list parameters distribution.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get parameters of a parametric distribution — get_parameters","text":"","code":"dist <- Gamma(shape = 3, rate = 2) get_parameters(dist) #> $shape #> [1] 3 #>  #> $rate #> [1] 2 #>"},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_pmf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the probability mass function of a nonparametric distribution — get_pmf","text":"","code":"get_pmf(x, id = NULL)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_pmf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the probability mass function of a nonparametric distribution — get_pmf","text":"x <dist_spec>. id Integer; id distribution use (x composite distribution). x single distribution ignored can left default value NULL.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_pmf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the probability mass function of a nonparametric distribution — get_pmf","text":"pmf distribution","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_pmf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the probability mass function of a nonparametric distribution — get_pmf","text":"","code":"dist <- discretise(Gamma(shape = 3, rate = 2, max = 10)) get_pmf(dist) #>  [1] 1.616618e-01 3.809484e-01 3.073539e-01 1.121747e-01 2.959971e-02 #>  [6] 6.615857e-03 1.337717e-03 2.529703e-04 4.560307e-05 7.931045e-06 #> [11] 1.341353e-06"},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_raw_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a Single Raw Result — get_raw_result","text":"","code":"get_raw_result(file, region, date, result_dir)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_raw_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a Single Raw Result — get_raw_result","text":"file Character string giving result files name. region Character string giving region interest. date Target date (format \"yyyy-mm-dd). result_dir Character string giving location target directory.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_raw_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a Single Raw Result — get_raw_result","text":"R object read targeted .rds file","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_regional_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Combined Regional Results — get_regional_results","title":"Get Combined Regional Results — get_regional_results","text":"Summarises results across regions either input disk. See examples details.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_regional_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Combined Regional Results — get_regional_results","text":"","code":"get_regional_results(   regional_output,   results_dir,   date,   samples = TRUE,   forecast = FALSE )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_regional_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Combined Regional Results — get_regional_results","text":"regional_output list output produced regional_epinow() stored regional list. results_dir character string indicating folder containing {EpiNow2} results extract. date Character string (format \"yyyy-mm-dd\") indicating date extract data . Defaults \"latest\" finds latest results available. samples Logical, defaults TRUE. samples returned. forecast Logical, defaults FALSE. forecast results returned.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_regional_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Combined Regional Results — get_regional_results","text":"list estimates, forecasts estimated cases date report.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_regional_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Combined Regional Results — get_regional_results","text":"","code":"# get example multiregion estimates regional_out <- readRDS(system.file(     package = \"EpiNow2\", \"extdata\", \"example_regional_epinow.rds\" ))  # from output results <- get_regional_results(regional_out$regional, samples = FALSE)"},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_regions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Folders with Results — get_regions","text":"","code":"get_regions(results_dir)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_regions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Folders with Results — get_regions","text":"results_dir character string giving directory results stored (produced regional_epinow()).","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_regions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Folders with Results — get_regions","text":"named character vector containing results plot.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_regions_with_most_reports.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Regions with Most Reported Cases — get_regions_with_most_reports","title":"Get Regions with Most Reported Cases — get_regions_with_most_reports","text":"Extract vector regions reported cases set time window.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_regions_with_most_reports.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Regions with Most Reported Cases — get_regions_with_most_reports","text":"","code":"get_regions_with_most_reports(data, time_window = 7, no_regions = 6)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_regions_with_most_reports.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Regions with Most Reported Cases — get_regions_with_most_reports","text":"data <data.frame> confirmed cases (confirm) date (date), region (region). time_window Numeric, number days include latest date data. Defaults 7 days. no_regions Numeric, number regions return. Defaults 6.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_regions_with_most_reports.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Regions with Most Reported Cases — get_regions_with_most_reports","text":"character vector regions highest reported cases","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_seeding_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate seeding time from delays and generation time — get_seeding_time","title":"Estimate seeding time from delays and generation time — get_seeding_time","text":"seeding time set mean specified delays, constrained least maximum generation time","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_seeding_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate seeding time from delays and generation time — get_seeding_time","text":"","code":"get_seeding_time(delays, generation_time, rt = rt_opts())"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_seeding_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate seeding time from delays and generation time — get_seeding_time","text":"delays call delay_opts() defining delay distributions options. See documentation delay_opts() examples details. generation_time call gt_opts() (alias generation_time_opts()) defining generation time distribution used. backwards compatibility list summary parameters can also passed. rt list options generated rt_opts() defining Rt estimation. Defaults rt_opts(). generate new infections using non-mechanistic model instead renewal equation model, use rt = NULL. non-mechanistic model internally uses setting rt = rt_opts(use_rt = FALSE, future = \"project\", gp_on = \"R0\").","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/get_seeding_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate seeding time from delays and generation time — get_seeding_time","text":"integer seeding time","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/gp_opts.html","id":null,"dir":"Reference","previous_headings":"","what":"Approximate Gaussian Process Settings — gp_opts","title":"Approximate Gaussian Process Settings — gp_opts","text":"Defines list specifying structure approximate Gaussian process. Custom settings can supplied override defaults.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/gp_opts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Approximate Gaussian Process Settings — gp_opts","text":"","code":"gp_opts(   basis_prop = 0.2,   boundary_scale = 1.5,   ls_mean = 21,   ls_sd = 7,   ls_min = 0,   ls_max = 60,   ls = LogNormal(mean = 21, sd = 7, max = 60),   alpha = Normal(mean = 0, sd = 0.01),   kernel = c(\"matern\", \"se\", \"ou\", \"periodic\"),   matern_order = 3/2,   matern_type,   w0 = 1,   alpha_mean,   alpha_sd )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/gp_opts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Approximate Gaussian Process Settings — gp_opts","text":"basis_prop Numeric, proportion time points use basis functions. Defaults 0.2. Decreasing value results decrease accuracy faster compute time (increasing first effect). general smaller posterior length scales require higher proportion basis functions. See (Riutort-Mayol et al. 2020 https://arxiv.org/abs/2004.11408) advice updating default. boundary_scale Numeric, defaults 1.5. Boundary scale approximate Gaussian process. See (Riutort-Mayol et al. 2020 https://arxiv.org/abs/2004.11408) advice updating default. ls_mean Deprecated; use ls instead. ls_sd Deprecated; use ls instead. ls_min Deprecated; use ls instead. ls_max Deprecated; use ls instead. ls <dist_spec> giving prior distribution lengthscale parameter Gaussian process kernel scale days. Defaults Lognormal distribution mean 21 days, sd 7 days maximum 60 days: LogNormal(mean = 21, sd = 7, max = 60) (lower limit 0 enforced automatically ensure positivity) alpha <dist_spec> giving prior distribution magnitude parameter Gaussian process kernel. approximately expected standard deviation Gaussian process (logged Rt case renewal model, logged infections case nonmechanistic model). Defaults half-normal distribution mean 0 sd 0.01: Normal(mean = 0, sd = 0.01) (lower limit 0 enforced automatically ensure positivity) kernel Character string, type kernel required. Currently supporting Matern kernel (\"matern\"), squared exponential kernel (\"se\"), periodic kernel, Ornstein-Uhlenbeck #' kernel (\"ou\"), periodic kernel (\"periodic\"). matern_order Numeric, defaults 3/2. Order Matérn Kernel use. Common choices 1/2, 3/2, 5/2. kernel set \"ou\", matern_order automatically set 1/2. used kernel set \"matern\". matern_type Deprecated; Numeric, defaults 3/2. Order Matérn Kernel use. Currently, orders 1/2, 3/2, 5/2 Inf supported. w0 Numeric, defaults 1.0. Fundamental frequency periodic kernel. used kernel set \"periodic\". alpha_mean Deprecated; use alpha instead. alpha_sd Deprecated; use alpha instead.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/gp_opts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Approximate Gaussian Process Settings — gp_opts","text":"<gp_opts> object settings defining Gaussian process","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/gp_opts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Approximate Gaussian Process Settings — gp_opts","text":"","code":"# default settings gp_opts() #> $basis_prop #> [1] 0.2 #>  #> $boundary_scale #> [1] 1.5 #>  #> $ls #> - lognormal distribution (max: 60): #>   meanlog: #>     3 #>   sdlog: #>     0.32 #>  #> $alpha #> - normal distribution: #>   mean: #>     0 #>   sd: #>     0.01 #>  #> $kernel #> [1] \"matern\" #>  #> $matern_order #> [1] 1.5 #>  #> $w0 #> [1] 1 #>  #> attr(,\"class\") #> [1] \"gp_opts\" \"list\"     # add a custom length scale gp_opts(ls_mean = 4) #> Warning: ! Specifying lengthscale priors via the `ls_mean`, `ls_sd`, `ls_min`, and #>   `ls_max` arguments is deprecated. #> ℹ Use the `ls` argument instead. #> $basis_prop #> [1] 0.2 #>  #> $boundary_scale #> [1] 1.5 #>  #> $ls #> - lognormal distribution (max: 60): #>   meanlog: #>     0.69 #>   sdlog: #>     1.2 #>  #> $alpha #> - normal distribution: #>   mean: #>     0 #>   sd: #>     0.01 #>  #> $kernel #> [1] \"matern\" #>  #> $matern_order #> [1] 1.5 #>  #> $w0 #> [1] 1 #>  #> attr(,\"class\") #> [1] \"gp_opts\" \"list\"     # use linear kernel gp_opts(kernel = \"periodic\") #> $basis_prop #> [1] 0.2 #>  #> $boundary_scale #> [1] 1.5 #>  #> $ls #> - lognormal distribution (max: 60): #>   meanlog: #>     3 #>   sdlog: #>     0.32 #>  #> $alpha #> - normal distribution: #>   mean: #>     0 #>   sd: #>     0.01 #>  #> $kernel #> [1] \"periodic\" #>  #> $matern_order #> [1] 1.5 #>  #> $w0 #> [1] 1 #>  #> attr(,\"class\") #> [1] \"gp_opts\" \"list\""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/growth_to_R.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Growth Rates to Reproduction numbers. — growth_to_R","title":"Convert Growth Rates to Reproduction numbers. — growth_to_R","text":"See # nolint justification. Now handled internally stan may removed future updates user demand.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/growth_to_R.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Growth Rates to Reproduction numbers. — growth_to_R","text":"","code":"growth_to_R(r, gamma_mean, gamma_sd)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/growth_to_R.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Growth Rates to Reproduction numbers. — growth_to_R","text":"r Numeric, rate growth estimates. gamma_mean Numeric, mean gamma distribution gamma_sd Numeric, standard deviation gamma distribution .","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/growth_to_R.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Growth Rates to Reproduction numbers. — growth_to_R","text":"Numeric vector reproduction number estimates","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/growth_to_R.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Growth Rates to Reproduction numbers. — growth_to_R","text":"","code":"growth_to_R(0.2, 4, 1) #> [1] 2.182875"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/incubation_periods.html","id":null,"dir":"Reference","previous_headings":"","what":"Literature Estimates of Incubation Periods — incubation_periods","title":"Literature Estimates of Incubation Periods — incubation_periods","text":"Incubation period estimates. See details: https://github.com/epiforecasts/EpiNow2/blob/main/data-raw/incubation-period.R # nolint","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/incubation_periods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Literature Estimates of Incubation Periods — incubation_periods","text":"","code":"incubation_periods"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/incubation_periods.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Literature Estimates of Incubation Periods — incubation_periods","text":"data.table summarising distribution","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/init_cumulative_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate initial conditions by fitting to cumulative cases — init_cumulative_fit","title":"Generate initial conditions by fitting to cumulative cases — init_cumulative_fit","text":"Fits model cumulative cases. may useful approach initialising full model fit certain data sets sampler gets stuck easily initialised fitting cumulative cases changes shape posterior distribution. estimate_infections(), epinow() regional_epinow() option can engaged setting stan_opts(init_fit = \"cumulative\"). implementation based approach taken epidemia authored James Scott.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/init_cumulative_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate initial conditions by fitting to cumulative cases — init_cumulative_fit","text":"","code":"init_cumulative_fit(   args,   samples = 50,   warmup = 50,   id = \"init\",   verbose = FALSE,   backend = \"rstan\" )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/init_cumulative_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate initial conditions by fitting to cumulative cases — init_cumulative_fit","text":"args List stan arguments. samples Numeric, defaults 50. Number posterior samples. warmup Numeric, defaults 50. Number warmup samples. id character string used assign logging information error. Used regional_epinow() assign errors regions. Alter default run error catching. verbose Logical, fitting progress returned. Defaults FALSE. backend Character string indicating backend use fitting stan models. Supported arguments \"rstan\" (default) \"cmdstanr\".","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/init_cumulative_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate initial conditions by fitting to cumulative cases — init_cumulative_fit","text":"stanfit object","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/is_constrained.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a <dist_spec> is constrained, i.e. has a finite maximum or nonzero CDF cutoff. — is_constrained","text":"","code":"# S3 method for class 'dist_spec' is_constrained(x, ...)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/is_constrained.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a <dist_spec> is constrained, i.e. has a finite maximum or nonzero CDF cutoff. — is_constrained","text":"x <dist_spec> ... ignored","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/is_constrained.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a <dist_spec> is constrained, i.e. has a finite maximum or nonzero CDF cutoff. — is_constrained","text":"Logical; TRUE x constrained","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/is_constrained.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a <dist_spec> is constrained, i.e. has a finite maximum or nonzero CDF cutoff. — is_constrained","text":"","code":"# A fixed gamma distribution with mean 5 and sd 1. dist1 <- Gamma(mean = 5, sd = 1, max = 20)  # An uncertain lognormal distribution with meanlog and sdlog normally # distributed as Normal(3, 0.5) and Normal(2, 0.5) respectively dist2 <- LogNormal(   meanlog = Normal(3, 0.5),   sdlog = Normal(2, 0.5),   max = 20 )  # both distributions are constrained and therefore so is the sum is_constrained(dist1 + dist2) #> [1] TRUE"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/lapply_func.html","id":null,"dir":"Reference","previous_headings":"","what":"Choose a parallel or sequential apply function — lapply_func","title":"Choose a parallel or sequential apply function — lapply_func","text":"Internal function chooses appropriate \"apply\"-type function (either lapply() future.apply::future_lapply())","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/lapply_func.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Choose a parallel or sequential apply function — lapply_func","text":"","code":"lapply_func(..., backend = \"rstan\", future.opts = list())"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/lapply_func.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Choose a parallel or sequential apply function — lapply_func","text":"... Additional parameters pass underlying option functions, stan_sampling_opts() stan_vb_opts(), depending method backend Character string indicating backend use fitting stan models. Supported arguments \"rstan\" (default) \"cmdstanr\".","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/lapply_func.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Choose a parallel or sequential apply function — lapply_func","text":"function can used apply function list","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/lognorm_dist_def.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Log Normal Distribution Definition Based on Parameter Estimates — lognorm_dist_def","title":"Generate a Log Normal Distribution Definition Based on Parameter Estimates — lognorm_dist_def","text":"Generates distribution definition parameter estimates available log normal distributed parameters. See rlnorm() distribution information.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/lognorm_dist_def.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Log Normal Distribution Definition Based on Parameter Estimates — lognorm_dist_def","text":"","code":"lognorm_dist_def(mean, mean_sd, sd, sd_sd, max_value, samples, to_log = FALSE)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/lognorm_dist_def.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Log Normal Distribution Definition Based on Parameter Estimates — lognorm_dist_def","text":"mean Numeric, log mean parameter gamma distribution. mean_sd Numeric, standard deviation log mean parameter. sd Numeric, log sd parameter gamma distribution. sd_sd Numeric, standard deviation log sd parameter. max_value Numeric, maximum value allow. Defaults 120. Samples outside range resampled. samples Numeric, number sample distributions generate. to_log Logical, parameters logged use.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/lognorm_dist_def.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Log Normal Distribution Definition Based on Parameter Estimates — lognorm_dist_def","text":"<data.table> defining distribution used dist_skel()","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/lower_bounds.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the lower bounds of the parameters of a distribution — lower_bounds","title":"Get the lower bounds of the parameters of a distribution — lower_bounds","text":"used avoid sampling parameter values support.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/lower_bounds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the lower bounds of the parameters of a distribution — lower_bounds","text":"","code":"lower_bounds(distribution)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/lower_bounds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the lower bounds of the parameters of a distribution — lower_bounds","text":"distribution Character; distribution use.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/lower_bounds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the lower bounds of the parameters of a distribution — lower_bounds","text":"numeric vector, lower bounds.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/lower_bounds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the lower bounds of the parameters of a distribution — lower_bounds","text":"","code":"if (FALSE) { # \\dontrun{ lower_bounds(\"lognormal\") } # }"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/make_conf.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Credible Intervals — make_conf","title":"Format Credible Intervals — make_conf","text":"Combines list values formatted credible intervals.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/make_conf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Credible Intervals — make_conf","text":"","code":"make_conf(value, CrI = 90, reverse = FALSE)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/make_conf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Credible Intervals — make_conf","text":"value List value map string. Requires, point, lower, upper. CrI Numeric, credible interval report. Defaults 90. reverse Logical, defaults FALSE. reported credible interval switched.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/make_conf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format Credible Intervals — make_conf","text":"character vector formatted reporting","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/make_conf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format Credible Intervals — make_conf","text":"","code":"value <- list(median = 2, lower_90 = 1, upper_90 = 3) make_conf(value) #> [1] \"2 (1 -- 3)\""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/map_prob_change.html","id":null,"dir":"Reference","previous_headings":"","what":"Categorise the Probability of Change for Rt — map_prob_change","title":"Categorise the Probability of Change for Rt — map_prob_change","text":"Categorises numeric variable \"Increasing\" (< 0.05), \"Likely increasing\" (<0.4), \"Stable\" (< 0.6), \"Likely decreasing\" (< 0.95), \"Decreasing\" (<= 1)","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/map_prob_change.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Categorise the Probability of Change for Rt — map_prob_change","text":"","code":"map_prob_change(var)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/map_prob_change.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Categorise the Probability of Change for Rt — map_prob_change","text":"var Numeric variable categorised","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/map_prob_change.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Categorise the Probability of Change for Rt — map_prob_change","text":"character variable.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/map_prob_change.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Categorise the Probability of Change for Rt — map_prob_change","text":"","code":"var <- seq(0.01, 1, 0.01) var #>   [1] 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.10 0.11 0.12 0.13 0.14 0.15 #>  [16] 0.16 0.17 0.18 0.19 0.20 0.21 0.22 0.23 0.24 0.25 0.26 0.27 0.28 0.29 0.30 #>  [31] 0.31 0.32 0.33 0.34 0.35 0.36 0.37 0.38 0.39 0.40 0.41 0.42 0.43 0.44 0.45 #>  [46] 0.46 0.47 0.48 0.49 0.50 0.51 0.52 0.53 0.54 0.55 0.56 0.57 0.58 0.59 0.60 #>  [61] 0.61 0.62 0.63 0.64 0.65 0.66 0.67 0.68 0.69 0.70 0.71 0.72 0.73 0.74 0.75 #>  [76] 0.76 0.77 0.78 0.79 0.80 0.81 0.82 0.83 0.84 0.85 0.86 0.87 0.88 0.89 0.90 #>  [91] 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.00  map_prob_change(var) #>   [1] Increasing        Increasing        Increasing        Increasing        #>   [5] Likely increasing Likely increasing Likely increasing Likely increasing #>   [9] Likely increasing Likely increasing Likely increasing Likely increasing #>  [13] Likely increasing Likely increasing Likely increasing Likely increasing #>  [17] Likely increasing Likely increasing Likely increasing Likely increasing #>  [21] Likely increasing Likely increasing Likely increasing Likely increasing #>  [25] Likely increasing Likely increasing Likely increasing Likely increasing #>  [29] Likely increasing Likely increasing Likely increasing Likely increasing #>  [33] Likely increasing Likely increasing Likely increasing Likely increasing #>  [37] Likely increasing Likely increasing Likely increasing Stable            #>  [41] Stable            Stable            Stable            Stable            #>  [45] Stable            Stable            Stable            Stable            #>  [49] Stable            Stable            Stable            Stable            #>  [53] Stable            Stable            Stable            Stable            #>  [57] Stable            Stable            Stable            Likely decreasing #>  [61] Likely decreasing Likely decreasing Likely decreasing Likely decreasing #>  [65] Likely decreasing Likely decreasing Likely decreasing Likely decreasing #>  [69] Likely decreasing Likely decreasing Likely decreasing Likely decreasing #>  [73] Likely decreasing Likely decreasing Likely decreasing Likely decreasing #>  [77] Likely decreasing Likely decreasing Likely decreasing Likely decreasing #>  [81] Likely decreasing Likely decreasing Likely decreasing Likely decreasing #>  [85] Likely decreasing Likely decreasing Likely decreasing Likely decreasing #>  [89] Likely decreasing Likely decreasing Likely decreasing Likely decreasing #>  [93] Likely decreasing Likely decreasing Decreasing        Decreasing        #>  [97] Decreasing        Decreasing        Decreasing        Decreasing        #> Levels: Increasing Likely increasing Stable Likely decreasing Decreasing"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/match_output_arguments.html","id":null,"dir":"Reference","previous_headings":"","what":"Match User Supplied Arguments with Supported Options — match_output_arguments","title":"Match User Supplied Arguments with Supported Options — match_output_arguments","text":"Match user supplied arguments supported options return logical list internal usage.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/match_output_arguments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match User Supplied Arguments with Supported Options — match_output_arguments","text":"","code":"match_output_arguments(   input_args = NULL,   supported_args = NULL,   logger = NULL,   level = \"info\" )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/match_output_arguments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match User Supplied Arguments with Supported Options — match_output_arguments","text":"input_args character vector input arguments (can partial). supported_args character vector supported output arguments. logger character vector indicating logger target messages . Defaults logging. level Character string defaulting \"info\". Logging level see documentation futile.logger details. Supported options \"info\" \"debug\".","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/match_output_arguments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match User Supplied Arguments with Supported Options — match_output_arguments","text":"logical vector named output arguments","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/max.dist_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the maximum of one or more delay distribution — max.dist_spec","title":"Returns the maximum of one or more delay distribution — max.dist_spec","text":"works maximum (parametric / nonparametric) delay distributions combined passed <dist_spec> (ignoring uncertainty parameters)","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/max.dist_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the maximum of one or more delay distribution — max.dist_spec","text":"","code":"# S3 method for class 'dist_spec' max(x, ...)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/max.dist_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the maximum of one or more delay distribution — max.dist_spec","text":"x <dist_spec> use ... used","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/max.dist_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the maximum of one or more delay distribution — max.dist_spec","text":"vector means.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/max.dist_spec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns the maximum of one or more delay distribution — max.dist_spec","text":"","code":"# A fixed gamma distribution with mean 5 and sd 1. dist1 <- Gamma(mean = 5, sd = 1, max = 20) max(dist1) #> [1] 20  # An uncertain lognormal distribution with meanlog and sdlog normally # distributed as Normal(3, 0.5) and Normal(2, 0.5) respectively dist2 <- LogNormal(   meanlog = Normal(3, 0.5),   sdlog = Normal(2, 0.5),   max = 20 ) max(dist2) #> [1] 20  # The max the sum of two distributions max(dist1 + dist2) #> [1] 20 20"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/mean.dist_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the mean of one or more delay distribution — mean.dist_spec","title":"Returns the mean of one or more delay distribution — mean.dist_spec","text":"works mean (parametric / nonparametric) delay distributions combined passed <dist_spec>.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/mean.dist_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the mean of one or more delay distribution — mean.dist_spec","text":"","code":"# S3 method for class 'dist_spec' mean(x, ..., ignore_uncertainty = FALSE)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/mean.dist_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the mean of one or more delay distribution — mean.dist_spec","text":"x <dist_spec> use ... used ignore_uncertainty Logical; whether ignore uncertainty parameters. set FALSE (default) mean uncertain parameters returned NA.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/mean.dist_spec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns the mean of one or more delay distribution — mean.dist_spec","text":"","code":"# A fixed lognormal distribution with mean 5 and sd 1. dist1 <- LogNormal(mean = 5, sd = 1, max = 20) mean(dist1) #> [1] 5  # An uncertain gamma distribution with shape and rate normally distributed # as Normal(3, 0.5) and Normal(2, 0.5) respectively dist2 <- Gamma(   shape = Normal(3, 0.5),   rate = Normal(2, 0.5),   max = 20 ) mean(dist2) #> [1] NA  # The mean of the sum of two distributions mean(dist1 + dist2) #> [1]  5 NA"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/natural_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the names of the natural parameters of a distribution — natural_params","title":"Get the names of the natural parameters of a distribution — natural_params","text":"parameters used stan models. parameter representations converted using convert_to_natural() passed stan models.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/natural_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the names of the natural parameters of a distribution — natural_params","text":"","code":"natural_params(distribution)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/natural_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the names of the natural parameters of a distribution — natural_params","text":"distribution Character; distribution use.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/natural_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the names of the natural parameters of a distribution — natural_params","text":"character vector, natural parameters.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/natural_params.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the names of the natural parameters of a distribution — natural_params","text":"","code":"if (FALSE) { # \\dontrun{ natural_params(\"gamma\") } # }"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/ndist.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the number of distributions in a <dist_spec> — ndist","title":"Calculate the number of distributions in a <dist_spec> — ndist","text":"Calculate number distributions <dist_spec>","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/ndist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the number of distributions in a <dist_spec> — ndist","text":"","code":"ndist(x)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/ndist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the number of distributions in a <dist_spec> — ndist","text":"x <dist_spec> object.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/ndist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the number of distributions in a <dist_spec> — ndist","text":"number distributions.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/new_dist_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function for generating a dist_spec given parameters and a distribution. — new_dist_spec","title":"Internal function for generating a dist_spec given parameters and a distribution. — new_dist_spec","text":"convert parameters natural parameters generating dist_spec. uncertainty done using sampling.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/new_dist_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function for generating a dist_spec given parameters and a distribution. — new_dist_spec","text":"","code":"new_dist_spec(params, distribution, max = Inf, cdf_cutoff = 0)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/new_dist_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function for generating a dist_spec given parameters and a distribution. — new_dist_spec","text":"params Parameters distribution (including max) distribution Character; distribution use. max Numeric, maximum value distribution. distribution truncated value. Default: Inf, .e. maximum. cdf_cutoff Numeric; desired CDF cutoff. part cumulative distribution function beyond 1 minus value argument removed. Default: 0, .e. use full distribution.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/new_dist_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function for generating a dist_spec given parameters and a distribution. — new_dist_spec","text":"dist_spec given specification.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/new_dist_spec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Internal function for generating a dist_spec given parameters and a distribution. — new_dist_spec","text":"","code":"new_dist_spec(   params = list(mean = 2, sd = 1),   distribution = \"normal\" ) #> - normal distribution: #>   mean: #>     2 #>   sd: #>     1"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/obs_opts.html","id":null,"dir":"Reference","previous_headings":"","what":"Observation Model Options — obs_opts","title":"Observation Model Options — obs_opts","text":"Defines list specifying structure observation model. Custom settings can supplied override defaults.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/obs_opts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Observation Model Options — obs_opts","text":"","code":"obs_opts(   family = c(\"negbin\", \"poisson\"),   phi = Normal(mean = 0, sd = 0.25),   weight = 1,   week_effect = TRUE,   week_length = 7,   scale = Fixed(1),   na = c(\"missing\", \"accumulate\"),   likelihood = TRUE,   return_likelihood = FALSE )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/obs_opts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Observation Model Options — obs_opts","text":"family Character string defining observation model. Options Negative binomial (\"negbin\"), default, Poisson. phi <dist_spec> specifying prior overdispersion parameter reporting process, used familiy \"negbin\". Internally parameterised overdispersion one square prior overdispersion phi. Defaults half-normal distribution mean 0 standard deviation 0.25: Normal(mean = 0, sd = 0.25). lower limit zero enforced automatically. weight Numeric, defaults 1. Weight give observed data log density. week_effect Logical defaulting TRUE. day week effect used observation model. week_length Numeric assumed length week days, defaulting 7 days. can modified data aggregated period week data non-weekly periodicity. scale <dist_spec> specifying prior scaling factor applied map latent infections (convolved date report).  Defaults fixed value 1, .e. scaling: Fixed(1). lower limit zero enforced automatically. setting prior distribution overreporting expected, might sensible set maximum 1 via max option declaring distribution. na Deprecated; use fill_missing() function instead likelihood Logical, defaults TRUE. likelihood included model. return_likelihood Logical, defaults FALSE. likelihood returned model.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/obs_opts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Observation Model Options — obs_opts","text":"<obs_opts> object observation model settings.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/obs_opts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Observation Model Options — obs_opts","text":"","code":"# default settings obs_opts() #> $family #> [1] \"negbin\" #>  #> $phi #> - normal distribution: #>   mean: #>     0 #>   sd: #>     0.25 #>  #> $weight #> [1] 1 #>  #> $week_effect #> [1] TRUE #>  #> $week_length #> [1] 7 #>  #> $scale #> - fixed value: #>   1 #>  #> $accumulate #> [1] 0 #>  #> $likelihood #> [1] TRUE #>  #> $return_likelihood #> [1] FALSE #>  #> $na_as_missing_default_used #> [1] TRUE #>  #> attr(,\"class\") #> [1] \"obs_opts\" \"list\"      # Turn off day of the week effect obs_opts(week_effect = TRUE) #> $family #> [1] \"negbin\" #>  #> $phi #> - normal distribution: #>   mean: #>     0 #>   sd: #>     0.25 #>  #> $weight #> [1] 1 #>  #> $week_effect #> [1] TRUE #>  #> $week_length #> [1] 7 #>  #> $scale #> - fixed value: #>   1 #>  #> $accumulate #> [1] 0 #>  #> $likelihood #> [1] TRUE #>  #> $return_likelihood #> [1] FALSE #>  #> $na_as_missing_default_used #> [1] TRUE #>  #> attr(,\"class\") #> [1] \"obs_opts\" \"list\"      # Scale reported data obs_opts(scale = Normal(mean = 0.2, sd = 0.02)) #> $family #> [1] \"negbin\" #>  #> $phi #> - normal distribution: #>   mean: #>     0 #>   sd: #>     0.25 #>  #> $weight #> [1] 1 #>  #> $week_effect #> [1] TRUE #>  #> $week_length #> [1] 7 #>  #> $scale #> - normal distribution: #>   mean: #>     0.2 #>   sd: #>     0.02 #>  #> $accumulate #> [1] 0 #>  #> $likelihood #> [1] TRUE #>  #> $return_likelihood #> [1] FALSE #>  #> $na_as_missing_default_used #> [1] TRUE #>  #> attr(,\"class\") #> [1] \"obs_opts\" \"list\""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/opts_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Forecast optiong — opts_list","title":"Forecast optiong — opts_list","text":"Define list _opts() pass regional_epinow() _opts() accepting arguments. useful different settings needed regions within single regional_epinow() call. Using opts_list() defaults can applied regions present override passed regions necessary (either within opts_list() externally).","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/opts_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecast optiong — opts_list","text":"","code":"opts_list(opts, reported_cases, ...)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/opts_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecast optiong — opts_list","text":"opts _opts() function call rt_opts(). reported_cases data frame containing region variable indicating target regions. ... Optional override region defaults. See examples use case.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/opts_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forecast optiong — opts_list","text":"named list options per region can passed _opt accepting arguments regional_epinow.","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/opts_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Forecast optiong — opts_list","text":"","code":"# uses example case vector cases <- example_confirmed[1:40] cases <- data.table::rbindlist(list(   data.table::copy(cases)[, region := \"testland\"],   cases[, region := \"realland\"] ))  # default settings opts_list(rt_opts(), cases) #> $testland #> $use_rt #> [1] TRUE #>  #> $rw #> [1] 0 #>  #> $use_breakpoints #> [1] TRUE #>  #> $future #> [1] \"latest\" #>  #> $pop #> [1] 0 #>  #> $gp_on #> [1] \"R_t-1\" #>  #> $prior #> - lognormal distribution: #>   meanlog: #>     -0.35 #>   sdlog: #>     0.83 #>  #> attr(,\"class\") #> [1] \"rt_opts\" \"list\"    #>  #> $realland #> $use_rt #> [1] TRUE #>  #> $rw #> [1] 0 #>  #> $use_breakpoints #> [1] TRUE #>  #> $future #> [1] \"latest\" #>  #> $pop #> [1] 0 #>  #> $gp_on #> [1] \"R_t-1\" #>  #> $prior #> - lognormal distribution: #>   meanlog: #>     -0.35 #>   sdlog: #>     0.83 #>  #> attr(,\"class\") #> [1] \"rt_opts\" \"list\"    #>   # add a weekly random walk in realland opts_list(rt_opts(), cases, realland = rt_opts(rw = 7)) #> $testland #> $use_rt #> [1] TRUE #>  #> $rw #> [1] 0 #>  #> $use_breakpoints #> [1] TRUE #>  #> $future #> [1] \"latest\" #>  #> $pop #> [1] 0 #>  #> $gp_on #> [1] \"R_t-1\" #>  #> $prior #> - lognormal distribution: #>   meanlog: #>     -0.35 #>   sdlog: #>     0.83 #>  #> attr(,\"class\") #> [1] \"rt_opts\" \"list\"    #>  #> $realland #> $use_rt #> [1] TRUE #>  #> $rw #> [1] 7 #>  #> $use_breakpoints #> [1] TRUE #>  #> $future #> [1] \"latest\" #>  #> $pop #> [1] 0 #>  #> $gp_on #> [1] \"R_t-1\" #>  #> $prior #> - lognormal distribution: #>   meanlog: #>     -0.35 #>   sdlog: #>     0.83 #>  #> attr(,\"class\") #> [1] \"rt_opts\" \"list\"    #>   # add a weekly random walk externally rt <- opts_list(rt_opts(), cases) rt$realland$rw <- 7 rt #> $testland #> $use_rt #> [1] TRUE #>  #> $rw #> [1] 0 #>  #> $use_breakpoints #> [1] TRUE #>  #> $future #> [1] \"latest\" #>  #> $pop #> [1] 0 #>  #> $gp_on #> [1] \"R_t-1\" #>  #> $prior #> - lognormal distribution: #>   meanlog: #>     -0.35 #>   sdlog: #>     0.83 #>  #> attr(,\"class\") #> [1] \"rt_opts\" \"list\"    #>  #> $realland #> $use_rt #> [1] TRUE #>  #> $rw #> [1] 7 #>  #> $use_breakpoints #> [1] TRUE #>  #> $future #> [1] \"latest\" #>  #> $pop #> [1] 0 #>  #> $gp_on #> [1] \"R_t-1\" #>  #> $prior #> - lognormal distribution: #>   meanlog: #>     -0.35 #>   sdlog: #>     0.83 #>  #> attr(,\"class\") #> [1] \"rt_opts\" \"list\"    #>"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/plot.dist_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot PMF and CDF for a dist_spec object — plot.dist_spec","title":"Plot PMF and CDF for a dist_spec object — plot.dist_spec","text":"function takes <dist_spec> object plots probability mass function (PMF) cumulative distribution function (CDF) using {ggplot2}.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/plot.dist_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot PMF and CDF for a dist_spec object — plot.dist_spec","text":"","code":"# S3 method for class 'dist_spec' plot(x, samples = 50L, res = 1, cumulative = TRUE, ...)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/plot.dist_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot PMF and CDF for a dist_spec object — plot.dist_spec","text":"x <dist_spec> object samples Integer; Number samples generate distributions uncertain parameters (default: 50). res Numeric; Resolution PMF CDF (default: 1, .e. integer discretisation). cumulative Logical; whether plot cumulative distribution addition probability mass function ... ignored","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/plot.dist_spec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot PMF and CDF for a dist_spec object — plot.dist_spec","text":"","code":"# A fixed lognormal distribution with mean 5 and sd 1. dist1 <- LogNormal(mean = 1.6, sd = 0.5, max = 20) # Plot discretised distribution with 1 day discretisation window plot(dist1)  # Plot discretised distribution with 0.01 day discretisation window plot(dist1, res = 0.01, cumulative = FALSE)   # An uncertain gamma distribution with shape and rate normally distributed # as Normal(3, 0.5) and Normal(2, 0.5) respectively dist2 <- Gamma(   shape = Normal(3, 0.5),   rate = Normal(2, 0.5),   max = 20 ) plot(dist2)   # Multiple distributions with 0.1 discretisation window and do not plot the # cumulative distribution plot(dist1 + dist2, res = 0.1, cumulative = FALSE)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/plot.epinow.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for epinow — plot.epinow","title":"Plot method for epinow — plot.epinow","text":"plot method class <epinow>.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/plot.epinow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for epinow — plot.epinow","text":"","code":"# S3 method for class 'epinow' plot(x, type = \"summary\", ...)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/plot.epinow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for epinow — plot.epinow","text":"x list output produced epinow(). type character vector indicating name plot return. Defaults  \"summary\" supported options \"infections\", \"reports\", \"R\", \"growth_rate\", \"summary\", \"\". \"\" supplied plots generated. ... Pass additional arguments report_plots","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/plot.epinow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for epinow — plot.epinow","text":"List plots produced report_plots()","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/plot.estimate_infections.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for estimate_infections — plot.estimate_infections","title":"Plot method for estimate_infections — plot.estimate_infections","text":"plot method class <estimate_infections>.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/plot.estimate_infections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for estimate_infections — plot.estimate_infections","text":"","code":"# S3 method for class 'estimate_infections' plot(   x,   type = c(\"summary\", \"infections\", \"reports\", \"R\", \"growth_rate\", \"all\"),   ... )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/plot.estimate_infections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for estimate_infections — plot.estimate_infections","text":"x list output produced estimate_infections type character vector indicating name plot return. Defaults  \"summary\" supported options \"infections\", \"reports\", \"R\", \"growth_rate\", \"summary\", \"\". \"\" supplied plots generated. ... Pass additional arguments report_plots","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/plot.estimate_infections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for estimate_infections — plot.estimate_infections","text":"List plots produced report_plots()","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/plot.estimate_secondary.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for estimate_secondary — plot.estimate_secondary","title":"Plot method for estimate_secondary — plot.estimate_secondary","text":"plot method class \"estimate_secondary\".","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/plot.estimate_secondary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for estimate_secondary — plot.estimate_secondary","text":"","code":"# S3 method for class 'estimate_secondary' plot(x, primary = FALSE, from = NULL, to = NULL, new_obs = NULL, ...)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/plot.estimate_secondary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for estimate_secondary — plot.estimate_secondary","text":"x list output produced estimate_secondary primary Logical, defaults FALSE. primary reports also plot? Date object indicating plot . Date object indicating plot . new_obs <data.frame> containing columns date secondary replace secondary observations stored estimate_secondary output. ... Pass additional arguments plot function. currently use.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/plot.estimate_secondary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for estimate_secondary — plot.estimate_secondary","text":"ggplot object.","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/plot.estimate_truncation.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for estimate_truncation — plot.estimate_truncation","title":"Plot method for estimate_truncation — plot.estimate_truncation","text":"plot() method class <estimate_truncation>. Returns plot faceted dataset used fitting latest observations columns, data observed time (truncated) dots truncation adjusted estimates ribbon.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/plot.estimate_truncation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for estimate_truncation — plot.estimate_truncation","text":"","code":"# S3 method for class 'estimate_truncation' plot(x, ...)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/plot.estimate_truncation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for estimate_truncation — plot.estimate_truncation","text":"x list output produced estimate_truncation() ... Pass additional arguments plot function. currently use.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/plot.estimate_truncation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for estimate_truncation — plot.estimate_truncation","text":"ggplot2 object","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/plot_CrIs.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot EpiNow2 Credible Intervals — plot_CrIs","title":"Plot EpiNow2 Credible Intervals — plot_CrIs","text":"Adds lineranges user specified credible intervals","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/plot_CrIs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot EpiNow2 Credible Intervals — plot_CrIs","text":"","code":"plot_CrIs(plot, CrIs, alpha, linewidth)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/plot_CrIs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot EpiNow2 Credible Intervals — plot_CrIs","text":"plot {ggplot2} plot CrIs Numeric list credible intervals present data. produced extract_CrIs(). alpha Numeric, overall alpha target line range linewidth Numeric, line width default line range.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/plot_CrIs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot EpiNow2 Credible Intervals — plot_CrIs","text":"{ggplot2} plot.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/plot_estimates.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Estimates — plot_estimates","title":"Plot Estimates — plot_estimates","text":"Allows users plot output estimate_infections() easily. future releases may depreciated favour increasing functionality S3 plot methods.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/plot_estimates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Estimates — plot_estimates","text":"","code":"plot_estimates(   estimate,   reported,   ylab,   hline,   obs_as_col = TRUE,   max_plot = 10,   estimate_type = c(\"Estimate\", \"Estimate based on partial data\", \"Forecast\") )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/plot_estimates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Estimates — plot_estimates","text":"estimate <data.table> estimates containing following variables: date, type (must contain \"estimate\", \"estimate based partial data\" optionally \"forecast\"). reported <data.table> reported cases following variables: date, confirm. ylab Character string. Title plot y axis. hline Numeric, supplied gives horizontal intercept indicator line. obs_as_col Logical, defaults TRUE. observed data, supplied, plotted using columns points (linked using line). max_plot Numeric, defaults 10. multiplicative upper bound \\ number cases shown plot. Based maximum number reported cases. estimate_type Character vector indicating type data plot. Default types supported options : \"Estimate\", \"Estimate based partial data\", \"Forecast\".","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/plot_estimates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Estimates — plot_estimates","text":"ggplot2 object","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/plot_estimates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Estimates — plot_estimates","text":"","code":"# get example model results out <- readRDS(system.file(     package = \"EpiNow2\", \"extdata\", \"example_estimate_infections.rds\" ))  # plot infections plot_estimates(   estimate = out$summarised[variable == \"infections\"],   reported = out$observations,   ylab = \"Cases\", max_plot = 2 ) + ggplot2::facet_wrap(~type, scales = \"free_y\")   # plot reported cases estimated via Rt plot_estimates(   estimate = out$summarised[variable == \"reported_cases\"],   reported = out$observations,   ylab = \"Cases\" )   # plot Rt estimates plot_estimates(   estimate = out$summarised[variable == \"R\"],   ylab = \"Effective Reproduction No.\",   hline = 1 )   #' # plot Rt estimates without forecasts plot_estimates(   estimate = out$summarised[variable == \"R\"],   ylab = \"Effective Reproduction No.\",   hline = 1, estimate_type = \"Estimate\" )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/plot_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a Summary of the Latest Results — plot_summary","title":"Plot a Summary of the Latest Results — plot_summary","text":"Used return summary plot across regions (using results generated summarise_results()). May depreciated later releases favour enhanced S3 methods.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/plot_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a Summary of the Latest Results — plot_summary","text":"","code":"plot_summary(summary_results, x_lab = \"Region\", log_cases = FALSE, max_cases)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/plot_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a Summary of the Latest Results — plot_summary","text":"summary_results data.table returned summarise_results() (data object). x_lab character string giving label x axis, defaults region. log_cases Logical, cases shown logged scale. Defaults FALSE. max_cases Numeric, default. maximum number cases plot.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/plot_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a Summary of the Latest Results — plot_summary","text":"{ggplot2} object","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/plus-.dist_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a delay distribution as the sum of two other delay distributions. — +.dist_spec","text":"","code":"# S3 method for class 'dist_spec' e1 + e2"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/plus-.dist_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a delay distribution as the sum of two other delay distributions. — +.dist_spec","text":"e1 first delay distribution (type <dist_spec>) combine. e2 second delay distribution (type <dist_spec>) combine.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/plus-.dist_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a delay distribution as the sum of two other delay distributions. — +.dist_spec","text":"delay distribution representing sum two delays","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/plus-.dist_spec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a delay distribution as the sum of two other delay distributions. — +.dist_spec","text":"","code":"# A fixed lognormal distribution with mean 5 and sd 1. dist1 <- LogNormal(   meanlog = 1.6, sdlog = 1, max = 20 ) dist1 + dist1 #> Composite distribution: #> - lognormal distribution (max: 20): #>   meanlog: #>     1.6 #>   sdlog: #>     1 #> - lognormal distribution (max: 20): #>   meanlog: #>     1.6 #>   sdlog: #>     1  # An uncertain gamma distribution with shape and rate normally distributed # as Normal(3, 0.5) and Normal(2, 0.5) respectively dist2 <- Gamma(   shape = Normal(3, 0.5),   rate = Normal(2, 0.5),   max = 20 ) dist1 + dist2 #> Composite distribution: #> - lognormal distribution (max: 20): #>   meanlog: #>     1.6 #>   sdlog: #>     1 #> - gamma distribution (max: 20): #>   shape: #>     - normal distribution: #>       mean: #>         3 #>       sd: #>         0.5 #>   rate: #>     - normal distribution: #>       mean: #>         2 #>       sd: #>         0.5"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/print.dist_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints the parameters of one or more delay distributions — print.dist_spec","title":"Prints the parameters of one or more delay distributions — print.dist_spec","text":"displays parameters uncertain probability mass functions fixed delay distributions combined passed <dist_spec>.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/print.dist_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints the parameters of one or more delay distributions — print.dist_spec","text":"","code":"# S3 method for class 'dist_spec' print(x, ...)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/print.dist_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints the parameters of one or more delay distributions — print.dist_spec","text":"x <dist_spec> use ... used","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/print.dist_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prints the parameters of one or more delay distributions — print.dist_spec","text":"invisible","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/print.dist_spec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prints the parameters of one or more delay distributions — print.dist_spec","text":"","code":"#' # A fixed lognormal distribution with mean 5 and sd 1. dist1 <- LogNormal(mean = 1.5, sd = 0.5, max = 20) print(dist1) #> - lognormal distribution (max: 20): #>   meanlog: #>     0.35 #>   sdlog: #>     0.32  # An uncertain gamma distribution with shape and rate normally distributed # as Normal(3, 0.5) and Normal(2, 0.5) respectively dist2 <- Gamma(   shape = Normal(3, 0.5), rate = Normal(2, 0.5), max = 20 ) print(dist2) #> - gamma distribution (max: 20): #>   shape: #>     - normal distribution: #>       mean: #>         3 #>       sd: #>         0.5 #>   rate: #>     - normal distribution: #>       mean: #>         2 #>       sd: #>         0.5"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/process_region.html","id":null,"dir":"Reference","previous_headings":"","what":"Process regional estimate — process_region","title":"Process regional estimate — process_region","text":"Internal function removes output required, returns logging information.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/process_region.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process regional estimate — process_region","text":"","code":"process_region(   out,   target_region,   timing,   return_output = TRUE,   return_timing = TRUE,   complete_logger = \"EpiNow2.epinow\" )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/process_region.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process regional estimate — process_region","text":"List output returned epinow() target_region Character string indicating region evaluated timing Output Sys.time() return_output Logical, defaults FALSE. output returned, automatically updates TRUE directory saving specified. return_timing Logical, runtime returned complete_logger Character string indicating logger output completion estimation .","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/process_region.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process regional estimate — process_region","text":"list processed output","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/process_regions.html","id":null,"dir":"Reference","previous_headings":"","what":"Process all Region Estimates — process_regions","title":"Process all Region Estimates — process_regions","text":"Internal function processes output multiple epinow() runs, adds summary logging information.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/process_regions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process all Region Estimates — process_regions","text":"","code":"process_regions(regional_out, regions)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/process_regions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process all Region Estimates — process_regions","text":"regional_out list output multiple runs regional_epinow() regions character vector identifying regions run","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/process_regions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process all Region Estimates — process_regions","text":"list regional estimates successful regional estimates","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/regional_epinow.html","id":null,"dir":"Reference","previous_headings":"","what":"Real-time Rt Estimation, Forecasting and Reporting by Region — regional_epinow","title":"Real-time Rt Estimation, Forecasting and Reporting by Region — regional_epinow","text":"Efficiently runs epinow() across multiple regions efficient manner conducts basic data checks cleaning removing regions fewer non_zero_points unlikely produce reasonable results whilst consuming significant resources. See documentation epinow() information. default arguments supporting input _opts() functions shared across regions (including delays, truncation, Rt settings, stan settings, gaussian process settings). Region specific settings supported passing named list _opts() calls (entry per region) relevant argument. helper function (opts_list()) available facilitate building list. Regions can estimated parallel using {future} package (see setup_future()). progress producing estimates across multiple regions can tracked using {progressr} package. Modify behaviour using progressr::handlers() enable batch setting R_PROGRESSR_ENABLE=TRUE environment variable.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/regional_epinow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Real-time Rt Estimation, Forecasting and Reporting by Region — regional_epinow","text":"","code":"regional_epinow(   data,   generation_time = gt_opts(),   delays = delay_opts(),   truncation = trunc_opts(),   rt = rt_opts(),   backcalc = backcalc_opts(),   gp = gp_opts(),   obs = obs_opts(),   forecast = forecast_opts(),   stan = stan_opts(),   horizon,   CrIs = c(0.2, 0.5, 0.9),   target_folder = NULL,   target_date,   non_zero_points = 2,   output = c(\"regions\", \"summary\", \"samples\", \"plots\", \"latest\"),   return_output = is.null(target_folder),   summary_args = list(),   verbose = FALSE,   logs = tempdir(check = TRUE),   ...,   reported_cases )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/regional_epinow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Real-time Rt Estimation, Forecasting and Reporting by Region — regional_epinow","text":"data <data.frame> confirmed cases (confirm) date (date), region (region). generation_time call gt_opts() (alias generation_time_opts()) defining generation time distribution used. backwards compatibility list summary parameters can also passed. delays call delay_opts() defining delay distributions options. See documentation delay_opts() examples details. truncation call trunc_opts() defining truncation observed data. Defaults trunc_opts(), .e. truncation.  See estimate_truncation() help file approach estimating data dist list element returned estimate_truncation() used truncation argument , thereby propagating uncertainty estimate. rt list options generated rt_opts() defining Rt estimation. Defaults rt_opts(). generate new infections using non-mechanistic model instead renewal equation model, use rt = NULL. non-mechanistic model internally uses setting rt = rt_opts(use_rt = FALSE, future = \"project\", gp_on = \"R0\"). backcalc list options generated backcalc_opts() define back calculation. Defaults backcalc_opts(). gp list options generated gp_opts() define Gaussian process. Defaults gp_opts(). Set NULL disable Gaussian process. obs list options generated obs_opts() defining observation model. Defaults obs_opts(). forecast list options generated forecast_opts() defining forecast opitions. Defaults forecast_opts(). NULL forecasting one. stan list stan options generated stan_opts(). Defaults stan_opts(). Can used override data, init, verbose settings desired. horizon Deprecated; use forecast instead specify predictive horizon CrIs Numeric vector credible intervals calculate. target_folder Character string specifying save results (create present). target_date Date, defaults maximum found data specified. non_zero_points Numeric, minimum number time points non-zero cases region required region evaluated. Defaults 7. output character vector optional output return. Supported options individual regional estimates (\"regions\"),  samples (\"samples\"), plots (\"plots\"), copying individual region dated folder latest folder (target_folder null, set using \"latest\"), stan fit underlying model (\"fit\"), overall summary across regions (\"summary\"). default return samples plots alongside summarised estimates summary statistics. target_folder NULL default also copy results latest folder. return_output Logical, defaults FALSE. output returned, automatically updates TRUE directory saving specified. summary_args list arguments passed regional_summary(). See regional_summary() documentation details. verbose Logical defaults FALSE. Outputs verbose progress messages console epinow(). logs Character path indicating target folder store log information. Defaults temporary directory specified. Default logging can disabled logs set NULL. specifying custom logging setup code setup_default_logging() setup_logging() function sensible place start. ... Pass additional arguments epinow(). See documentation epinow() details. reported_cases Deprecated; use data instead.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/regional_epinow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Real-time Rt Estimation, Forecasting and Reporting by Region — regional_epinow","text":"list output stratified top level regional output across region output summary output","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/regional_epinow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Real-time Rt Estimation, Forecasting and Reporting by Region — regional_epinow","text":"","code":"# \\donttest{ # set number of cores to use old_opts <- options() options(mc.cores = ifelse(interactive(), 4, 1))  # uses example case vector cases <- example_confirmed[1:60] cases <- data.table::rbindlist(list(   data.table::copy(cases)[, region := \"testland\"],   cases[, region := \"realland\"] ))  # run epinow across multiple regions and generate summaries # samples and warmup have been reduced for this example # for more examples, see the \"estimate_infections examples\" vignette def <- regional_epinow(   data = cases,   generation_time = gt_opts(example_generation_time),   delays = delay_opts(example_incubation_period + example_reporting_delay),   rt = rt_opts(prior = LogNormal(mean = 2, sd = 0.2)),   stan = stan_opts(     samples = 100, warmup = 200   ),   verbose = interactive() ) #> INFO [2025-01-17 09:39:34] Producing following optional outputs: regions, summary, samples, plots, latest #> Logging threshold set at INFO for the name logger #> Writing EpiNow2 logs to the console and: #> /tmp/RtmpsfRcjp/regional-epinow/2020-04-21.log. #> Logging threshold set at INFO for the name logger #> Writing EpiNow2.epinow logs to: /tmp/RtmpsfRcjp/epinow/2020-04-21.log. #> INFO [2025-01-17 09:39:34] Reporting estimates using data up to: 2020-04-21 #> INFO [2025-01-17 09:39:34] No target directory specified so returning output #> INFO [2025-01-17 09:39:34] Producing estimates for: testland, realland #> INFO [2025-01-17 09:39:34] Regions excluded: none #> INFO [2025-01-17 09:40:52] Completed estimates for: testland #> INFO [2025-01-17 09:42:06] Completed estimates for: realland #> INFO [2025-01-17 09:42:06] Completed regional estimates #> INFO [2025-01-17 09:42:06] Regions with estimates: 2 #> INFO [2025-01-17 09:42:06] Regions with runtime errors: 0 #> INFO [2025-01-17 09:42:06] Producing summary #> INFO [2025-01-17 09:42:06] No summary directory specified so returning summary output #> INFO [2025-01-17 09:42:06] No target directory specified so returning timings options(old_opts) # }"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/regional_runtimes.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise Regional Runtimes — regional_runtimes","title":"Summarise Regional Runtimes — regional_runtimes","text":"Used internally regional_epinow summarise region run times.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/regional_runtimes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise Regional Runtimes — regional_runtimes","text":"","code":"regional_runtimes(   regional_output = NULL,   target_folder = NULL,   target_date = NULL,   return_output = FALSE )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/regional_runtimes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise Regional Runtimes — regional_runtimes","text":"regional_output list output produced regional_epinow() stored regional list. target_folder Character string specifying save results (create present). target_date character string giving target date extract results (format \"yyyy-mm-dd\"). Defaults latest available estimates. return_output Logical, defaults FALSE. output returned, automatically updates TRUE directory saving specified.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/regional_runtimes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise Regional Runtimes — regional_runtimes","text":"data.table region run times","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/regional_runtimes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise Regional Runtimes — regional_runtimes","text":"","code":"regional_out <- readRDS(system.file(     package = \"EpiNow2\", \"extdata\", \"example_regional_epinow.rds\" )) regional_runtimes(regional_output = regional_out$regional) #> INFO [2025-01-17 09:42:07] No target directory specified so returning timings #>      region  time #>      <char> <num> #> 1: testland  23.5 #> 2: realland  25.5"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/regional_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Regional Summary Output — regional_summary","title":"Regional Summary Output — regional_summary","text":"Used produce summary output either internally regional_epinow externally.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/regional_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regional Summary Output — regional_summary","text":"","code":"regional_summary(   regional_output = NULL,   data,   results_dir = NULL,   summary_dir = NULL,   target_date = NULL,   region_scale = \"Region\",   all_regions = TRUE,   return_output = is.null(summary_dir),   plot = TRUE,   max_plot = 10,   ... )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/regional_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regional Summary Output — regional_summary","text":"regional_output list output produced regional_epinow() stored regional list. data <data.frame> confirmed cases (confirm) date (date), region (region). results_dir optional character string indicating location results directory extract results . summary_dir character string giving directory store summary results. target_date character string giving target date extract results (format \"yyyy-mm-dd\"). Defaults latest available estimates. region_scale character string indicating name give regions summarised. all_regions Logical, defaults TRUE. summary plots regions returned rather just regions interest. return_output Logical, defaults FALSE. output returned, automatically updates TRUE directory saving specified. plot Logical, defaults TRUE. regional summary plots produced. max_plot Numeric, defaults 10. multiplicative upper bound \\ number cases shown plot. Based maximum number reported cases. ... Additional arguments passed report_plots.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/regional_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Regional Summary Output — regional_summary","text":"list summary measures plots","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/regional_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Regional Summary Output — regional_summary","text":"","code":"# get example output from regional_epinow model regional_out <- readRDS(system.file(     package = \"EpiNow2\", \"extdata\", \"example_regional_epinow.rds\" ))  regional_summary(   regional_output = regional_out$regional,   data = regional_out$summary$reported_cases ) #> INFO [2025-01-17 09:42:09] No summary directory specified so returning summary output #> $latest_date #> [1] \"2020-04-21\" #>  #> $results #> $results$estimates #> $results$estimates$summarised #> Indices: <variable>, <region> #>        region       date                 variable  strat     type       median #>        <char>     <Date>                   <char> <char>   <char>        <num> #>   1: testland 2020-02-22                        R   <NA> estimate    2.2278552 #>   2: testland 2020-02-23                        R   <NA> estimate    2.1956881 #>   3: testland 2020-02-24                        R   <NA> estimate    2.1658534 #>   4: testland 2020-02-25                        R   <NA> estimate    2.1167783 #>   5: testland 2020-02-26                        R   <NA> estimate    2.0750111 #>  ---                                                                           #> 718: realland 2020-04-25           reported_cases   <NA> forecast 2392.0000000 #> 719: realland 2020-04-26           reported_cases   <NA> forecast 2657.0000000 #> 720: realland 2020-04-27           reported_cases   <NA> forecast 2412.5000000 #> 721: realland 2020-04-28           reported_cases   <NA> forecast 2025.5000000 #> 722: realland       <NA> reporting_overdispersion   <NA>     <NA>    0.2082416 #>              mean           sd     lower_90     lower_50     lower_20 #>             <num>        <num>        <num>        <num>        <num> #>   1:    2.2339314 1.520613e-01    1.9943896    2.1464357    2.1888984 #>   2:    2.2011751 1.357974e-01    1.9860490    2.1151418    2.1641639 #>   3:    2.1650775 1.237701e-01    1.9774416    2.0817767    2.1299238 #>   4:    2.1259816 1.150807e-01    1.9554507    2.0493088    2.0959586 #>   5:    2.0843620 1.089560e-01    1.9123583    2.0157564    2.0533034 #>  ---                                                                  #> 718: 2538.4700000 9.170918e+02 1380.5500000 1883.0000000 2192.8000000 #> 719: 2805.4900000 1.027315e+03 1467.6500000 2063.5000000 2367.0000000 #> 720: 2584.9950000 1.005459e+03 1390.7000000 1817.7500000 2199.0000000 #> 721: 2267.9850000 1.045847e+03 1066.6000000 1551.0000000 1815.6000000 #> 722:    0.2087912 2.905009e-02    0.1668448    0.1873106    0.1996848 #>          upper_20    upper_50     upper_90 #>             <num>       <num>        <num> #>   1:    2.2601529    2.337053    2.4724029 #>   2:    2.2281404    2.285346    2.4141443 #>   3:    2.1870962    2.248191    2.3675851 #>   4:    2.1441887    2.201463    2.3298029 #>   5:    2.1097129    2.146446    2.2739541 #>  ---                                       #> 718: 2579.2000000 2956.250000 4287.1500000 #> 719: 2963.6000000 3368.250000 4727.5500000 #> 720: 2598.4000000 3079.500000 4566.6000000 #> 721: 2299.2000000 2681.500000 4154.3500000 #> 722:    0.2134048    0.225157    0.2606142 #>  #>  #>  #> $summarised_results #> $summarised_results$table #>      Region New infections per day Expected change in daily reports #>      <char>                 <char>                           <fctr> #> 1: realland    2256 (1316 -- 4280)                Likely decreasing #> 2: testland    2265 (1009 -- 4859)                Likely decreasing #>    Effective reproduction no.          Rate of growth #>                        <char>                  <char> #> 1:         0.89 (0.68 -- 1.2) -0.026 (-0.08 -- 0.032) #> 2:         0.86 (0.56 -- 1.2)  -0.03 (-0.12 -- 0.044) #>    Doubling/halving time (days) #>                          <char> #> 1:             -27 (22 -- -8.6) #> 2:               -23 (16 -- -6) #>  #> $summarised_results$data #>      region            estimate  median    mean      sd lower_90 lower_50 #>      <fctr>              <char>   <num>   <num>   <num>    <num>    <num> #> 1: testland 2265 (1009 -- 4859) 2265.00 2533.00 1474.00  1009.00  1693.00 #> 2: realland 2256 (1316 -- 4280) 2256.00 2445.00  900.00  1316.00  1795.00 #> 3: realland  0.89 (0.68 -- 1.2)    0.89    0.89    0.15     0.68     0.78 #> 4: testland  0.86 (0.56 -- 1.2)    0.86    0.89    0.22     0.56     0.75 #>    lower_20 upper_20 upper_50 upper_90                     metric #>       <num>    <num>    <num>    <num>                     <fctr> #> 1:  2038.00  2527.00  2999.00   4859.0     New infections per day #> 2:  2074.00  2474.00  3010.00   4280.0     New infections per day #> 3:     0.84     0.93     0.99      1.2 Effective reproduction no. #> 4:     0.83     0.93     0.99      1.2 Effective reproduction no. #>    Expected change in daily reports prob_control #>                              <fctr>       <list> #> 1:                Likely decreasing         0.76 #> 2:                Likely decreasing         0.78 #> 3:                Likely decreasing         0.78 #> 4:                Likely decreasing         0.76 #>  #> $summarised_results$regions_by_inc #> [1] \"testland\" \"realland\" #>  #>  #> $summary_plot  #>  #> $summarised_measures #> $summarised_measures$rt #>        region       date  strat     type    median      mean         sd #>        <char>     <Date> <char>   <char>     <num>     <num>      <num> #>   1: realland 2020-02-22   <NA> estimate 2.2213878 2.2347746 0.14365298 #>   2: realland 2020-02-23   <NA> estimate 2.1951619 2.2005588 0.12502097 #>   3: realland 2020-02-24   <NA> estimate 2.1595587 2.1642923 0.11035496 #>   4: realland 2020-02-25   <NA> estimate 2.1184630 2.1261311 0.09991759 #>   5: realland 2020-02-26   <NA> estimate 2.0795528 2.0862831 0.09366188 #>  ---                                                                    #> 130: testland 2020-04-24   <NA> forecast 0.8638174 0.8891564 0.21693035 #> 131: testland 2020-04-25   <NA> forecast 0.8638174 0.8891564 0.21693035 #> 132: testland 2020-04-26   <NA> forecast 0.8638174 0.8891564 0.21693035 #> 133: testland 2020-04-27   <NA> forecast 0.8638174 0.8891564 0.21693035 #> 134: testland 2020-04-28   <NA> forecast 0.8638174 0.8891564 0.21693035 #>       lower_90  lower_50  lower_20  upper_20  upper_50 upper_90 #>          <num>     <num>     <num>     <num>     <num>    <num> #>   1: 2.0080394 2.1445312 2.2035322 2.2520485 2.3249809 2.471421 #>   2: 1.9973309 2.1164082 2.1756078 2.2170764 2.2774939 2.411933 #>   3: 1.9869852 2.0906040 2.1394286 2.1866339 2.2370087 2.355639 #>   4: 1.9632718 2.0626986 2.0985240 2.1487508 2.1970850 2.297410 #>   5: 1.9299430 2.0225981 2.0592937 2.1069238 2.1581354 2.239102 #>  ---                                                            #> 130: 0.5580703 0.7549769 0.8317801 0.9277327 0.9941752 1.216937 #> 131: 0.5580703 0.7549769 0.8317801 0.9277327 0.9941752 1.216937 #> 132: 0.5580703 0.7549769 0.8317801 0.9277327 0.9941752 1.216937 #> 133: 0.5580703 0.7549769 0.8317801 0.9277327 0.9941752 1.216937 #> 134: 0.5580703 0.7549769 0.8317801 0.9277327 0.9941752 1.216937 #>  #> $summarised_measures$growth_rate #>        region       date  strat     type      median        mean          sd #>        <char>     <Date> <char>   <char>       <num>       <num>       <num> #>   1: realland 2020-02-22   <NA> estimate  0.19670713  0.19702298 0.017475793 #>   2: realland 2020-02-23   <NA> estimate  0.19230966  0.19276038 0.014831612 #>   3: realland 2020-02-24   <NA> estimate  0.18799783  0.18816206 0.012477542 #>   4: realland 2020-02-25   <NA> estimate  0.18323593  0.18324342 0.010475454 #>   5: realland 2020-02-26   <NA> estimate  0.17873129  0.17802654 0.008920428 #>  ---                                                                         #> 130: testland 2020-04-24   <NA> forecast -0.03025107 -0.02883813 0.049137326 #> 131: testland 2020-04-25   <NA> forecast -0.03025107 -0.02883813 0.049137326 #> 132: testland 2020-04-26   <NA> forecast -0.03025107 -0.02883813 0.049137326 #> 133: testland 2020-04-27   <NA> forecast -0.03025107 -0.02883813 0.049137326 #> 134: testland 2020-04-28   <NA> forecast -0.03025107 -0.02883813 0.049137326 #>        lower_90    lower_50    lower_20    upper_20     upper_50   upper_90 #>           <num>       <num>       <num>       <num>        <num>      <num> #>   1:  0.1694198  0.18579690  0.19230266  0.20128757  0.207962621 0.22250668 #>   2:  0.1692765  0.18344874  0.18869314  0.19592401  0.201936144 0.21559405 #>   3:  0.1684119  0.18020399  0.18525607  0.19048171  0.195396700 0.20757162 #>   4:  0.1671651  0.17672138  0.18139445  0.18545255  0.189353977 0.20004153 #>   5:  0.1632953  0.17304201  0.17649287  0.17987361  0.183476456 0.19240871 #>  ---                                                                        #> 130: -0.1160769 -0.05673017 -0.03851555 -0.01561591 -0.001308497 0.04368505 #> 131: -0.1160769 -0.05673017 -0.03851555 -0.01561591 -0.001308497 0.04368505 #> 132: -0.1160769 -0.05673017 -0.03851555 -0.01561591 -0.001308497 0.04368505 #> 133: -0.1160769 -0.05673017 -0.03851555 -0.01561591 -0.001308497 0.04368505 #> 134: -0.1160769 -0.05673017 -0.03851555 -0.01561591 -0.001308497 0.04368505 #>  #> $summarised_measures$cases_by_infection #>        region       date  strat     type median   mean     sd lower_90 lower_50 #>        <char>     <Date> <char>   <char>  <num>  <num>  <num>    <num>    <num> #>   1: realland 2020-02-22   <NA> estimate  157.9  158.1   12.1    140.1    149.9 #>   2: realland 2020-02-23   <NA> estimate  200.7  200.8   14.4    178.2    190.6 #>   3: realland 2020-02-24   <NA> estimate  256.9  256.5   17.9    227.6    243.9 #>   4: realland 2020-02-25   <NA> estimate  325.7  326.4   22.6    289.2    311.6 #>   5: realland 2020-02-26   <NA> estimate  410.6  412.5   28.4    364.3    393.4 #>  ---                                                                            #> 130: testland 2020-04-24   <NA> forecast 2022.2 2575.0 2587.5    645.7   1388.8 #> 131: testland 2020-04-25   <NA> forecast 1942.8 2621.9 3158.8    554.9   1299.6 #> 132: testland 2020-04-26   <NA> forecast 1866.4 2689.1 3878.7    476.5   1216.3 #> 133: testland 2020-04-27   <NA> forecast 1797.2 2780.0 4788.5    408.9   1136.0 #> 134: testland 2020-04-28   <NA> forecast 1729.0 2898.9 5939.7    356.0   1060.1 #>      lower_20 upper_20 upper_50 upper_90 #>         <num>    <num>    <num>    <num> #>   1:    153.9    161.3    165.0    181.7 #>   2:    196.9    205.1    209.1    228.6 #>   3:    252.0    261.5    267.2    287.5 #>   4:    320.8    331.5    340.5    363.8 #>   5:    404.9    418.6    431.1    462.0 #>  ---                                     #> 130:   1727.4   2425.3   3010.5   5543.2 #> 131:   1639.6   2383.3   3000.3   5805.5 #> 132:   1567.0   2319.7   3003.9   6095.3 #> 133:   1506.0   2257.6   3002.5   6400.0 #> 134:   1440.7   2197.0   3015.6   6720.4 #>  #> $summarised_measures$cases_by_report #>        region       date  strat     type median   mean     sd lower_90 lower_50 #>        <char>     <Date> <char>   <char>  <num>  <num>  <num>    <num>    <num> #>   1: realland 2020-02-22   <NA> estimate   66.5   68.2   18.9     39.0     56.0 #>   2: realland 2020-02-23   <NA> estimate   77.5   80.5   21.2     52.0     65.8 #>   3: realland 2020-02-24   <NA> estimate   75.0   78.4   20.8     47.0     64.0 #>   4: realland 2020-02-25   <NA> estimate   75.0   76.4   20.0     46.0     63.0 #>   5: realland 2020-02-26   <NA> estimate   76.0   76.3   20.7     44.9     62.0 #>  ---                                                                            #> 130: testland 2020-04-24   <NA> forecast 2908.0 3025.3 1057.0   1696.5   2242.2 #> 131: testland 2020-04-25   <NA> forecast 2364.5 2618.8 1147.3   1362.3   1859.5 #> 132: testland 2020-04-26   <NA> forecast 2583.0 2920.1 1456.9   1341.3   1947.0 #> 133: testland 2020-04-27   <NA> forecast 2418.5 2703.5 1844.6   1098.5   1681.0 #> 134: testland 2020-04-28   <NA> forecast 2029.5 2523.7 2066.1    853.9   1451.2 #>      lower_20 upper_20 upper_50 upper_90 #>         <num>    <num>    <num>    <num> #>   1:     63.0     71.0     78.0    106.0 #>   2:     72.6     83.0     94.2    118.0 #>   3:     71.0     81.0     91.0    116.0 #>   4:     71.0     79.0     89.0    109.1 #>   5:     70.6     80.0     87.0    110.1 #>  ---                                     #> 130:   2655.2   3095.2   3564.0   4892.2 #> 131:   2176.2   2551.8   3058.2   4790.4 #> 132:   2346.4   2891.8   3506.8   5633.9 #> 133:   2070.2   2727.8   3118.0   5002.1 #> 134:   1905.4   2331.8   2786.2   4905.3 #>  #>  #> $reported_cases #> Index: <region> #>            date confirm   region #>          <Date>   <num>   <char> #>   1: 2020-02-22      14 testland #>   2: 2020-02-23      62 testland #>   3: 2020-02-24      53 testland #>   4: 2020-02-25      97 testland #>   5: 2020-02-26      93 testland #>  ---                             #> 116: 2020-04-17    3786 realland #> 117: 2020-04-18    3493 realland #> 118: 2020-04-19    3491 realland #> 119: 2020-04-20    3047 realland #> 120: 2020-04-21    2256 realland #>  #> $high_plots #> $high_plots$infections  #>  #> $high_plots$reports  #>  #> $high_plots$R  #>  #> $high_plots$growth_rate  #>  #>  #> $plots #> $plots$infections  #>  #> $plots$reports  #>  #> $plots$R  #>  #> $plots$growth_rate  #>  #>"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/report_cases.html","id":null,"dir":"Reference","previous_headings":"","what":"Report case counts by date of report — report_cases","title":"Report case counts by date of report — report_cases","text":"Convolves latent infections reported cases via observation model. Likely removed/replaced later releases functionality drawing stan implementation.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/report_cases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report case counts by date of report — report_cases","text":"","code":"report_cases(   case_estimates,   case_forecast = NULL,   delays,   type = \"sample\",   reporting_effect,   CrIs = c(0.2, 0.5, 0.9) )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/report_cases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report case counts by date of report — report_cases","text":"case_estimates data.table case estimates following variables: date, sample, cases case_forecast data.table case forecasts following variables: date, sample, cases. supplied default incorporate forecasts. delays call delay_opts() defining delay distributions options. See documentation delay_opts() examples details. type Character string indicating method use transform counts. Supports either \"sample\"  approximates sampling \"median\" shift median distribution. reporting_effect data.table giving weekly reporting effect following variables: sample (must nowcast), effect (numeric scaling factor weekday),day (numeric 1 - 7 (1 = Monday 7 = Sunday)). supplied weekly reporting effect assumed. CrIs Numeric vector credible intervals calculate.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/report_cases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report case counts by date of report — report_cases","text":"list data.tables. first entry contains following variables sample, date cases second summarised across samples.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/report_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Report plots — report_plots","title":"Report plots — report_plots","text":"Returns key summary plots estimates. May depreciated later releases current S3 methods enhanced.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/report_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report plots — report_plots","text":"","code":"report_plots(summarised_estimates, reported, target_folder = NULL, ...)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/report_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report plots — report_plots","text":"summarised_estimates data.table summarised estimates containing following variables: variable, median, bottom, top. also contain following estimates: R, infections, reported_cases_rt, r (rate growth). reported <data.table> reported cases following variables: date, confirm. target_folder Character string specifying save results (create present). ... Additional arguments passed plot_estimates().","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/report_plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report plots — report_plots","text":"named list ggplot2 objects, list(infections, reports, R, growth_rate, summary), correspond summary combination (last item) leading items.","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/report_plots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Report plots — report_plots","text":"","code":"# get example output form estimate_infections out <- readRDS(system.file(     package = \"EpiNow2\", \"extdata\", \"example_estimate_infections.rds\" ))  # plot infections plots <- report_plots(   summarised_estimates = out$summarised,   reported = out$observations ) plots #> $infections  #>  #> $reports  #>  #> $R  #>  #> $growth_rate  #>  #> $summary  #>"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/report_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide Summary Statistics for Estimated Infections and Rt — report_summary","title":"Provide Summary Statistics for Estimated Infections and Rt — report_summary","text":"Creates snapshot summary estimates. May removed later releases S3 methods enhanced.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/report_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide Summary Statistics for Estimated Infections and Rt — report_summary","text":"","code":"report_summary(   summarised_estimates,   rt_samples,   target_folder = NULL,   return_numeric = FALSE )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/report_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide Summary Statistics for Estimated Infections and Rt — report_summary","text":"summarised_estimates data.table summarised estimates containing following variables: variable, median, bottom, top. contain following estimates: R, infections, r (rate growth). rt_samples data.table containing Rt samples following variables: sample value. target_folder Character string specifying save results (create present). return_numeric numeric summary information returned.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/report_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide Summary Statistics for Estimated Infections and Rt — report_summary","text":"data.table containing formatted numeric summary measures","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/rstan_opts.html","id":null,"dir":"Reference","previous_headings":"","what":"Rstan Options — rstan_opts","title":"Rstan Options — rstan_opts","text":"Deprecated; specify options stan_opts() instead.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/rstan_opts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rstan Options — rstan_opts","text":"","code":"rstan_opts(object = NULL, samples = 2000, method = c(\"sampling\", \"vb\"), ...)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/rstan_opts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rstan Options — rstan_opts","text":"object Stan model object. default uses compiled package default. samples Numeric, default 2000. Overall number posterior samples. using multiple chains iterations per chain samples / chains. method character string, defaulting sampling. Currently supports rstan::sampling() (\"sampling\") rstan::vb(). ... Additional parameters pass  underlying option functions.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/rstan_opts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rstan Options — rstan_opts","text":"list arguments pass appropriate rstan functions.","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/rstan_sampling_opts.html","id":null,"dir":"Reference","previous_headings":"","what":"Rstan Sampling Options — rstan_sampling_opts","title":"Rstan Sampling Options — rstan_sampling_opts","text":"Deprecated; use stan_sampling_opts() instead.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/rstan_sampling_opts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rstan Sampling Options — rstan_sampling_opts","text":"","code":"rstan_sampling_opts(   cores = getOption(\"mc.cores\", 1L),   warmup = 250,   samples = 2000,   chains = 4,   control = list(),   save_warmup = FALSE,   seed = as.integer(runif(1, 1, 1e+08)),   future = FALSE,   max_execution_time = Inf,   ... )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/rstan_sampling_opts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rstan Sampling Options — rstan_sampling_opts","text":"cores Number cores use executing chains parallel, defaults 1 recommended set mc.cores option many processors hardware RAM allow (number chains). warmup Numeric, defaults 250. Number warmup samples per chain. samples Numeric, default 2000. Overall number posterior samples. using multiple chains iterations per chain samples / chains. chains Numeric, defaults 4. Number MCMC chains use. control List, defaults empty. control parameters pass underlying rstan function. default adapt_delta = 0.9 max_treedepth = 12 though settings can overwritten. save_warmup Logical, defaults FALSE. warmup progress saved. seed Numeric, defaults uniform random number 1 1e8. Seed sampling process. future Logical, defaults FALSE. stan chains run parallel using future. allows users chains fail gracefully (.e combined max_execution_time). combined call future::plan(). max_execution_time Numeric, defaults Inf (seconds). set wil kill processing chain finished within specified timeout. 2 chains finish successfully estimates still returned. less 2 chains return within allowed time estimation fail informative error. ... Additional parameters pass rstan::sampling().","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/rstan_sampling_opts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rstan Sampling Options — rstan_sampling_opts","text":"list arguments pass rstan::sampling().","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/rstan_vb_opts.html","id":null,"dir":"Reference","previous_headings":"","what":"Rstan Variational Bayes Options — rstan_vb_opts","title":"Rstan Variational Bayes Options — rstan_vb_opts","text":"Deprecated; use stan_vb_opts() instead.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/rstan_vb_opts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rstan Variational Bayes Options — rstan_vb_opts","text":"","code":"rstan_vb_opts(samples = 2000, trials = 10, iter = 10000, ...)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/rstan_vb_opts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rstan Variational Bayes Options — rstan_vb_opts","text":"samples Numeric, default 2000. Overall number approximate posterior samples. trials Numeric, defaults 10. Number attempts use rstan::vb()] failing. iter Numeric, defaulting 10000. Number iterations use rstan::vb(). ... Additional parameters pass rstan::vb() cmdstanr::variational(), depending chosen backend.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/rstan_vb_opts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rstan Variational Bayes Options — rstan_vb_opts","text":"list arguments pass rstan::vb().","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/rt_opts.html","id":null,"dir":"Reference","previous_headings":"","what":"Time-Varying Reproduction Number Options — rt_opts","title":"Time-Varying Reproduction Number Options — rt_opts","text":"Defines list specifying optional arguments time-varying reproduction number. Custom settings can supplied override defaults.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/rt_opts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time-Varying Reproduction Number Options — rt_opts","text":"","code":"rt_opts(   prior = LogNormal(mean = 1, sd = 1),   use_rt = TRUE,   rw = 0,   use_breakpoints = TRUE,   future = \"latest\",   gp_on = c(\"R_t-1\", \"R0\"),   pop = 0 )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/rt_opts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time-Varying Reproduction Number Options — rt_opts","text":"prior <dist_spec> giving prior initial reproduciton number. Ignored use_rt FALSE. Defaults LogNormal distributin mean 1 standard deviation 1: LogNormal(mean = 1, sd = 1). lower limit 0 enforced automatically. use_rt Logical, defaults TRUE. Rt used generate infections hence reported cases. rw Numeric step size random walk, defaults 0. specify weekly random walk set rw = 7. custom break point settings consider passing breakpoints variable outlined next section. use_breakpoints Logical, defaults TRUE. break points used present breakpoint variable input data. Break points defined 1 present otherwise 0. default breakpoints fit jointly global non-parametric effect represent conservative estimate break point changes (alter setting gp = NULL). future character string integer. argument indicates set future Rt values. Supported options project using Rt model (\"project\"), use latest estimate based partial data (\"latest\"), use latest estimate based data 50% complete (\"estimate\"). integer supplied Rt estimate many days future (past negative) past used forwards time. gp_on Character string, defaulting  \"R_t-1\". Indicates Gaussian process, use, applied Rt. Currently supported options applying Gaussian process last estimated Rt (.e Rt = Rt-1 * GP), applying Gaussian process global mean (.e Rt = R0 * GP). produced comparable results data sparse method relying global mean revert real time estimates, may desirable. pop Integer, defaults 0. Susceptible population initially present. Used adjust Rt estimates otherwise fixed based proportion population susceptible. set 0 population adjustment done.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/rt_opts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Time-Varying Reproduction Number Options — rt_opts","text":"<rt_opts> object settings defining time-varying reproduction number.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/rt_opts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Time-Varying Reproduction Number Options — rt_opts","text":"","code":"# default settings rt_opts() #> $use_rt #> [1] TRUE #>  #> $rw #> [1] 0 #>  #> $use_breakpoints #> [1] TRUE #>  #> $future #> [1] \"latest\" #>  #> $pop #> [1] 0 #>  #> $gp_on #> [1] \"R_t-1\" #>  #> $prior #> - lognormal distribution: #>   meanlog: #>     -0.35 #>   sdlog: #>     0.83 #>  #> attr(,\"class\") #> [1] \"rt_opts\" \"list\"     # add a custom length scale rt_opts(prior = LogNormal(mean = 2, sd = 1)) #> $use_rt #> [1] TRUE #>  #> $rw #> [1] 0 #>  #> $use_breakpoints #> [1] TRUE #>  #> $future #> [1] \"latest\" #>  #> $pop #> [1] 0 #>  #> $gp_on #> [1] \"R_t-1\" #>  #> $prior #> - lognormal distribution: #>   meanlog: #>     0.58 #>   sdlog: #>     0.47 #>  #> attr(,\"class\") #> [1] \"rt_opts\" \"list\"     # add a weekly random walk rt_opts(rw = 7) #> $use_rt #> [1] TRUE #>  #> $rw #> [1] 7 #>  #> $use_breakpoints #> [1] TRUE #>  #> $future #> [1] \"latest\" #>  #> $pop #> [1] 0 #>  #> $gp_on #> [1] \"R_t-1\" #>  #> $prior #> - lognormal distribution: #>   meanlog: #>     -0.35 #>   sdlog: #>     0.83 #>  #> attr(,\"class\") #> [1] \"rt_opts\" \"list\""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/run_region.html","id":null,"dir":"Reference","previous_headings":"","what":"Run epinow with Regional Processing Code — run_region","title":"Run epinow with Regional Processing Code — run_region","text":"Internal function handles calling epinow(). Future work extend function better handle stan logs allow user modify settings regions.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/run_region.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run epinow with Regional Processing Code — run_region","text":"","code":"run_region(   target_region,   generation_time,   delays,   truncation,   rt,   backcalc,   gp,   obs,   stan,   horizon,   CrIs,   data,   target_folder,   target_date,   return_output,   output,   complete_logger,   verbose,   progress_fn = NULL,   ... )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/run_region.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run epinow with Regional Processing Code — run_region","text":"target_region Character string indicating region evaluated generation_time call gt_opts() (alias generation_time_opts()) defining generation time distribution used. backwards compatibility list summary parameters can also passed. delays call delay_opts() defining delay distributions options. See documentation delay_opts() examples details. truncation call trunc_opts() defining truncation observed data. Defaults trunc_opts(), .e. truncation.  See estimate_truncation() help file approach estimating data dist list element returned estimate_truncation() used truncation argument , thereby propagating uncertainty estimate. rt list options generated rt_opts() defining Rt estimation. Defaults rt_opts(). generate new infections using non-mechanistic model instead renewal equation model, use rt = NULL. non-mechanistic model internally uses setting rt = rt_opts(use_rt = FALSE, future = \"project\", gp_on = \"R0\"). backcalc list options generated backcalc_opts() define back calculation. Defaults backcalc_opts(). gp list options generated gp_opts() define Gaussian process. Defaults gp_opts(). Set NULL disable Gaussian process. obs list options generated obs_opts() defining observation model. Defaults obs_opts(). stan list stan options generated stan_opts(). Defaults stan_opts(). Can used override data, init, verbose settings desired. horizon Deprecated; use forecast instead specify predictive horizon CrIs Numeric vector credible intervals calculate. data <data.frame> confirmed cases (confirm) date (date), region (region). target_folder Character string specifying save results (create present). target_date Date, defaults maximum found data specified. return_output Logical, defaults FALSE. output returned, automatically updates TRUE directory saving specified. output character vector optional output return. Supported options individual regional estimates (\"regions\"),  samples (\"samples\"), plots (\"plots\"), copying individual region dated folder latest folder (target_folder null, set using \"latest\"), stan fit underlying model (\"fit\"), overall summary across regions (\"summary\"). default return samples plots alongside summarised estimates summary statistics. target_folder NULL default also copy results latest folder. complete_logger Character string indicating logger output completion estimation . verbose Logical defaults FALSE. Outputs verbose progress messages console epinow(). progress_fn Function returned progressr::progressor(). Allows use  progress bar. NULL (default), progress bar used. ... Pass additional arguments epinow(). See documentation epinow() details.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/run_region.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run epinow with Regional Processing Code — run_region","text":"list processed output produced process_region()","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/sample_approx_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Approximate Sampling a Distribution using Counts — sample_approx_dist","title":"Approximate Sampling a Distribution using Counts — sample_approx_dist","text":"Deprecated; Convolves cases PMF function.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/sample_approx_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Approximate Sampling a Distribution using Counts — sample_approx_dist","text":"","code":"sample_approx_dist(   cases = NULL,   dist_fn = NULL,   max_value = 120,   earliest_allowed_mapped = NULL,   direction = \"backwards\",   type = \"sample\",   truncate_future = TRUE )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/sample_approx_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Approximate Sampling a Distribution using Counts — sample_approx_dist","text":"cases <data.frame> cases (date order) following variables: date cases. dist_fn Function takes two arguments first numeric second logical (defined dist). return probability density sample defined distribution. See examples . max_value Numeric, maximum value allow. Defaults 120 days earliest_allowed_mapped character string representing date (\"2020-01-01\"). Indicates earliest allowed mapped value. direction Character string, defato \"backwards\". Direction map cases. Supports either \"backwards\" \"forwards\". type Character string indicating method use transform counts. Supports either \"sample\"  approximates sampling \"median\" shift median distribution. truncate_future Logical, cases truncated occur first date reported data. Defaults TRUE.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/sample_approx_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Approximate Sampling a Distribution using Counts — sample_approx_dist","text":"<data.table> cases date onset","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/save_estimate_infections.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Estimated Infections — save_estimate_infections","title":"Save Estimated Infections — save_estimate_infections","text":"Saves output estimate_infections target directory.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/save_estimate_infections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Estimated Infections — save_estimate_infections","text":"","code":"save_estimate_infections(   estimates,   target_folder = NULL,   samples = TRUE,   return_fit = TRUE )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/save_estimate_infections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Estimated Infections — save_estimate_infections","text":"estimates List data frames output estimate_infections target_folder Character string specifying save results (create present). samples Logical, defaults TRUE. samples saved return_fit Logical, defaults TRUE. fit stan object returned.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/save_estimate_infections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save Estimated Infections — save_estimate_infections","text":"return value, called side effects","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/save_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Observed Data — save_input","title":"Save Observed Data — save_input","text":"Saves observed data target location given.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/save_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Observed Data — save_input","text":"","code":"save_input(data, target_folder)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/save_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Observed Data — save_input","text":"data <data.frame> confirmed cases (confirm) date (date). confirm must numeric date must date format. Optionally can also logical accumulate column indicates whether data added next data point. useful modelling e.g. weekly incidence data. See also fill_missing() function helps add accumulate column desired properties dealing non-daily data. accumulation done happens truncation specified truncation argument. target_folder Character string specifying save results (create present).","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/save_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save Observed Data — save_input","text":"return value, called side effects","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/sd.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the standard deviation of one or more delay distribution — sd","title":"Returns the standard deviation of one or more delay distribution — sd","text":"works standard deviation (parametric / nonparametric) delay distributions combined passed <dist_spec>. parameters uncertain NA returned.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/sd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the standard deviation of one or more delay distribution — sd","text":"","code":"# S3 method for class 'dist_spec' sd(x, ...)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/sd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the standard deviation of one or more delay distribution — sd","text":"x <dist_spec> use","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/sd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the standard deviation of one or more delay distribution — sd","text":"vector standard deviations.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/sd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns the standard deviation of one or more delay distribution — sd","text":"","code":"if (FALSE) { # \\dontrun{ # A fixed lognormal distribution with sd 5 and sd 1. dist1 <- LogNormal(mean = 5, sd = 1, max = 20) sd(dist1)  # A gamma distribution with mean 3 and sd 2 dist2 <- Gamma(mean = 3, sd = 2) sd(dist2)  # The sd of the sum of two distributions sd(dist1 + dist2) } # }"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/secondary_opts.html","id":null,"dir":"Reference","previous_headings":"","what":"Secondary Reports Options — secondary_opts","title":"Secondary Reports Options — secondary_opts","text":"Returns list options defining secondary model used estimate_secondary(). model combination convolution previously observed primary reports combined current primary reports (either additive subtractive). can optionally cumulative. See documentation type sensible options cover use cases returned values secondary_opts() currently supported options.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/secondary_opts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Secondary Reports Options — secondary_opts","text":"","code":"secondary_opts(type = c(\"incidence\", \"prevalence\"), ...)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/secondary_opts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Secondary Reports Options — secondary_opts","text":"type character string indicating type observation secondary reports . Options include: \"incidence\": Assumes secondary reports equal convolution previously observed primary reported cases. example application deaths infectious disease predicted reported cases disease (estimated infections). \"prevalence\": Assumes secondary reports cumulative defined currently observed primary reports minus convolution secondary reports. example application hospital bed usage predicted hospital admissions. ... Overwrite options defined type. See returned values options can passed.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/secondary_opts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Secondary Reports Options — secondary_opts","text":"<secondary_opts> object binary options summarising secondary model used estimate_secondary(). Options returned cumulative (secondary report cumulative), historic (convolution primary reported cases used predict secondary reported cases), primary_hist_additive (historic convolution primary reported cases additive subtractive), current (currently observed primary reported cases contribute current secondary reported cases), primary_current_additive (current primary reported cases additive subtractive).","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/secondary_opts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Secondary Reports Options — secondary_opts","text":"","code":"# incidence model secondary_opts(\"incidence\") #> $cumulative #> [1] 0 #>  #> $historic #> [1] 1 #>  #> $primary_hist_additive #> [1] 1 #>  #> $current #> [1] 0 #>  #> $primary_current_additive #> [1] 0 #>  #> attr(,\"class\") #> [1] \"secondary_opts\" \"list\"            # prevalence model secondary_opts(\"prevalence\") #> $cumulative #> [1] 1 #>  #> $historic #> [1] 1 #>  #> $primary_hist_additive #> [1] 0 #>  #> $current #> [1] 1 #>  #> $primary_current_additive #> [1] 1 #>  #> attr(,\"class\") #> [1] \"secondary_opts\" \"list\""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/set_dt_single_thread.html","id":null,"dir":"Reference","previous_headings":"","what":"Set to Single Threading — set_dt_single_thread","title":"Set to Single Threading — set_dt_single_thread","text":"function sets threads used {data.table} 1 parent function restores initial {data.table} threads function exits. primarily used internal function inside functions generally used .","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/set_dt_single_thread.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set to Single Threading — set_dt_single_thread","text":"","code":"set_dt_single_thread()"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/set_dt_single_thread.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set to Single Threading — set_dt_single_thread","text":"environment parent frame named \"dt_settings\"","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/set_dt_single_thread.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set to Single Threading — set_dt_single_thread","text":"","code":"# \\donttest{ data.table::setDTthreads(2) test_function <- function() {   set_dt_single_thread()    print(data.table::getDTthreads()) } test_function() #> [1] 1 data.table::getDTthreads() #> [1] 2 # }"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/setup_default_logging.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup Default Logging — setup_default_logging","title":"Setup Default Logging — setup_default_logging","text":"Sets default logging. Usage logging currently explored current setup log stan errors progress.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/setup_default_logging.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup Default Logging — setup_default_logging","text":"","code":"setup_default_logging(   logs = tempdir(check = TRUE),   mirror_epinow = FALSE,   target_date = NULL )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/setup_default_logging.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup Default Logging — setup_default_logging","text":"logs Character path indicating target folder store log information. Defaults temporary directory specified. Default logging can disabled logs set NULL. specifying custom logging setup code setup_default_logging() setup_logging() function sensible place start. mirror_epinow Logical, defaults FALSE. internal logging returned epinow() console. target_date Date, defaults maximum found data specified.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/setup_default_logging.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup Default Logging — setup_default_logging","text":"return value, called side effects","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/setup_default_logging.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Setup Default Logging — setup_default_logging","text":"","code":"setup_default_logging() #> Logging threshold set at INFO for the name logger #> Writing EpiNow2 logs to the console and: #> /tmp/RtmpsfRcjp/regional-epinow/latest.log. #> Logging threshold set at INFO for the name logger #> Writing EpiNow2.epinow logs to: /tmp/RtmpsfRcjp/epinow/latest.log."},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/setup_dt.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to Data Table — setup_dt","title":"Convert to Data Table — setup_dt","text":"Convenience function sets number {data.table} cores 1 maps input {data.table}","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/setup_dt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to Data Table — setup_dt","text":"","code":"setup_dt(data)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/setup_dt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to Data Table — setup_dt","text":"data <data.frame> confirmed cases (confirm) date (date). confirm must numeric date must date format. Optionally can also logical accumulate column indicates whether data added next data point. useful modelling e.g. weekly incidence data. See also fill_missing() function helps add accumulate column desired properties dealing non-daily data. accumulation done happens truncation specified truncation argument.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/setup_dt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to Data Table — setup_dt","text":"data table","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/setup_future.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up Future Backend — setup_future","title":"Set up Future Backend — setup_future","text":"utility function aims streamline set required future backend sensible defaults users regional_epinow(). advanced users recommended setup {future} backend based available resources. Running requires {future} package installed.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/setup_future.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up Future Backend — setup_future","text":"","code":"setup_future(   data,   strategies = c(\"multisession\", \"multisession\"),   min_cores_per_worker = 4 )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/setup_future.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up Future Backend — setup_future","text":"data <data.frame> confirmed cases (confirm) date (date), region (region). strategies vector length 1 2 strategies pass future::plan(). Nesting parallelisation top level . default set nesting parallelisation using future::multisession() (future::multicore() likely faster option supported platforms). single level parallelisation use single strategy future::plan() directly. See future::plan() options. min_cores_per_worker Numeric, minimum number cores per worker. Defaults 4 assumes 4 MCMC chains use per region.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/setup_future.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up Future Backend — setup_future","text":"Numeric number cores use per worker. greater 1 pass stan_args = list(cores = \"output setup future\") use future = TRUE. single strategy used nothing returned.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/setup_logging.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup Logging — setup_logging","title":"Setup Logging — setup_logging","text":"Sets {futile.logger} logging, integrated {EpiNow2}. See documentation {futile.logger} full details. default {EpiNow2} prints logs \"INFO\" level returns console. Usage logging currently explored current setup log stan errors progress.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/setup_logging.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup Logging — setup_logging","text":"","code":"setup_logging(   threshold = \"INFO\",   file = NULL,   mirror_to_console = FALSE,   name = \"EpiNow2\" )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/setup_logging.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup Logging — setup_logging","text":"threshold Character string indicating logging level see (?futile.logger details available options). Defaults \"INFO\". file Character string indicating path save logs . default logs written console. mirror_to_console Logical, defaults FALSE. saving logs file also duplicated console. name Character string defaulting EpiNow2. indicates name logger setup. default logger EpiNow2 called EpiNow2. Nested options include: Epinow2.epinow controls logging epinow() nested functions, EpiNow2.epinow.estimate_infections (logging estimate_infections(), EpiNow2.epinow.estimate_infections.fit (logging fitting functions).","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/setup_logging.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup Logging — setup_logging","text":"Nothing","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/setup_target_folder.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup Target Folder for Saving — setup_target_folder","title":"Setup Target Folder for Saving — setup_target_folder","text":"Sets folders saving results","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/setup_target_folder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup Target Folder for Saving — setup_target_folder","text":"","code":"setup_target_folder(target_folder = NULL, target_date)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/setup_target_folder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup Target Folder for Saving — setup_target_folder","text":"target_folder Character string specifying save results (create present). target_date Date, defaults maximum found data specified.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/setup_target_folder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup Target Folder for Saving — setup_target_folder","text":"list containing path dated folder latest folder","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/simulate_infections.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate infections using the renewal equation — simulate_infections","title":"Simulate infections using the renewal equation — simulate_infections","text":"Simulations done given initial infections , potentially time-varying, reproduction numbers. Delays parameters observation model can specified using options estimate_infections().","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/simulate_infections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate infections using the renewal equation — simulate_infections","text":"","code":"simulate_infections(   estimates,   R,   initial_infections,   day_of_week_effect = NULL,   generation_time = generation_time_opts(),   delays = delay_opts(),   truncation = trunc_opts(),   obs = obs_opts(),   CrIs = c(0.2, 0.5, 0.9),   backend = \"rstan\",   seeding_time = NULL,   pop = 0,   ... )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/simulate_infections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate infections using the renewal equation — simulate_infections","text":"estimates deprecated; use forecast_infections() instead R data frame reproduction numbers (column R) date (column date). Column R must numeric date must date format. days first last day date present, assumed R stays next given date. initial_infections numeric; initial number infections (.e. R applies). Note results returned start day , .e. initial number infections reported . See also seeding_time day_of_week_effect either NULL (day week effect) numerical vector length specified obs_opts() week_length (default: 7) week_effect set TRUE. element vector gives weight given reporting day (normalised 1). default NULL. generation_time call gt_opts() (alias generation_time_opts()) defining generation time distribution used. backwards compatibility list summary parameters can also passed. delays call delay_opts() defining delay distributions options. See documentation delay_opts() examples details. truncation call trunc_opts() defining truncation observed data. Defaults trunc_opts(), .e. truncation.  See estimate_truncation() help file approach estimating data dist list element returned estimate_truncation() used truncation argument , thereby propagating uncertainty estimate. obs list options generated obs_opts() defining observation model. Defaults obs_opts(). CrIs Numeric vector credible intervals calculate. backend Character string indicating backend use fitting stan models. Supported arguments \"rstan\" (default) \"cmdstanr\". seeding_time Integer; number days first time point R; default NULL, case set maximum generation time. minimum 1 , .e. first reproduction number given applies day index cases given initial_infections. generation time longer 1 day average, seeding time 1 always lead initial decline (infections initial ones). Instead, greater 1, initial part epidemic (first value R given) seeding_time days assumed followed exponential growth roughly line growth rate implied first value R. pop Integer, defaults 0. Susceptible population initially present. Used adjust Rt estimates otherwise fixed based proportion population susceptible. set 0 population adjustment done. ... deprecated; included backward compatibility","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/simulate_infections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate infections using the renewal equation — simulate_infections","text":"data.table simulated infections (variable infections) reported cases (variable reported_cases) date.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/simulate_infections.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate infections using the renewal equation — simulate_infections","text":"order simulate, parameters specified mean standard deviation delays observation scaling, must fixed. Uncertain parameters allowed.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/simulate_infections.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate infections using the renewal equation — simulate_infections","text":"","code":"# \\donttest{   R <- data.frame(     date = seq.Date(as.Date(\"2023-01-01\"), length.out = 14, by = \"day\"),     R = c(rep(1.2, 7), rep(0.8, 7))   )   sim <- simulate_infections(     R = R,     initial_infections = 100,     generation_time = generation_time_opts(       fix_parameters(example_generation_time)     ),     delays = delay_opts(fix_parameters(example_reporting_delay)),     obs = obs_opts(family = \"poisson\")   ) # }"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/simulate_secondary.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate secondary observations from primary observations — simulate_secondary","title":"Simulate secondary observations from primary observations — simulate_secondary","text":"Simulations done given trajectory primary observations applying given delays observation parameters.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/simulate_secondary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate secondary observations from primary observations — simulate_secondary","text":"","code":"simulate_secondary(   primary,   day_of_week_effect = NULL,   secondary = secondary_opts(),   delays = delay_opts(),   truncation = trunc_opts(),   obs = obs_opts(),   CrIs = c(0.2, 0.5, 0.9),   backend = \"rstan\",   ... )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/simulate_secondary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate secondary observations from primary observations — simulate_secondary","text":"primary data frame primary reports (column primary) date (column date). Column primary must numeric date must date format.  assumed primary zero missing days. day_of_week_effect either NULL (day week effect) numerical vector length specified obs_opts() week_length (default: 7) week_effect set TRUE. element vector gives weight given reporting day (normalised 1). default NULL. secondary call secondary_opts() list containing following  binary variables: cumulative, historic, primary_hist_additive, current, primary_current_additive. parameters control structure secondary model, see secondary_opts() details. delays call delay_opts() defining delay distributions options. See documentation delay_opts() examples details. truncation call trunc_opts() defining truncation observed data. Defaults trunc_opts(), .e. truncation.  See estimate_truncation() help file approach estimating data dist list element returned estimate_truncation() used truncation argument , thereby propagating uncertainty estimate. obs list options generated obs_opts() defining observation model. Defaults obs_opts(). CrIs Numeric vector credible intervals calculate. backend Character string indicating backend use fitting stan models. Supported arguments \"rstan\" (default) \"cmdstanr\". ... deprecated; included backward compatibility","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/simulate_secondary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate secondary observations from primary observations — simulate_secondary","text":"data.table simulated secondary observations (column secondary) date.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/simulate_secondary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate secondary observations from primary observations — simulate_secondary","text":"order simulate, parameters specified mean standard deviation delays observation scaling, must fixed. Uncertain parameters allowed. function name previously based reimplementation model R potentially time-varying scalings delays available `convolve_and_scale()","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/simulate_secondary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate secondary observations from primary observations — simulate_secondary","text":"","code":"# \\donttest{   ## load data.table to manipulate `example_confirmed` below   library(data.table)   cases <- as.data.table(example_confirmed)[, primary := confirm]   sim <- simulate_secondary(     cases,     delays = delay_opts(fix_parameters(example_reporting_delay)),     obs = obs_opts(family = \"poisson\")   ) # }"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/stan_laplace_opts.html","id":null,"dir":"Reference","previous_headings":"","what":"Stan Laplace algorithm Options — stan_laplace_opts","title":"Stan Laplace algorithm Options — stan_laplace_opts","text":"Defines list specifying arguments passed cmdstanr::laplace().","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/stan_laplace_opts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stan Laplace algorithm Options — stan_laplace_opts","text":"","code":"stan_laplace_opts(backend = \"cmdstanr\", trials = 10, ...)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/stan_laplace_opts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stan Laplace algorithm Options — stan_laplace_opts","text":"backend Character string indicating backend use fitting stan models. Supported arguments \"rstan\" (default) \"cmdstanr\". trials Numeric, defaults 10. Number attempts use rstan::vb()] failing. ... Additional parameters pass cmdstanr::laplace().","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/stan_laplace_opts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stan Laplace algorithm Options — stan_laplace_opts","text":"list arguments pass cmdstanr::laplace().","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/stan_laplace_opts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stan Laplace algorithm Options — stan_laplace_opts","text":"","code":"stan_laplace_opts() #> $trials #> [1] 10 #>"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/stan_opts.html","id":null,"dir":"Reference","previous_headings":"","what":"Stan Options — stan_opts","title":"Stan Options — stan_opts","text":"Defines list specifying arguments passed underlying stan backend functions via stan_sampling_opts() stan_vb_opts(). Custom settings can supplied override defaults.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/stan_opts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stan Options — stan_opts","text":"","code":"stan_opts(   object = NULL,   samples = 2000,   method = c(\"sampling\", \"vb\", \"laplace\", \"pathfinder\"),   backend = c(\"rstan\", \"cmdstanr\"),   init_fit = NULL,   return_fit = TRUE,   ... )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/stan_opts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stan Options — stan_opts","text":"object Stan model object. default uses compiled package default using \"rstan\" backend, default model obtained using epinow2_cmdstan_model() using \"cmdstanr\" backend. samples Numeric, default 2000. Overall number posterior samples. using multiple chains iterations per chain samples / chains. method character string, defaulting sampling. Currently supports MCMC sampling (\"sampling\") approximate posterior sampling via variational inference (\"vb\") , experimental features \"cmdstanr\" backend used, approximate posterior sampling laplace algorithm (\"laplace\") pathfinder (\"pathfinder\"). backend Character string indicating backend use fitting stan models. Supported arguments \"rstan\" (default) \"cmdstanr\". init_fit argument deprecated. return_fit Logical, defaults TRUE. fit stan model returned. ... Additional parameters pass underlying option functions, stan_sampling_opts() stan_vb_opts(), depending method","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/stan_opts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stan Options — stan_opts","text":"<stan_opts> object arguments pass appropriate rstan functions.","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/stan_opts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stan Options — stan_opts","text":"","code":"# using default of [rstan::sampling()] stan_opts(samples = 1000) #> $backend #> [1] \"rstan\" #>  #> $object #> NULL #>  #> $method #> [1] \"sampling\" #>  #> $chains #> [1] 4 #>  #> $save_warmup #> [1] FALSE #>  #> $seed #> [1] 71983401 #>  #> $future #> [1] FALSE #>  #> $max_execution_time #> [1] Inf #>  #> $cores #> [1] 1 #>  #> $warmup #> [1] 250 #>  #> $control #> $control$adapt_delta #> [1] 0.9 #>  #> $control$max_treedepth #> [1] 12 #>  #>  #> $iter #> [1] 500 #>  #> $return_fit #> [1] TRUE #>  #> attr(,\"class\") #> [1] \"stan_opts\" \"list\"       # using vb stan_opts(method = \"vb\") #> $backend #> [1] \"rstan\" #>  #> $object #> NULL #>  #> $method #> [1] \"vb\" #>  #> $trials #> [1] 10 #>  #> $iter #> [1] 10000 #>  #> $output_samples #> [1] 2000 #>  #> $return_fit #> [1] TRUE #>  #> attr(,\"class\") #> [1] \"stan_opts\" \"list\""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/stan_pathfinder_opts.html","id":null,"dir":"Reference","previous_headings":"","what":"Stan pathfinder algorithm Options — stan_pathfinder_opts","title":"Stan pathfinder algorithm Options — stan_pathfinder_opts","text":"Defines list specifying arguments passed cmdstanr::laplace().","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/stan_pathfinder_opts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stan pathfinder algorithm Options — stan_pathfinder_opts","text":"","code":"stan_pathfinder_opts(backend = \"cmdstanr\", samples = 2000, trials = 10, ...)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/stan_pathfinder_opts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stan pathfinder algorithm Options — stan_pathfinder_opts","text":"backend Character string indicating backend use fitting stan models. Supported arguments \"rstan\" (default) \"cmdstanr\". samples Numeric, default 2000. Overall number posterior samples. using multiple chains iterations per chain samples / chains. trials Numeric, defaults 10. Number attempts use rstan::vb()] failing. ... Additional parameters pass cmdstanr::laplace().","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/stan_pathfinder_opts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stan pathfinder algorithm Options — stan_pathfinder_opts","text":"list arguments pass cmdstanr::laplace().","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/stan_pathfinder_opts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stan pathfinder algorithm Options — stan_pathfinder_opts","text":"","code":"stan_laplace_opts() #> $trials #> [1] 10 #>"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/stan_sampling_opts.html","id":null,"dir":"Reference","previous_headings":"","what":"Stan Sampling Options — stan_sampling_opts","title":"Stan Sampling Options — stan_sampling_opts","text":"Defines list specifying arguments passed either rstan::sampling() cmdstanr::sample(). Custom settings can supplied override defaults.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/stan_sampling_opts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stan Sampling Options — stan_sampling_opts","text":"","code":"stan_sampling_opts(   cores = getOption(\"mc.cores\", 1L),   warmup = 250,   samples = 2000,   chains = 4,   control = list(),   save_warmup = FALSE,   seed = as.integer(runif(1, 1, 1e+08)),   future = FALSE,   max_execution_time = Inf,   backend = c(\"rstan\", \"cmdstanr\"),   ... )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/stan_sampling_opts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stan Sampling Options — stan_sampling_opts","text":"cores Number cores use executing chains parallel, defaults 1 recommended set mc.cores option many processors hardware RAM allow (number chains). warmup Numeric, defaults 250. Number warmup samples per chain. samples Numeric, default 2000. Overall number posterior samples. using multiple chains iterations per chain samples / chains. chains Numeric, defaults 4. Number MCMC chains use. control List, defaults empty. control parameters pass underlying rstan function. default adapt_delta = 0.9 max_treedepth = 12 though settings can overwritten. save_warmup Logical, defaults FALSE. warmup progress saved. seed Numeric, defaults uniform random number 1 1e8. Seed sampling process. future Logical, defaults FALSE. stan chains run parallel using future. allows users chains fail gracefully (.e combined max_execution_time). combined call future::plan(). max_execution_time Numeric, defaults Inf (seconds). set wil kill processing chain finished within specified timeout. 2 chains finish successfully estimates still returned. less 2 chains return within allowed time estimation fail informative error. backend Character string indicating backend use fitting stan models. Supported arguments \"rstan\" (default) \"cmdstanr\". ... Additional parameters pass rstan::sampling() cmdstanr::sample().","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/stan_sampling_opts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stan Sampling Options — stan_sampling_opts","text":"list arguments pass rstan::sampling() cmdstanr::sample().","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/stan_sampling_opts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stan Sampling Options — stan_sampling_opts","text":"","code":"stan_sampling_opts(samples = 2000) #> $chains #> [1] 4 #>  #> $save_warmup #> [1] FALSE #>  #> $seed #> [1] 24848069 #>  #> $future #> [1] FALSE #>  #> $max_execution_time #> [1] Inf #>  #> $cores #> [1] 1 #>  #> $warmup #> [1] 250 #>  #> $control #> $control$adapt_delta #> [1] 0.9 #>  #> $control$max_treedepth #> [1] 12 #>  #>  #> $iter #> [1] 750 #>"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/stan_vb_opts.html","id":null,"dir":"Reference","previous_headings":"","what":"Stan Variational Bayes Options — stan_vb_opts","title":"Stan Variational Bayes Options — stan_vb_opts","text":"Defines list specifying arguments passed rstan::vb() cmdstanr::variational(). Custom settings can supplied override defaults.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/stan_vb_opts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stan Variational Bayes Options — stan_vb_opts","text":"","code":"stan_vb_opts(samples = 2000, trials = 10, iter = 10000, ...)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/stan_vb_opts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stan Variational Bayes Options — stan_vb_opts","text":"samples Numeric, default 2000. Overall number approximate posterior samples. trials Numeric, defaults 10. Number attempts use rstan::vb()] failing. iter Numeric, defaulting 10000. Number iterations use rstan::vb(). ... Additional parameters pass rstan::vb() cmdstanr::variational(), depending chosen backend.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/stan_vb_opts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stan Variational Bayes Options — stan_vb_opts","text":"list arguments pass rstan::vb() cmdstanr::variational(), depending chosen backend.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/stan_vb_opts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stan Variational Bayes Options — stan_vb_opts","text":"","code":"stan_vb_opts(samples = 1000) #> $trials #> [1] 10 #>  #> $iter #> [1] 10000 #>  #> $output_samples #> [1] 1000 #>"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/summarise_key_measures.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise rt and cases — summarise_key_measures","title":"Summarise rt and cases — summarise_key_measures","text":"Produces summarised <data.frame>s output across regions. Used internally regional_summary.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/summarise_key_measures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise rt and cases — summarise_key_measures","text":"","code":"summarise_key_measures(   regional_results = NULL,   results_dir = NULL,   summary_dir = NULL,   type = \"region\",   date = \"latest\" )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/summarise_key_measures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise rt and cases — summarise_key_measures","text":"regional_results list dataframes produced get_regional_results results_dir Character string indicating directory extract results. summary_dir Character string directory save results csv. type Character string, region identifier apply (defaults region). date Character string (format \"yyyy-mm-dd\") indicating date extract data . Defaults \"latest\" finds latest results available.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/summarise_key_measures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise rt and cases — summarise_key_measures","text":"list summarised Rt, cases date infection cases date report","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/summarise_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise Real-time Results — summarise_results","title":"Summarise Real-time Results — summarise_results","text":"Used internally regional_summary produce summary table results. May streamlined later releases.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/summarise_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise Real-time Results — summarise_results","text":"","code":"summarise_results(   regions,   summaries = NULL,   results_dir = NULL,   target_date = \"latest\",   region_scale = \"Region\" )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/summarise_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise Real-time Results — summarise_results","text":"regions character string containing list regions extract results (must results target date). summaries list summary <data.frame>s output epinow results_dir optional character string indicating location results directory extract results . target_date character string indicating target date extract results . regions must results date. region_scale character string indicating name give regions summarised.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/summarise_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise Real-time Results — summarise_results","text":"list summary data","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/summary.epinow.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary output from epinow — summary.epinow","title":"Summary output from epinow — summary.epinow","text":"summary method class \"epinow\".","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/summary.epinow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary output from epinow — summary.epinow","text":"","code":"# S3 method for class 'epinow' summary(   object,   output = c(\"estimates\", \"forecast\", \"estimated_reported_cases\"),   date = NULL,   params = NULL,   ... )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/summary.epinow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary output from epinow — summary.epinow","text":"object list output produced \"epinow\". output character string output summarise. Defaults \"estimates\" also supports \"forecast\", \"estimated_reported_cases\". date date form \"yyyy-mm-dd\" inspect estimates . params character vector parameters filter . ... Pass additional summary arguments lower level methods","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/summary.epinow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary output from epinow — summary.epinow","text":"Returns <data.frame> summary output","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/summary.estimate_infections.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary output from estimate_infections — summary.estimate_infections","title":"Summary output from estimate_infections — summary.estimate_infections","text":"summary method class \"estimate_infections\".","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/summary.estimate_infections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary output from estimate_infections — summary.estimate_infections","text":"","code":"# S3 method for class 'estimate_infections' summary(   object,   type = c(\"snapshot\", \"parameters\", \"samples\"),   date = NULL,   params = NULL,   ... )"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/summary.estimate_infections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary output from estimate_infections — summary.estimate_infections","text":"object list output produced \"estimate_infections\". type character vector data types return. Defaults \"snapshot\" also supports \"parameters\", \"samples\". \"snapshot\" return summary given date (default latest date informed data). \"parameters\" returns summarised parameter estimates can filtered using params show just parameters interest date. \"samples\" similarly returns posterior samples. date date form \"yyyy-mm-dd\" inspect estimates . params character vector parameters filter . ... Pass additional arguments report_summary","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/summary.estimate_infections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary output from estimate_infections — summary.estimate_infections","text":"Returns <data.frame> summary output","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/test_data_complete.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if data has either explicit NA values or implicit missing dates. — test_data_complete","title":"Check if data has either explicit NA values or implicit missing dates. — test_data_complete","text":"Check data either explicit NA values implicit missing dates.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/test_data_complete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if data has either explicit NA values or implicit missing dates. — test_data_complete","text":"","code":"test_data_complete(data, cols_to_check)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/test_data_complete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if data has either explicit NA values or implicit missing dates. — test_data_complete","text":"data data checked cols_to_check character vector columns check","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/test_data_complete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if data has either explicit NA values or implicit missing dates. — test_data_complete","text":"TRUE data complete, else data implicit explicit missingness, FALSE.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/trunc_opts.html","id":null,"dir":"Reference","previous_headings":"","what":"Truncation Distribution Options — trunc_opts","title":"Truncation Distribution Options — trunc_opts","text":"Returns truncation distribution formatted usage downstream functions. See estimate_truncation() approach estimate distributions.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/trunc_opts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Truncation Distribution Options — trunc_opts","text":"","code":"trunc_opts(dist = Fixed(0), default_cdf_cutoff = 0.001, weight_prior = FALSE)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/trunc_opts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Truncation Distribution Options — trunc_opts","text":"dist delay distribution series delay distributions reflecting truncation. can specified using probability distributions interface EpiNow2 (See ?EpiNow2::Distributions) estimated using estimate_truncation(), returns dist object, suited use --box. Default fixed distribution maximum 0, .e. truncation. default_cdf_cutoff Numeric; default CDF cutoff used unconstrained distribution passed dist. dist already constrained maximum CDF cutoff ignored. weight_prior Logical; TRUE, truncation prior weighted number observation data points, approximately placing independent prior time step usually preventing posteriors shifting. FALSE (default), weight applied, .e. truncation distribution treated single parameter.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/trunc_opts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Truncation Distribution Options — trunc_opts","text":"<trunc_opts> object summarising input truncation distribution.","code":""},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/trunc_opts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Truncation Distribution Options — trunc_opts","text":"","code":"# no truncation trunc_opts() #> - fixed value: #>   0  # truncation dist trunc_opts(dist = LogNormal(mean = 3, sd = 2, max = 10)) #> - lognormal distribution (max: 10): #>   meanlog: #>     0.91 #>   sdlog: #>     0.61"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/update_horizon.html","id":null,"dir":"Reference","previous_headings":"","what":"Updates Forecast Horizon Based on Input Data and Target — update_horizon","title":"Updates Forecast Horizon Based on Input Data and Target — update_horizon","text":"Makes sure forecast returned user specified time period beyond target date.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/update_horizon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Updates Forecast Horizon Based on Input Data and Target — update_horizon","text":"","code":"update_horizon(horizon, target_date, data)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/update_horizon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Updates Forecast Horizon Based on Input Data and Target — update_horizon","text":"horizon Numeric, defaults 7. Number days future forecast. target_date Date, defaults maximum found data specified. data <data.frame> confirmed cases (confirm) date (date). confirm must numeric date must date format. Optionally can also logical accumulate column indicates whether data added next data point. useful modelling e.g. weekly incidence data. See also fill_missing() function helps add accumulate column desired properties dealing non-daily data. accumulation done happens truncation specified truncation argument.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/update_horizon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Updates Forecast Horizon Based on Input Data and Target — update_horizon","text":"Numeric forecast horizon adjusted users intention","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/update_secondary_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Update estimate_secondary default priors — update_secondary_args","title":"Update estimate_secondary default priors — update_secondary_args","text":"functions allows user easily specify data driven model based priors estimate_secondary() example previous model fits using <data.frame> overwrite default settings. Note default settings still required.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/update_secondary_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update estimate_secondary default priors — update_secondary_args","text":"","code":"update_secondary_args(data, priors, verbose = TRUE)"},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/update_secondary_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update estimate_secondary default priors — update_secondary_args","text":"data list data arguments returned create_stan_data(). priors <data.frame> named priors used model fitting rather defaults supplied arguments. typically useful wanting inform estimate posterior another model fit. Priors currently use update defaults scaling fraction (\"frac_obs\"), delay parameters (\"delay_params\"). <data.frame> following variables: variable, mean, sd. verbose Logical, defaults FALSE. verbose progress messages returned.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/update_secondary_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update estimate_secondary default priors — update_secondary_args","text":"list produced create_stan_data().","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/reference/update_secondary_args.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update estimate_secondary default priors — update_secondary_args","text":"","code":"priors <- data.frame(variable = \"frac_obs\", mean = 3, sd = 1) data <- list(obs_scale_mean = 4, obs_scale_sd = 3) update_secondary_args(data, priors) #> Replacing specified priors with those passed through the `prior` dataframe. #> $obs_scale_mean #> [1] 3 #>  #> $obs_scale_sd #> [1] 1 #>"},{"path":[]},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"model-changes-development-version","dir":"Changelog","previous_headings":"","what":"Model changes","title":"EpiNow2 (development version)","text":"models now support complex patterns aggregating reported cases accumulating multiple time points, well mixtures accumulation missingness via new fill_missing() function logical accumulate column can supplied data. @sbfnk #851 reviewed @seabbs @jamesmbaazam.. bug fixed initial growth never estimated (.e. prior mean always zero). @sbfnk #853 reviewed @seabbs. bug fixed internal function applying default cdf cutoff failed due difference vector length issue. @jamesmbaazam #858 reviewed @sbfnk. parameters changed new parameter interface. @sbfnk #871 #890 reviewed @seabbs. Gaussian Process lengthscale now scaled internally half length time series. @sbfnk #890 reviewed #seabbs. bug fixed plot.dist_spec() wasn’t throwing informative error due incomplete check max specified delay. @jamesmbaazam #858 reviewed @. Updated early dynamics calculation use full linear model available. Also changed prior initial infections approximately Poisson initial growth rate point estimate initial growth rate scaled linearly estimated initial infections term. @sbfnk #903 reviewed @seabbs @SamuelBrand1","code":"# Deprecated data |>   estimate_infections(obs_opts(na = \"accumulate\"))  # Recommended workflow e.g. for weekly incidence data data |>   fill_missing(missing = \"accumulate\", initial_accumulate = 7) |>   estimate_infections()"},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"package-changes-development-version","dir":"Changelog","previous_headings":"","what":"Package changes","title":"EpiNow2 (development version)","text":"internal functions create_clean_reported_cases() broken several functions, relevant ones filter_leading_zeros(), add_breakpoints() apply_zero_threshold() exposed user. @sbfnk #884 reviewed @seabbs @jamesmbaazam. step estimating early infections growth internal function create_stan_data() separated new internal function estimate_early_dynamics(). @jamesmbaazam #888 reviewed @sbfnk. estimate_infections() epinow() gain forecast argument setting forecast horizon (horizon) accumulation forecasts. forecast set forecast_opts() function similar settings arguments. @sbfnk #901 reviewed @jamesmbaazam.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"documentation-development-version","dir":"Changelog","previous_headings":"","what":"Documentation","title":"EpiNow2 (development version)","text":"Brought docs alpha_sd date code change prior PR #853. @zsusswein #862 reviewed @jamesmbaazam. ... argument estimate_secondary() removed used. @jamesmbaazam #894 reviewed @. examples now use natural parameters distributions rather mean standard deviation specifying uncertain distributions. eliminate warnings encourage best practice. @jamesmbaazam #893 reviewed @sbfnk.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"epinow2-161","dir":"Changelog","previous_headings":"","what":"EpiNow2 1.6.1","title":"EpiNow2 1.6.1","text":"CRAN release: 2024-10-31","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"model-changes-1-6-1","dir":"Changelog","previous_headings":"","what":"Model changes","title":"EpiNow2 1.6.1","text":"bug spectral densities Matern kernels order 3/2 fixed vignette updated accordingly. @sbfnk #835 reviewed @seabbs. Changed prior (square root ) magnitude alpha Gaussian Process back HalfNormal(0, 0.05) based user feedback unexpected results. @sbfnk #840 reviewed @jamesmbaazam.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"package-changes-1-6-1","dir":"Changelog","previous_headings":"","what":"Package changes","title":"EpiNow2 1.6.1","text":"Users now informed NA observations (present implicitly explicitly) treated missing instead zero using default obs_opts(). Options treat NA zeros accumulate also provided message. @jamesmbaazam #774 reviewed @sbfnk.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"epinow2-160","dir":"Changelog","previous_headings":"","what":"EpiNow2 1.6.0","title":"EpiNow2 1.6.0","text":"CRAN release: 2024-10-02 release introduces model improvements Gaussian Process models, alongside number improvements bug fixes.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"documentation-1-6-0","dir":"Changelog","previous_headings":"","what":"Documentation","title":"EpiNow2 1.6.0","text":"documentation rt argument expanded case rt = NULL make explicit settings applied case. @jamesmbaazam #779 reviewed @sbfnk. README updated link free course nowcasting forecasting. availability variational inference, Laplace approximation, Pathfinder cmdstanr also surfaced. @jamesmbaazam #753 reviewed @seabbs. implicit argument defaults made explicit function definition. @Bisaloo #729. installation guide README updated provide instructions configuring C toolchain Windows, MacOS, Linux. @jamesmbaazam #707 reviewed @sbfnk.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"model-changes-1-6-0","dir":"Changelog","previous_headings":"","what":"Model changes","title":"EpiNow2 1.6.0","text":"interface defining delay distributions generalised also cater continuous distributions defining probability distributions can now truncated using tolerance argument Ornstein-Uhlenbeck 5 / 2 Matérn kernels added. @sbfnk #741 reviewed @seabbs. Gaussian processes vectorised, leading speed gains 🚀 , gp_opts() function gained three options, “periodic”, “ou”, “se”, specify periodic linear kernels respectively. @seabbs #742 reviewed @jamesmbaazam. Prior predictive checks used update following priors: prior magnitude Gaussian process (HalfNormal(0, 0.05)^2 HalfNormal(0, 0.01)^2), prior overdispersion (1 / HalfNormal(0, 1)^2 1 / HalfNormal(0, 0.25)). user-facing API, change default values sd phi obs_opts() 1 0.25. @seabbs #742 reviewed @jamesmbaazam. default stan control options updated list(adapt_delta = 0.95, max_treedepth = 15) list(adapt_delta = 0.9, max_treedepth = 12) due improved performance reduce runtime default parameterisations. @seabbs #742 reviewed @jamesmbaazam. Initialisation simplified sampling directly priors, possible, rather constrained space. @seabbs #742 reviewed @jamesmbaazam. Unnecessary normalisation delay priors removed. @seabbs #742 reviewed @jamesmbaazam. Ornstein-Uhlenbeck 5 / 2 Matérn kernels added. @sbfnk #741 reviewed @seabbs. Switch broadcasting random walks added unit tests. @seabbs #747 reviewed @jamesmbaazam. Optimised convolution code take account relative length vectors convolved. See #745 @seabbs reviewed @jamesmbaazam. Switch broadcasting day week effect. @seabbs #746 reviewed @jamesmbaazam. warning now thrown nonparametric PMFs passed delay options consecutive tail values certain low threshold lead loss speed little gain accuracy. @jamesmbaazam #752 reviewed @seabbs, subsequent bug fix #802. dist_fit() can now accept number samples without throwing warning samples < 1000 #751 @jamesmbaazam reviewed @seabbs @sbfnk.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"package-changes-1-6-0","dir":"Changelog","previous_headings":"","what":"Package changes","title":"EpiNow2 1.6.0","text":"epinow() now returns “timing” output “time difference”” format easier understand work . @jamesmbaazam #688 reviewed @sbfnk. functions now use cli R package signal errors, warnings, messages. @jamesmbaazam #762 reviewed @seabbs. fix_dist() renamed fix_parameters() removes uncertainty distribution’s parameters. @sbfnk #733 reviewed @jamesmbaazam. plot.dist_spec now uses color instead line types display pmfs vs cmfs. @jamesmbaazam #788 reviewed @sbfnk. use progressr package displaying progress bars now optional, use future future.apply parallelisation. @sbfnk #798 reviewed @seabbs. Specifying nonparametric generation time intervals nonzero first element (corresponding zero bin) deprecated current behaviour setting zero internally well exposed. @sbfnk #.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"bug-fixes-1-6-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"EpiNow2 1.6.0","text":"bug fixed caused delay option functions report error CDF cutoff specified. @sbfnk #716 reviewed @jamesmbaazam. bug fixed forecast_secondary() work fixed delays. @sbfnk #717 reviewed @seabbs. bug fixed caused delay option functions report error CDF cutoff specified. @sbfnk. bug fixed led truncation PMF shortened wrong side truncation PMF longer supplied data. @seabbs #736 reviewed @sbfnk @jamesmbaazam. bug fixed caused internal validation checks delay distributions fail contained non-parametric distributions. @jamesmbaazam #750 reviewed @seabbs. bug fixed combined distributions shown alphabetical order, rather order combined. @sbfnk #784 reviewed @jamesmbaazam.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"documentation-1-6-0-1","dir":"Changelog","previous_headings":"","what":"Documentation","title":"EpiNow2 1.6.0","text":"Updated documentation dots argument stan_sampling_opts() add dots passed cmdstanr::sample(). @jamesmbaazam #699 reviewed @sbfnk. generation_time_opts() shortened gt_opts() make easier specify. Calls functions equivalent. @jamesmbaazam #698 reviewed @seabbs @sbfnk . Added stan documentation update_rt(). @seabbs #747 reviewed @jamesmbaazam.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"epinow2-152","dir":"Changelog","previous_headings":"","what":"EpiNow2 1.5.2","title":"EpiNow2 1.5.2","text":"CRAN release: 2024-05-16 patch release fix issue date package citation. now addressed removing inst/CITATION.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"epinow2-151","dir":"Changelog","previous_headings":"","what":"EpiNow2 1.5.1","title":"EpiNow2 1.5.1","text":"CRAN release: 2024-05-14 patch release fix issue date package citation.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"epinow2-150","dir":"Changelog","previous_headings":"","what":"EpiNow2 1.5.0","title":"EpiNow2 1.5.0","text":"CRAN release: 2024-05-10 release comes change maintainer, @seabbs @sbfnk. reflect handle upcoming CRAN submission, expected lead change workflows.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"major-changes-1-5-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"EpiNow2 1.5.0","text":"interface generating delay distributions completely overhauled. Instead calling dist_spec() users now specify distributions using functions represent available distributions, .e. LogNormal(), Gamma() Fixed(). See ?EpiNow2::Distributions. Uncertainty specified using calls nature, Normal(). information underlying design can found inst/dev/design_dist.md @sbfnk #504 reviewed @seabbs. Delay discretisation now based two-day censoring window (uniform probability ), based recommendations Park et al, medRxiv, 2024. @sbfnk #518 reviewed @jamesmbaazam.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"deprecations-1-5-0","dir":"Changelog","previous_headings":"","what":"Deprecations","title":"EpiNow2 1.5.0","text":"functions sample_approx_dist(), report_cases(), adjust_infection_reports() deprecated functionality provide can now achieved simulate_secondary(). See #597 @jamesmbaazam reviewed @sbfnk. utility function update_list() deprecated favour utils::modifyList() comes installation R. @jamesmbaazam #491 reviewed @seabbs. fixed argument dist_spec deprecated replaced fix_dist() function. @sbfnk #503 reviewed @seabbs. functions get_dist(), get_generation_time(), get_incubation_period() deprecated replaced examples. @sbfnk #481 reviewed @seabbs. function init_cumulative_fit() deprecated. @jamesmbaazam #541 reviewed @sbfnk. model-specific weigh_delay_priors argument deprecated favour delay-specific prior weighting using weight_priors. See generation_time_opts(), delay_opts(), trunc_opts(). @sbfnk #630 reviewed @jamesmbaazam. functions now use data argument pass data. existing reported_cases, reports, obs arguments deprecated removed v2.0.0. @jamesmbaazam #638 reviewed @sbfnk.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"other-breaking-changes-1-5-0","dir":"Changelog","previous_headings":"","what":"Other breaking changes","title":"EpiNow2 1.5.0","text":"Updated estimate_infections() rather imputing missing data, now skips data points likelihood. breaking change alters behaviour model dates missing time series known zero. recommend users check results updating version expect cases improve performance. @seabbs #528 reviewed @sbfnk. simulate_infections renamed forecast_infections line simulate_secondary forecast_secondary. terminology : forecast done fit existing data, simulation first principles. @sbfnk #544 reviewed @seabbs. new simulate_infections function added can used simulate model given initial conditions parameters. @sbfnk #557 reviewed @jamesmbaazam. function init_cumulative_fit() deprecated. @jamesmbaazam #541 reviewed @sbfnk. interface generating delay distributions completely overhauled. Instead calling dist_spec() users now specify distributions using functions represent available distributions, .e. LogNormal(), Gamma() Fixed(). Uncertainty specified using calls nature, Normal(). information underlying design can found inst/dev/design_dist.md @sbfnk #504 reviewed @seabbs. accessor functions get_parameters(), get_pmf(), get_distribution() added extract elements  object. @sbfnk #646 reviewed @jamesmbaazam. functions sample_approx_dist(), report_cases(), adjust_infection_reports() deprecated functionality provide can now achieved simulate_secondary(). See #597 @jamesmbaazam reviewed @sbfnk.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"documentation-1-5-0","dir":"Changelog","previous_headings":"","what":"Documentation","title":"EpiNow2 1.5.0","text":"Two new vignettes added cover workflow example uses. @sbfnk #458 reviewed @jamesmbaazam. Removed references longer existing forecast_infections function. @sbfnk #460 reviewed @seabbs. contribution guide improved include detail ways contribute new features/enhancements, report bugs, improve suggest vignettes. @jamesmbaazam #464 reviewed @seabbs. Updated code inst/CITATION added GitHub Actions workflow auto-generate citation.cff two citation files always sync DESCRIPTION. @jamesmbazam #467, contributions @Bisaloo, reviewed @seabbs @sbfnk. Updated documentation data argument estimate_infections() confirm column obs argument estimate_truncation() allow numeric types, just integer. See #594, @jamesmbaazam, reviewed @sbfnk. Removed reporting templates previously provided. See #604 @jamesmbaazam, reviewed @sbfnk. Clarified estimated specified uncertainty around data truncation can passed epinow(), regional_epinow(), estimate_infections() using truncation argument. @jamesmbaazam #644 reviewed @sbnfk. Internal functions removed pkgdown index. @sbfnk #735.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"package-1-5-0","dir":"Changelog","previous_headings":"","what":"Package","title":"EpiNow2 1.5.0","text":"Replaced use purrr::transpose() purrr::list_transpose() former superseded. @jamesmbaazam #524 reviewed @seabbs. Reduced number long-running examples. @sbfnk #459 reviewed @seabbs. Changed instances arguments refer maximum distribution reflect maximum. Previously , instance, refer length PMF. @sbfnk #468. Fixed bug bounds delays setting initial conditions. @sbfnk #474. Added input checking estimate_infections(), estimate_secondary(), estimate_truncation(), simulate_infections(), epinow(). check_reports_valid() added validate reports dataset passed functions. Tests added check check_reports_valid(). part input validation, various *_opts() functions now return subclasses name functions tested passed arguments ensure right *_opts() passed right argument. example, obs argument estimate_secondary() expected receive arguments passed obs_opts() error otherwise. @jamesmbaazam #476 reviewed @sbfnk @seabbs. Added possibility specifying fixed observation scaling. @sbfnk #550 reviewed @seabbs. Added possibility specifying fixed overdispersion. @sbfnk #560 reviewed @seabbs. example estimate_truncation() simplified. package now ships dataset example_truncated, used estimate_truncation() example tests. steps creating example_truncated stored ./data-raw/estimate-truncation.R. @jamesmbaazam #584 reviewed @seabbs @sbfnk. Tests updated set random seeds snapshot tests involving random number generation, unset subsequently. @sbfnk #590 reviewed @seabbs. function simulate_secondary() added simulate parameters estimate_secondary model. function name previously based reimplementation model R potentially time-varying scalings delays renamed convolve_and_scale(). @sbfnk #591 reviewed @seabbs. Fixed broken links README. @jamesmbaazam #617 reviewed @sbfnk. Replaced descriptions plot labels general clearer. @sbfnk #621 reviewed @jamesmbaazam. Argument choices moved default arguments. @sbfnk #622 reviewed @seabbs. simulate_infections() gained argument seeding_time change seeding time. Additionally, documentation improved. @sbfnk #627 reviewed @jamesmbaazam. cmdstanr backend added. @sbfnk #537 #642 reviewed @seabbs.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"model-changes-1-5-0","dir":"Changelog","previous_headings":"","what":"Model changes","title":"EpiNow2 1.5.0","text":"Updated parameterisation dispersion term phi phi = 1 / sqrt_phi ^ 2 rather previous parameterisation phi = 1 / sqrt(sqrt_phi) based suggested prior performance benefits seen epinowcast package (see ). @seabbs #487 reviewed @sbfnk. Added na argument obs_opts() allows user specify whether NA values data interpreted missing accumulated next non-NA data point. @sbfnk #534 reviewed @seabbs. Growth rates now calculated directly infection trajectory log (t) - log (t - 1). Originally @seabbs #213, finished @sbfnk #610 reviewed @seabbs. Fixed bug using nonmechanistic model lead explosive growth. @sbfnk #612 reviewed @jamesmbaazam. Added arguments filter_leading_zeros zero_threshold estimate_secondary() estimate_truncation() allow user specify whether filter leading zeros data threshold replacing zero cases. arguments already used estimate_infections(), epinow(), regional_epinow(). See ?estimate_secondary ?estimate_truncation details. @jamesmbaazam #608 reviewed @sbfnk.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"epinow2-140","dir":"Changelog","previous_headings":"","what":"EpiNow2 1.4.0","title":"EpiNow2 1.4.0","text":"CRAN release: 2023-09-26 release contains bug fixes, minor new features, initial stages broader improvement future handling delay distributions.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"breaking-changes-1-4-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"EpiNow2 1.4.0","text":"external distribution interface updated use dist_spec() function. comes range benefits, including optimising model fitting static delays used (convolving first defined vs stan), easy printing (using print()), easy plotting (using plot()). also makes possible use supported distributions everywhere (.e, generation time reporting delay). However, now backwards compatibility ensured update break users’ code eventually interface changed. See documentation dist_spec() details. @sbfnk #363 reviewed @seabbs.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"package-1-4-0","dir":"Changelog","previous_headings":"","what":"Package","title":"EpiNow2 1.4.0","text":"Model description expanded include detail. @sbfnk #373 reviewed @seabbs. Moved GitHub Action lint changed files. @seabbs #378. Linted package wider range default linters. @seabbs #378. Added GitHub Action build README altered. @seabbs. Added handling edge case sample negative binomial mean close equal 0. @sbfnk #366 reviewed @seabbs. Replaced use nested ifelse() data.table::fifelse() code base data.table::fcase(). @jamesmbaazam #383 reviewed @seabbs. Reviewed example calc_backcalc_data() call calc_backcalc_data() instead create_gp_data(). @jamesmbaazam #388 reviewed @seabbs. Improved compilation times reducing number distinct stan models deprecated tune_inv_gamma(). @sbfnk #394 reviewed @seabbs. Changed touchstone settings benchmarks performed stan model changed. @sbfnk #400 reviewed @seabbs. pak now suggested installing developmental version package. @jamesmbaazam #407 reviewed @seabbs. successfully tested MacOS Ventura, Ubuntu 20.04, Windows 10. Users advised use remotes::install_github(\"epiforecasts/EpiNow2\") pak fails fail, raise issue. dist_fit()’s samples argument now takes default value 1000 instead NULL. supplied samples less 1000, changed 1000 warning thrown indicate change. @jamesmbazam #389 reviewed @seabbs. internal distribution interface streamlined reduce code duplication. @sbfnk #363 reviewed @seabbs. small bug fixed seeding time long. single delay used shortens seeding time one day delays used shortens seeding time n days n number delays used e.g. two parametric delays ’s two days. @sbfnk #413 reviewed @seabbs. tuning done speed renewal model. @sbfnk #416 reviewed @seabbs. approximation negative binomial Poisson low levels overdispersion disabled led parameter identification issues. @sbfnk #432 reviewed @seabbs. Reduced verbosity tests. @sbfnk #433 reviewed @seabbs. Updated code style response lintr warnings. @sbfnk #437 reviewed @seabbs. Fixed edge case breaking summary output. Reported @jrcpulliam, fixed @sbfnk #436 reviewed @seabbs. Added content vignette estimate_truncation model. @sbfnk #439 reviewed @seabbs. Added feature estimate_truncation allow applied time series shorter truncation max. @sbfnk #438 reviewed @seabbs. Changed estimate_truncation use dist_spec interface, deprecating existing options max_trunc trunc_dist. @sbfnk #448 #452 reviewed @seabbs. Added weigh_delay_priors argument main functions, allowing users choose whether weigh delay priors number data points . @sbfnk #450 reviewed @seabbs.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"documentation-1-4-0","dir":"Changelog","previous_headings":"","what":"Documentation","title":"EpiNow2 1.4.0","text":"Added link recent CSTE workshop using EpiNow2 case studies vignette. @seabbs #441 reviewed @sbfnk.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"epinow2-135","dir":"Changelog","previous_headings":"","what":"EpiNow2 1.3.5","title":"EpiNow2 1.3.5","text":"CRAN release: 2023-04-27 minor release resolve issues recent CRAN requirement make use C++ 17 compiler causing issues rstantools package.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"epinow2-134","dir":"Changelog","previous_headings":"","what":"EpiNow2 1.3.4","title":"EpiNow2 1.3.4","text":"CRAN release: 2023-02-12 release focusses bug fixes package infrastructure updates along quality life improvements enabling use fixed delays generation times. Thanks @seabbs, @sbfnk South African Centre Epidemiological Modelling Analysis (SACEMA) hosting @seabbs whilst development work release done.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"breaking-changes-1-3-4","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"EpiNow2 1.3.4","text":"streamline interface definition delay distributions trunc_opts() now takes single argument (dist) defines truncation delay rather arbitrary list arguments (previously used define distribution). Updated handling generation times renewal equation left truncation adjusted zeroth day. better approach taken estimate generation times may slightly impact estimates vs produced using previous versions. range frac_obs parameter restricted upper bound 1 reflect name description. may impact small number edge case uses majority models fit using estimate_secondary(). @sbfnk #340.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"features-1-3-4","dir":"Changelog","previous_headings":"","what":"Features","title":"EpiNow2 1.3.4","text":"Adds new function simulate_secondary() simulating secondary observations generative process model assumed estimate_secondary. Unlike forecast_secondary() uses stan model simulate secondary cases (shares code estimate_secondary model) new function implemented entirely R therefore useful sense check results stan implementation. Adds support fixed delays (mean fixed lognormal distributed) truncations (fixed lognormal distributed), pre-computing delays well generation times fixed. @sbfnk @seabbs. Support gamma distributed delays log-normal distributed generation times.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"package-1-3-4","dir":"Changelog","previous_headings":"","what":"Package","title":"EpiNow2 1.3.4","text":"Update GitHub Action files new versions. Switched using seq_along() rather 1:length() package code. Fixed broken example documentation regional_runtimes(). Add compatibility changes latest version rstan rstantools. Remove legacy use pkgnet package dependency visualisation. Restyled code using styler. Dropped dependency RcppParallel. Updated report_cases work new delay_opts helper function. Added test coverage report_cases though note function likely deprecated future releases. Switched linewidth plot_CrIs rather size avoid issues ggplot2 3.4.0. Set validation synthetic data run CI check. Added tests internal stan convolution functions. Update get_ distribution functions return distribution well summary parameters. Added support model fitting benchmarking using touchstone.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"documentation-1-3-4","dir":"Changelog","previous_headings":"","what":"Documentation","title":"EpiNow2 1.3.4","text":"Slight edits model outline estimate_infections(). Updated examples make use fixed distributions.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"bugs-1-3-4","dir":"Changelog","previous_headings":"","what":"Bugs","title":"EpiNow2 1.3.4","text":"Fixed bug simulate_infections() passing custom number samples cause input vector R values replicated column-wise fashion meaning intended R trajectory simulated. Fixed bug estimate_infections() deconvolution model generation time correctly reversed.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"epinow2-133","dir":"Changelog","previous_headings":"","what":"EpiNow2 1.3.3","title":"EpiNow2 1.3.3","text":"release adds range new minor features, squashes bugs, enhances documentation, expands unit testing, implements minor run-time optimisations, removes obsolete features. Thanks @Bisaloo, @hsbadr, @LloydChapman, @medewitt, @sbfnk contributing release. Thanks @sbfnk, @pearsonca, @nicholasdavies regression testing release 1.3.2.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"new-features-1-3-3","dir":"Changelog","previous_headings":"","what":"New features","title":"EpiNow2 1.3.3","text":"Added supported simulate_infections data.frame R samples can passed instead vector R values. @seabbs. Added extraction posterior samples summary method estimate_infections. @seabbs. Exposed zero_threshold users allowing control zeros NAs count data treated true zeros versus reporting errors require smoothing. @seabbs. Added support varying length day week effect (see obs_opts()). allows, example, fitting data cases reported every 3 days. @seabbs. Adds option plot_estimates() higher level functions choose estimate type plot. @seabbs. Adds support fixed generation times (either mean fixed gamma distributed). @sbfnk. Adds support optionally using inverse gamma prior lengthscale gaussian process. scaled prior tested short long simulations default prior may make model unstable. new prior stable long simulations adaptively change distribution based simulation length (total number days) without relying user inputs fixed defaults. can tested setting ls_sd = 0 gp_opts(). @hsbadr. Updated prior magnitude gaussian process 0.05 vs 0.1 leading slightly stable estimates. @hsbadr. Added argument (plot) regional_summary allow plotting optional. Closes #250. @seabbs #317","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"model-changes-1-3-3","dir":"Changelog","previous_headings":"","what":"Model changes","title":"EpiNow2 1.3.3","text":"Added support varying length day week effect (see obs_opts()). allows, example, fitting data cases reported every 3 days. Minor optimisations observation model using target likelihood definition approach required use fmax fmin using statements. @seabbs. Added support users setting overdispersion (parameterised one square root phi) reporting process. accessible via phi argument obs_opts default normal distribution mean 0 standard deviation 1 truncated 0 remaining unchanged. @seabbs. Added additive noise term estimate_truncation model deal zeroes. @sbfnk. Switched using optimised versions discretised distributions supported reporting delay generation time. based implementation epinowcast Adrian Lison Sam Abbott. @seabbs #320.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"documentation-1-3-3","dir":"Changelog","previous_headings":"","what":"Documentation","title":"EpiNow2 1.3.3","text":"Updates synthetic delays reduce runtime examples. @seabbs. Additional statements make clear users examples used real world analysis. @seabbs. Additional context README package functionality. @seabbs. Added work progress model definitions resource list case studies using package. @seabbs.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"package-changes-1-3-3","dir":"Changelog","previous_headings":"","what":"Package changes","title":"EpiNow2 1.3.3","text":"Added contributing.md guide contributors added pre-commit support check new contributions styling. @seabbs. Better test skipping thanks @Bisaloo. Switched cowplot::theme_cowplot() ggplot2::theme_bw(). allows removal cowplot dependency well making plots visible users saving pngs using dark theme. @seabbs. default epinow downstream functions remove leading zeros. Now optional new filter_leading_zeros option. Thanks @LloydChapman #285. Basic tests added cover estimate_secondary(), forecast_secondary(), estimate_truncation(). @seabbs #315. Add basic snapshot tests adjust_infection_to_report. @seabbs #316. Update use rstantools manage compiler flags. Update Dockerfile work better vscode.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"other-changes-1-3-3","dir":"Changelog","previous_headings":"","what":"Other changes","title":"EpiNow2 1.3.3","text":"Updated classification growth use stable rather unsure Rt approximately 1. @seabbs. default parallisation changed future::multisession() future::multiprocess() latter depreciated future package. @seabbs @sbfnk. Ensure seeding time least maximum generation time (@sbfnk).","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"deprecated-features-1-3-3","dir":"Changelog","previous_headings":"","what":"Deprecated features","title":"EpiNow2 1.3.3","text":"simulate_cases() simulate_infections() deprecated removed. functions depend EpiSoon archived near equivalent functionality available within EpiNow2 packages (@seabbs). Functions supporting secondary forecasting using simulate_infections() (.e `epinow()) removed along arguments supported (@seabbs). global_map(), country_map(), theme_map() deprecated removed. functions used support reporting reproduction number estimates considered scope EpiNow2. finding useful contacting EpiNow2 developers (@seabbs).","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"bug-fixes-1-3-3","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"EpiNow2 1.3.3","text":"Fixed bug deconvolution Rt estimation method mean generation time used standard deviation. default package generation time close impact limited cases standard deviation << mean result accurate Rt estimates. @seabbs. Fixed bug number threads used data.table package set one global environment. Now number threads used data.table set whatever used specified exit. @medewitt. Fixed bug simulate_infections forecast_secondary meant Poisson observation model used estimation lead error. @seabbs. Fixed bug use_rt = FALSE properly cancel user settings. @sbfnk. Fixed bug estimate_truncation phi initialised. @sbfnk. Fixed bug zero_threshold ignored post-processing happening. maintain backwards compatibility default changed Inf (.e. zero threshold). @LloydChapman #285. Fixed bug setting obs_opts(return_likelihood = TRUE) fails. @sbfnk #333.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"epinow2-132","dir":"Changelog","previous_headings":"","what":"EpiNow2 1.3.2","title":"EpiNow2 1.3.2","text":"CRAN release: 2020-12-14 release model run times reduced using combination code optimisation testing reduce likelihood long running edge cases. Model flexibility also increased, particularly back calculation approach now supports increased range prior choices. significant development release edition experimental estimate_secondary model (supporting forecast plot functions). allows downstream target forecast observation. Example use cases include forecasting deaths test positive cases hospital bed usage hospital admissions. approach intended provide alternative models multiple targets estimated jointly.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"new-features-1-3-2","dir":"Changelog","previous_headings":"","what":"New features","title":"EpiNow2 1.3.2","text":"Added new argument, prior, backcalc_opts(). allows use different priors underlying latent infections estimating using deconvolution/back-calculation rather package default using generated Rt model (enable option setting rt = NULL). default prior remains smoothed mean delay shifted reported cases optionally prior can now also used (scenarios data untrustworthy likely perform extremely poorly real time).addition, previously estimated infections can used (.e infections[t] = infections[t-1] * exp(GP)) approximate version generative Rt model weight previous infections using generation time. Updates smoothing applied mean shifted reported cases used prior back calculation prior = \"reports\" partial centred moving average rather right aligned moving average. choice means increasing prior window alter location epidemic peaks using right alighted moving average. Updates default smoothing applied mean shifted reported cases 14 days rather 7 usage indicates provided much weight small scale changes. remains user set able. Adds new argument init_fit stan_opts() enables user pass stanfit use initialise model fit estimate_infections(). Optionally init_fit = \"cumulative\" can also passed first fits cumulative data uses result initialise full fit incidence data. approach based approach used epidemia authored James Scott. Currently stan warnings initial fit broadcast user may cause concern short run time approximate settings often lead poor convergence. Adds estimate_secondary forecast_secondary along plot method new option function (secondary_opts()). functions implement generic model forecasting secondary observation (hospital bed usage, deaths hospital) entirely depends primary observation (hospital admissions) via combination convolving delay adding/subtracting current observations. share observation model optional features used estimate_infections support data truncation, scaling (primary secondary observations), multiple log normal delays, day week effect, various error models. stationary_opts() allows easy specification common use cases (incidence prevalence variables). See documentation examples model details.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"other-changes-1-3-2","dir":"Changelog","previous_headings":"","what":"Other changes","title":"EpiNow2 1.3.2","text":"Updates discretised_gamma_pmf (discretised truncated Gamma PMF) discretised_lognormal_pmf (discretised truncated lognormal PMF) limit/clip values parameters prespecified lower upper bounds. Tightens initialisation fitting estimate_infections reducing standard deviations used scaling factor 0.1 create_initial_conditions. Adds boundary checking gt_mean (mean generation time) reject samples mean greater gt_max (maximum allowed generation time). Adds boundary checking reject standard deviations negative. Adds boundary check R values reject 10 times greater mean initial prior. scenarios require users supply prior completely misspecified (.e prior mean 1 posterior mean 50). Refactor update_rt (internal stan function found inst/stan/functions/rt.stan) vectorised. change reduces run times approximately 1- ~ 20% (though tested small subset examples) opens way future model extensions (additive rather multiplicative random walks, introducing covariates). Switched reporting two significant figures summary tables Reduced minimum default Gaussian process length scale 3 days 7 based experience running model scale.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"epinow2-131","dir":"Changelog","previous_headings":"","what":"EpiNow2 1.3.1","title":"EpiNow2 1.3.1","text":"CRAN release: 2020-11-22 release focusses model stability, functional rewrite model implementation, finalising interface across package, introducing additional tooling. additional tooling includes: support adjusting estimating data truncation, multiple approaches estimating Rt (including default generative Rt approach, de-convolution coupled Rt calculation, EpiEstim like estimation observed cases robust observation model), optional scaling observed data, optional adjustment future forecasts based population susceptibility. examples also expanded links Covid-19 specific work flows may interest users. implementation model options now considered maturing next release planned contain documentation underlying approach, case studies, validation, evaluation various supported options, tools dealing secondary reports dependent primary report (.e hospital admissions hospital bed usage). interested contributing features please contact package authors submit PR. User contributions warmly welcomed.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"new-features-1-3-1","dir":"Changelog","previous_headings":"","what":"New features","title":"EpiNow2 1.3.1","text":"Rewritten interface estimate_infections divided calls _opts() functions. Options now divided type delays (delay_opts()), Rt (rt_opts()), backcalculation (backcalc_opts()), Gaussian process (gp_opts()), stan arguments (stan_opts()). resulted larger number arguments estimate_infections folded related _opts() function. Please see function documentation examples details. Added support region specific settings arguments take _opts() function regional_epinow using helper functions opts_list update_list alternatively constructing named list entry region estimated. Extended functionality back calculation model Rt can produced via calculation. estimates potentially less reliable produced using generative model model can estimated fraction time. essence similar using back projection method estimating Rt using EpiEstim (default window 1 can updated using backcalc_opts(rt_window)) approaches incorporates uncertainty inputs single estimate. Reduced default maximum generation time incubation period allowed truncated distribution (30 days 15). decreases model run time substantially marginal accuracy cost. new default suitable longer generation times modified user used. Adds basic S3 plot summary measures epinow estimate_infections. Updates initialisation generative Rt model (default) initial infections occur unobserved time (.e first reported case) generated using exponential growth model priors based fitting model first week data. replaces previous approach use delay shifted reported cases multiplied independent noise terms. reduces degrees freedom fitting time cost model flexibility. Alternatives using generative Rt model considered ultimately approaches used introduced spurious variation gaussian process result unreliable Rt estimates due lack historic infections. New simulate_infections function @sbfnk allows simulation different Rt traces combined estimates produced estimate_infections. function likely form basis moving forecasting estimate_infections may improve model stability. Updates implementation Gaussian process support Matern 3/2 Kernel (set default) addition squared exponential kernel. Updates handling Gaussian process arguments overridden settings need passed user making changes. Settings now defined, documented, gp_opts(). length scale now defined using log normal truncated prior mean 21 days standard deviation 7 days truncated 3 days length data default. prior area active research may change future releases. Updates dispersion prior 1 / sqrt(half_normal(0, rho_prior)) based advice dispersion measured reports infections hence priori strong evidence dispersion (may case infections) previous prior overly weighted towards . Updates interface observation model arguments now passed using obs_opts(). removes week_effect family main argument list allow future extensions. Also adds new argument scale controls uncertain fraction cases eventually observed (defined normally distributed). Setting parameter impact Rt estimates. Updates interface Rt settings arguments passed via rt, using rt_opts(), includes initial prior,use_breakpoints, future. Adds new helper argument rw enables easy parameterisation fixed length random walk. changes also help make clear arguments impact Rt generative model back calculation model. Adds adjustment population susceptibility based used {epidemia} Rt fixed future (set passing population rt_opts(pop = initial susceptible population). Note impacts case forecasts output Rt estimates impacts estimates beyond forecast horizon based data already account population susceptibility definition. impact assumption can explored using simulate_infections (updating est$arg$pop example). Adds truncation new argument estimate_infections higher level functions. takes output trunc_opts() allows internally adjusting observed cases truncation. new method estimate_truncation also added support estimating log normal truncation distribution archived versions data set though method currently experimental. Adds estimate_delay user friendly wrapper around bootstrapped_dist_fit.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"other-changes-1-3-1","dir":"Changelog","previous_headings":"","what":"Other changes","title":"EpiNow2 1.3.1","text":"Recoded core stan model functional aim making code modular extendable. Added unit tests internal stan update_rt function. Reworked package logging system improve reporting issues epinow regional_epinow large batch runs. Fix @hsbadr prevent overflow overdispersion larger (switching Poisson approximation). Hitting issue may indicate bug model code need work explore. Moved default verbosity functions (excepting regional_epinow) based whether usage interactive. Removed burn_in argument estimate_infections updates model initialisation mean feature likely longer needed. Please contact developers feel use case argument. Adds utility functions map mean standard deviation log mean log standard deviation log normal distribution (convert_to_logmean convert_to_logsd). Optimised discrete probability mass functions vectorised possible. Updated Gaussian process internally unit scale. Added new function, expose_stan_fns exposes internal stan functions R. enables unit testing, exploration stan functionality potentially within R use cases functions. Updates default warmup 250 samples default adapt_delta 0.98. Adds pooling parameter standard deviation breakpoint effects. Updated documentation added lifecycle badges functions indicate development stage.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"epinow2-121","dir":"Changelog","previous_headings":"","what":"EpiNow2 1.2.1","title":"EpiNow2 1.2.1","text":"CRAN release: 2020-10-20 release introduces multiple breaking interface changes. Please see README examples new interface. adds range quality life improvements including updating stan interface support fitting chain independently offering variational inference alternative, experimental, fitting option. Notably also adds support nesting logging parallel enabled progress bar via progressr package. Minor bugs fixed core model implementation focussing stability several already implemented features extended. Major model developments planned next release EpiNow2.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"new-features-1-2-1","dir":"Changelog","previous_headings":"","what":"New features","title":"EpiNow2 1.2.1","text":"Added support either NUTs sampling (method = \"exact\") Variational inference (method = \"approximate\"). Update prior initial Rt estimate lognormal rather gamma distributed. users interface remains unchanged parameterisation numerically stable. Added get_dist, get_generation_time, get_incubation_period based ideas @pearsonca. (leads breaking changes removal covid_generation_times covid_incubation_periods). Added setup_logging enable users specify level location logging (wrapping functionality futile.logger). Also added setup_default_logging give users sensible defaults embedded function regional_epinow epinow. Added setup_future making using nested futures easier (required using future = TRUE). Implemented progress bar support using progressr. Added timeout timing option regional_epinow Improved logging warnings regional_epinow Enabled user specify credible intervals desired 20%, 50% 90% calculated default. Also switched high density regions quantiles. Custom credible intervals now supported reporting plotting functions. Added mean sd reporting summaries. Added summary growth rate doubling time. Added new function regional_runtimes summarises run time across regions. Updated estimate_infections interface expanded range options future_rt argument. Users can now choose set Rt time point referenced forecast date.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"bug-fixes-1-2-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"EpiNow2 1.2.1","text":"Fixed y axis max plot_summary. Fix normalisation delay generation time distributions @sbfnk. impact nowcast infections reproduction number estimate. Updated discretised_gamma_pmf (discretised truncated Gamma PMF) constrain gamma shape (inverse) scale parameters positive finite (alpha > 0 beta > 0). Fixed readLines incomplete final line warnings. Fix @medewitt internal fit_chain function interaction rstan timing may introduced exception caused whole regions fail. show current unit tests exploration using examples indicating gap testing.","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"other-changes-1-2-1","dir":"Changelog","previous_headings":"","what":"Other changes","title":"EpiNow2 1.2.1","text":"Updates interface specifying output returned. Moved inherited stan arguments create_stan_args option override using stan_args. leads breaking changes - see examples details new interface. Updated example documentation reflect new interface. Added samples argument get_regional_results make loading samples optional. also allows samples dropped using regional_epinow reduces RAM usage. Cleaned wrapper functions move individual jobs functions. Adds testing high level functions low level unit testing. Adds csv download button interactive table regional summary table. Makevars updated remove dependency GNU Make @hsbadr","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"epinow2-110","dir":"Changelog","previous_headings":"","what":"EpiNow2 1.1.0","title":"EpiNow2 1.1.0","text":"CRAN release: 2020-09-01 Implemented reporting templates Bug fix estimate reporting Added additional reporting runtime errors Examples global_map country_map expanded @ellisp Improved ISO code matching global_map @ellisp Improvements data frames tibbles supported inputs. Updated reporting templates Updated reporting estimates clearly summarise cases infection report date. Made region summary plots optional. Made reporting decimal places standardised across metrics. README updated @kathsherratt Logging added @joeHickson Updated plotting limited scaling reported data (prevents upper CIs skewing plot). Added uncertainty plot bounds control y axis plots clarity purposes. regional_summary now saves input reported cases data reported_cases.csv. Added optional delay model Rt estimated directly data. option supported using backcalculation .","code":""},{"path":"https://epiforecasts.io/EpiNow2/dev/news/index.html","id":"epinow2-100","dir":"Changelog","previous_headings":"","what":"EpiNow2 1.0.0","title":"EpiNow2 1.0.0","text":"Rebased package EpiNow Implemented backcalculation, estimation, forecasting, bootstrapped distribution fitting. Added options estimate time-varying reproduction number using Gaussian process (stationary non-stationary), combined optional user supplied breakpoints. Alternatively static reproduction number can assumed combined breakpoints becomes piecewise linear.","code":""}]
